{"version":3,"file":"PresentationTool-ocAgrSyq.js","sources":["../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js","../../../channels/src/constants.ts","../../../channels/src/helper.ts","../../../channels/src/channels.ts","../../../visual-editing-helpers/dist/_chunks/urlStringToPath-FefM00gz.js","../../../visual-editing-helpers/dist/index.js","../../src/components/ErrorCard.tsx","../../src/usePresentationTool.ts","../../src/editor/PresentationPaneRouterProvider.tsx","../../src/editor/DocumentListPane.tsx","../../src/editor/DocumentListPanel.tsx","../../src/editor/DocumentPane.tsx","../../src/editor/DocumentPanel.tsx","../../src/editor/ContentEditor.tsx","../../src/loader/context.tsx","../../src/loader/turboChargeResultIfSourceMap.tsx","../../src/loader/utils.ts","../../src/loader/LiveStoreProvider.tsx","../../src/loader/useLiveQuery.ts","../../src/loader/LoaderQueries.tsx","../../src/panels/PanelsContext.tsx","../../src/panels/Panel.tsx","../../src/panels/PanelResizer.tsx","../../src/panels/usePanelId.ts","../../src/lib/debounce.ts","../../src/panels/usePanelsStorage.ts","../../src/panels/util.ts","../../src/panels/Panels.tsx","../../src/perf/HoldEditState.tsx","../../src/PresentationNavigateProvider.tsx","../../src/PresentationParamsProvider.tsx","../../src/PresentationProvider.tsx","../../src/preview/IFrame.tsx","../../src/preview/PreviewLocationInput.tsx","../../src/preview/PreviewFrame.tsx","../../src/parsePath.ts","../../src/useParams.ts","../../src/usePreviewUrl.ts","../../src/PresentationTool.tsx","../../src/useDocumentsOnPage.ts","../../src/useLocalState.ts"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import type { MsgType } from './types'\n\nexport const RESPONSE_TIMEOUT = 1000\nexport const HEARTBEAT_INTERVAL = 3000\n\nexport const INTERNAL_MSG_TYPES = [\n  'channel/disconnect',\n  'channel/response',\n] satisfies MsgType[]\n\nexport const HANDSHAKE_MSG_TYPES = [\n  'handshake/syn',\n  'handshake/syn-ack',\n  'handshake/ack',\n] satisfies MsgType[]\n\nexport const HEARTBEAT_MSG_TYPES = ['channel/heartbeat'] satisfies MsgType[]\n","import { HANDSHAKE_MSG_TYPES, INTERNAL_MSG_TYPES } from './constants'\nimport type { HandshakeMsgType, InternalMsgType, MsgType } from './types'\n\nexport const isObject = (value: unknown): value is Record<string, unknown> => {\n  return Boolean(value) && typeof value === 'object' && !Array.isArray(value)\n}\n\nexport const isInternalMessage = (\n  type: MsgType | InternalMsgType,\n): type is InternalMsgType => {\n  return INTERNAL_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isHandshakeMessage = (\n  type: MsgType | InternalMsgType,\n): type is HandshakeMsgType => {\n  return HANDSHAKE_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isHeartbeatMessage = (\n  type: MsgType | InternalMsgType,\n): type is 'channel/heartbeat' => {\n  return type === 'channel/heartbeat'\n}\n","import { v4 as uuid } from 'uuid'\n\nimport { HEARTBEAT_INTERVAL, RESPONSE_TIMEOUT } from './constants'\nimport {\n  isHandshakeMessage,\n  isHeartbeatMessage,\n  isInternalMessage,\n  isObject,\n} from './helper'\nimport type {\n  ChannelMsg,\n  ChannelOptions,\n  ChannelReturns,\n  Connection,\n  ConnectionStatus,\n  Msg,\n  MsgType,\n  ProtocolMsg,\n  ToArgs,\n} from './types'\n\n/**\n *\n * @public\n */\nexport function createChannel<T extends ChannelMsg>(\n  config: ChannelOptions<T>,\n): ChannelReturns<T> {\n  const inFrame = window.self !== window.top\n\n  const connections: Connection[] = config.connections.map((connection) => {\n    // const { target, targetOrigin, id: targetId } = connection\n    return {\n      buffer: [],\n      config: connection,\n      heartbeat: null,\n      id: null,\n      status: 'fresh',\n      // target,\n      // targetId,\n      // targetOrigin,\n    }\n  })\n\n  function flush(connection: Connection) {\n    const toFlush = [...connection.buffer]\n    connection.buffer.splice(0, connection.buffer.length)\n    toFlush.forEach(({ type, data }) => {\n      post(connection, type, data)\n    })\n  }\n\n  function startHeartbeat(connection: Connection) {\n    stopHeartbeat(connection)\n    if (connection.config.heartbeat) {\n      const heartbeatInverval =\n        typeof connection.config.heartbeat === 'number'\n          ? connection.config.heartbeat\n          : HEARTBEAT_INTERVAL\n      connection.heartbeat = window.setInterval(() => {\n        send('channel/heartbeat', undefined, [connection])\n      }, heartbeatInverval)\n    }\n  }\n  function stopHeartbeat(connection: Connection) {\n    if (connection.heartbeat) {\n      window.clearInterval(connection.heartbeat)\n    }\n  }\n\n  function setConnectionStatus(\n    connection: Connection,\n    newStatus: ConnectionStatus,\n  ) {\n    const prevStatus = connection.status\n    if (prevStatus !== newStatus) {\n      connection.status = newStatus\n      config.onStatusUpdate?.(newStatus, prevStatus, connection)\n      if (newStatus === 'connected') {\n        flush(connection)\n        startHeartbeat(connection)\n      }\n      if (newStatus === 'disconnected') {\n        stopHeartbeat(connection)\n      }\n    }\n  }\n\n  function findConnection(e: MessageEvent<unknown>) {\n    const { source, origin, data } = e\n    if (isObject(data)) {\n      return connections.find((connection) => {\n        return (\n          config.id === data.to &&\n          connection.config.id === data.from &&\n          connection.config.target === source &&\n          (connection.config.targetOrigin === origin ||\n            connection.config.targetOrigin === '*') &&\n          // Must match the connection id or be a handshake\n          (connection.id === data.connectionId ||\n            isHandshakeMessage(data.type as MsgType))\n        )\n      })\n    }\n    return undefined\n  }\n\n  function post<K extends T['type']>(\n    connection: Connection,\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    return new Promise<string>((resolve, reject) => {\n      const msg: Msg = {\n        id: uuid(),\n        type,\n        connectionId: connection.id,\n        from: config.id,\n        to: connection.config.id,\n        data,\n      }\n\n      const isInternal = isInternalMessage(type)\n      const isHandshake = isHandshakeMessage(type)\n      const isHeartbeat = isHeartbeatMessage(type)\n      const activeConnection = connections.find(\n        (c) => c.id === connection.id && c.status === 'connected',\n      )\n\n      // Always send internal messages\n      // Otherwise send if connection is active\n      if (isInternal || isHandshake || isHeartbeat || activeConnection) {\n        if (!isInternal || isHeartbeat) {\n          // If the message isn’t internal, and the connection is active, we should receive a response. If we don't, reject, as the channel is unhealthy\n          const maxWait = setTimeout(() => {\n            // The connection may have changed, so only reject if the IDs match\n            if (msg.connectionId === connection.id) {\n              reject({\n                reason: `Received no response to message '${msg.id}' on client '${config.id}'`,\n                msg,\n                connection,\n              })\n            } else {\n              resolve(msg.id)\n            }\n          }, RESPONSE_TIMEOUT)\n\n          const transact = (e: MessageEvent<Msg>) => {\n            const { data: eventData } = e\n            if (\n              eventData.type === 'channel/response' &&\n              eventData.data?.responseTo &&\n              eventData.data.responseTo === msg.id\n            ) {\n              window.removeEventListener('message', transact, false)\n              clearTimeout(maxWait)\n              resolve(msg.id)\n            }\n          }\n          window.addEventListener('message', transact, false)\n        }\n\n        try {\n          // Handshakes may be dispatched before an iframe has loaded in which case the targetOrigin will not match, so send handshakes using '*'\n          const targetOrigin = isHandshake\n            ? '*'\n            : connection.config.targetOrigin\n          connection.config.target.postMessage(msg, { targetOrigin })\n          // Don't wait for internal message or handshake responses\n          if (isInternal || isHandshake) resolve(msg.id)\n          return\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.error('Failed to postMessage', e, { msg, connection })\n          reject({\n            reason: `Failed to postMessage '${msg.id}' on client '${config.id}'`,\n            msg,\n            connection,\n          })\n        }\n      }\n\n      // Buffer messages if we have a fresh connection or connecting\n      if (connection.status === 'fresh' || connection.status === 'connecting') {\n        connection.buffer.push({\n          type,\n          data,\n        })\n        resolve(msg.id)\n      }\n\n      reject({\n        reason: `Will not send message '${msg.id}' on client '${config.id}'`,\n        msg,\n        connection,\n      })\n    })\n  }\n\n  function postMany<K extends T['type']>(\n    connections: Connection[],\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    return Promise.allSettled(\n      connections.map((connection) => post(connection, type, data)),\n    )\n  }\n\n  function handleHandshake(\n    connection: Connection,\n    e: MessageEvent<ProtocolMsg>,\n  ) {\n    if (e.data.type === 'handshake/syn') {\n      const id = e.data.data?.id || connection.id\n      connection.id = id\n      post(connection, 'handshake/syn-ack', { id })\n    }\n    if (e.data.type === 'handshake/syn-ack') {\n      const id = e.data.data?.id || connection.id\n      connection.id = id\n      setConnectionStatus(connection, 'connected')\n      post(connection, 'handshake/ack', { id })\n    }\n    if (e.data.type === 'handshake/ack') {\n      const id = e.data.data?.id || connection.id\n      connection.id = id\n      setConnectionStatus(connection, 'connected')\n    }\n  }\n\n  function handleEvents(e: MessageEvent) {\n    const connection = findConnection(e)\n    if (!connection) return\n    const { data } = e\n    if (isHandshakeMessage(data.type)) {\n      handleHandshake(connection, e)\n    } else if (data.type === 'channel/disconnect') {\n      setConnectionStatus(connection, 'disconnected')\n    } else if (data.type === 'channel/response') {\n      // Do nothing for now\n    } else {\n      // eslint-disable-next-line no-warning-comments\n      // @todo Ugly type casting\n      const args = [data.type, data.data] as ToArgs<T>\n      config.handler(...args)\n      post(connection, 'channel/response', { responseTo: data.id })\n    }\n  }\n\n  function disconnect() {\n    window.removeEventListener('message', handleEvents, false)\n    const connectionsToDisconnect = connections.filter(\n      ({ status }) => status === 'connecting' || status === 'connected',\n    )\n    if (!connectionsToDisconnect.length) return\n    postMany(connectionsToDisconnect, 'channel/disconnect')\n    connectionsToDisconnect.forEach((connection) => {\n      setConnectionStatus(connection, 'disconnected')\n    })\n  }\n\n  function connect() {\n    window.addEventListener('message', handleEvents, false)\n    const inactiveConnections = connections.filter((connection) =>\n      ['disconnected', 'fresh', 'unhealthy'].includes(connection.status),\n    )\n    return Promise.all(\n      inactiveConnections.map((connection) => {\n        setConnectionStatus(connection, 'connecting')\n        return post(connection, 'handshake/syn', { id: uuid() })\n      }),\n    )\n  }\n\n  /**\n   * Dispatch a message to all connections\n   * @param type The message type\n   * @param data The message body\n   * @returns void\n   */\n  async function send(\n    type: T['type'],\n    data?: T['data'],\n    connectionSubset?: Connection[],\n  ) {\n    const results = await postMany(connectionSubset || connections, type, data)\n    results.forEach((result) => {\n      if (result.status === 'rejected') {\n        const connection = connections.find(\n          (connection) =>\n            connection.status === 'connected' &&\n            connection.id === result.reason.connection.id,\n        )\n        if (connection) {\n          setConnectionStatus(connection, 'unhealthy')\n        }\n      }\n    })\n    return results\n  }\n\n  connect()\n\n  return {\n    disconnect,\n    inFrame,\n    send,\n  }\n}\n","function n(n){return\"object\"==typeof n&&null!==n&&!Array.isArray(n)}function e(n){return null!==n&&Array.isArray(n)}function t(n){let t=\"\";for(const r of n)\"string\"!=typeof r?\"number\"!=typeof r?e(r)?(t&&(t+=\":\"),t+=`${r.join(\",\")}}`):r._key&&(t&&(t+=\":\"),t+=`${r._key}`):(t&&(t+=\":\"),t+=`${r}`):(t&&(t+=\".\"),t+=r);return t}const r=/^([A-Za-z]+):([0-9]+)$/,o=/^([A-Za-z]+):([0-9]+),([0-9]+)$/,u=/^([A-Za-z]+):([a-z0-9]+)$/;function s(n){const e=[];for(const t of n.split(\".\")){const n=r.exec(t);if(n){e.push(n[1],Number(n[2]));continue}const s=o.exec(t);if(s){e.push(s[1],[Number(s[2]),Number(s[3])]);continue}const c=u.exec(t);c?e.push(c[1],{_key:c[2]}):e.push(t)}return e}export{e as a,n as i,t as p,s as u};//# sourceMappingURL=urlStringToPath-FefM00gz.js.map\n","export{p as pathToUrlString,u as urlStringToPath}from\"./_chunks/urlStringToPath-FefM00gz.js\";function t(t,r){return`${t}-${\"string\"==typeof r?r:JSON.stringify(r)}`}const r=\"undefined\"!=typeof window&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform),e={alt:\"altKey\",ctrl:\"ctrlKey\",mod:r?\"metaKey\":\"ctrlKey\",shift:\"shiftKey\"};function n(t,r){return t.every((t=>e[t]?r[e[t]]:r.key===t.toUpperCase()))}function o(t){return t.key===(r?\"Meta\":\"Ctrl\")}function i(t){return\"Alt\"===t.key}export{t as getQueryCacheKey,i as isAltKey,n as isHotkey,o as isModKey};//# sourceMappingURL=index.js.map\n","import {\n  Box,\n  Button,\n  Card,\n  CardProps,\n  Container,\n  Flex,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport { ReactElement, ReactNode } from 'react'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n  } & CardProps,\n): ReactElement {\n  const { children, message, onRetry, ...restProps } = props\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                An error occured\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && (\n              <Box>\n                <Button\n                  fontSize={1}\n                  mode=\"ghost\"\n                  onClick={onRetry}\n                  text=\"Retry\"\n                />\n              </Box>\n            )}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import { useContext } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\n\nexport function usePresentationTool(): PresentationContextValue {\n  const presentation = useContext(PresentationContext)\n\n  if (!presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","/* eslint-disable no-console */\n\nimport {\n  forwardRef,\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useMemo,\n} from 'react'\nimport { getPublishedId, useUnique } from 'sanity'\nimport {\n  BackLinkProps,\n  PaneRouterContext,\n  PaneRouterContextValue,\n  ReferenceChildLinkProps,\n} from 'sanity/desk'\nimport { StateLink, useRouter } from 'sanity/router'\n\nimport { DeskDocumentPaneParams, PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(\n  nextParams: Record<string, string | undefined>,\n) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return { ...obj, [key]: value }\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { deskParams, params } = usePresentationTool()\n\n  return (\n    <StateLink\n      {...props}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries({\n          ...deskParams,\n          preview: params.preview,\n        }),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { documentId, documentType, ...restProps } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{ path: documentId, type: documentType }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onDeskParams: (params: DeskDocumentPaneParams) => void\n    params: DeskDocumentPaneParams\n    previewUrl?: string\n    refs?: { _id: string; _type: string }[]\n  }>,\n): ReactElement {\n  const { children, params, onDeskParams, previewUrl, refs } = props\n\n  const { state: routerState, resolvePathFromState } = useRouter()\n\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] =\n    useCallback(\n      (nextParams) => {\n        const path = resolvePathFromState(routerState)\n        const qs = resolveQueryStringFromParams({\n          ...routerSearchParams,\n          ...nextParams,\n        })\n        return `${path}${qs}`\n      },\n      [resolvePathFromState, routerSearchParams, routerState],\n    )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      params: params as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const { childId, ...restProps } = childLinkProps\n        const ref = refs?.find((r) => getPublishedId(r._id) === childId)\n\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                path: ref._id,\n                type: ref._type,\n                _searchParams: Object.entries({ preview: previewUrl }),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink,\n      ReferenceChildLink,\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        onDeskParams({\n          ...nextParams,\n          // eslint-disable-next-line no-warning-comments\n          // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n          inspect: nextParams.inspect ?? undefined,\n        } as DeskDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onDeskParams, params, previewUrl, refs])\n\n  return (\n    <PaneRouterContext.Provider value={context}>\n      {children}\n    </PaneRouterContext.Provider>\n  )\n}\n","import { Card, Code, ErrorBoundary, Flex, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport {\n  DeskToolProvider,\n  DocumentListPane as DeskDocumentListPane,\n  PaneLayout,\n  PaneNode,\n} from 'sanity/desk'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n  const { devMode } = usePresentationTool()\n\n  const pane: Extract<PaneNode, { type: 'documentList' }> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: { ids: refs.map((r) => r._id) },\n      },\n      schemaTypeName: '',\n      title: 'Documents on this page',\n      type: 'documentList',\n    }),\n    [refs],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const deskParams = useMemo(() => ({}), [])\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document list\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <DeskToolProvider>\n          <PresentationPaneRouterProvider\n            params={deskParams}\n            onDeskParams={onDeskParams}\n            previewUrl={previewUrl}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <DeskDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </DeskToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import { ReactElement } from 'react'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPane } from './DocumentListPane'\n\nexport function DocumentListPanel(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n\n  return (\n    <DocumentListPane\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refs}\n    />\n  )\n}\n","import { Card, Code, ErrorBoundary, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { Path } from 'sanity'\nimport {\n  DocumentPane as DeskDocumentPane,\n  DocumentPaneNode,\n  PaneLayout,\n  useDeskTool,\n} from 'sanity/desk'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  params: DeskDocumentPaneParams\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n}): ReactElement {\n  const { documentId, documentType, params, onDeskParams, onFocusPath } = props\n  const { devMode } = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, params])\n\n  const { setLayoutCollapsed } = useDeskTool()\n  const handleRootCollapse = useCallback(\n    () => setLayoutCollapsed(true),\n    [setLayoutCollapsed],\n  )\n  const handleRootExpand = useCallback(\n    () => setLayoutCollapsed(false),\n    [setLayoutCollapsed],\n  )\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document editor\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout\n        style={{ height: '100%' }}\n        onExpand={handleRootExpand}\n        onCollapse={handleRootCollapse}\n      >\n        <PresentationPaneRouterProvider\n          onDeskParams={onDeskParams}\n          params={params}\n        >\n          <DeskDocumentPane\n            paneKey=\"document\"\n            index={1}\n            itemId=\"document\"\n            pane={paneDocumentNode}\n            onFocusPath={onFocusPath}\n          />\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import { ReactElement, useCallback, useEffect } from 'react'\nimport { Path, SanityDocument, useEditState } from 'sanity'\nimport { DeskToolProvider } from 'sanity/desk'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentPane } from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId: string\n  documentType: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (documentId: string, path: Path) => void\n  onDocumentChange: (document: SanityDocument | null) => void\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    onDocumentChange,\n  } = props\n\n  const editState = useEditState(documentId, documentType)\n  const documentValue = editState.draft || editState.published\n\n  // Sync changes to the document being edited back up to the live loaders\n  useEffect(\n    () => onDocumentChange(documentValue),\n    [documentValue, onDocumentChange],\n  )\n\n  const handleFocusPath = useCallback(\n    (path: Path) => {\n      if (documentValue?._id) {\n        onFocusPath(documentValue._id, path)\n      }\n    },\n    [documentValue, onFocusPath],\n  )\n\n  return (\n    <DeskToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        params={deskParams}\n        onDeskParams={onDeskParams}\n        onFocusPath={handleFocusPath}\n      />\n    </DeskToolProvider>\n  )\n}\n","import { ReactElement } from 'react'\nimport { Path, SanityDocument } from 'sanity'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPanel } from './DocumentListPanel'\nimport { DocumentPanel } from './DocumentPanel'\n\nexport function ContentEditor(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId?: string\n  documentType?: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (documentId: string, path: Path) => void\n  onDocumentChange: (document: SanityDocument | null) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    onDocumentChange,\n    previewUrl,\n    refs,\n  } = props\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        deskParams={deskParams}\n        documentId={documentId}\n        documentType={documentType}\n        onDeskParams={onDeskParams}\n        onFocusPath={onFocusPath}\n        onDocumentChange={onDocumentChange}\n      />\n    )\n  }\n\n  return (\n    <DocumentListPanel\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refs}\n    />\n  )\n}\n","import { createContext } from 'react'\n\nimport { DefineListenerContext } from './types'\nimport { QueryCacheKey } from './utils'\n\n/**\n * @internal\n */\nexport const defineListenerContext =\n  createContext<DefineListenerContext | null>(null)\n\n/**\n * If it's `null` then the listener should be treated as `success`, otherwise if a listener isn't in the array it should be considered as `loading`\n * @internal\n */\nexport const LoadedListenersContext = createContext<QueryCacheKey[] | null>(\n  null,\n)\n\n/**\n * Aids in debugging, notifying if the parent has a GroqStoreProvider, or a LiveStoreProvider, and is thus `live`.\n * This is helpful as the `useLiveQuery` hook itself works even if no provider is present, but it will not be `live`.\n * @internal\n */\nexport const IsEnabledContext = createContext<boolean>(false)\n","import type {\n  ClientPerspective,\n  ContentSourceMap,\n  SanityDocument,\n} from '@sanity/client'\nimport { applySourceDocuments } from '@sanity/client/csm'\nimport {\n  unstable__documentsCache,\n  unstable__getDocumentCacheKey,\n} from '@sanity/groq-store'\n\nlet warnedAboutCrossDatasetReference = false\n\nexport function turboChargeResultIfSourceMap(\n  liveDocument: SanityDocument | null,\n  projectId: string,\n  dataset: string,\n  result: unknown,\n  perspective: ClientPerspective,\n  resultSourceMap?: ContentSourceMap,\n): any {\n  if (perspective === 'raw') {\n    throw new Error(\n      'turboChargeResultIfSourceMap does not support raw perspective',\n    )\n  }\n  return applySourceDocuments(result, resultSourceMap, (sourceDocument) => {\n    if (sourceDocument._projectId) {\n      // @TODO Handle cross dataset references\n      if (!warnedAboutCrossDatasetReference) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Cross dataset references are not supported yet, ignoring source document',\n          sourceDocument,\n        )\n        warnedAboutCrossDatasetReference = true\n      }\n      return undefined\n    }\n    // If the draft matches, use that as it's the most up to date\n    if (\n      liveDocument?._id === sourceDocument._id &&\n      liveDocument?._type === sourceDocument._type\n    ) {\n      return liveDocument\n    }\n    // Fallback to general documents cache\n    const key = unstable__getDocumentCacheKey(\n      { projectId, dataset, perspective },\n      sourceDocument,\n    )\n    return unstable__documentsCache.get(key)\n  })\n}\n","import type { ClientPerspective, QueryParams } from '@sanity/client'\nimport { useMemo } from 'react'\n\n/**\n * @internal\n */\nexport type QueryCacheKey = `${ClientPerspective}-${string}-${string}`\n/**\n * @internal\n */\nexport function getQueryCacheKey(\n  perspective: ClientPerspective,\n  query: string,\n  params: QueryParams,\n): QueryCacheKey {\n  return `${perspective}-${query}-${JSON.stringify(params)}`\n}\n\n/**\n * Return params that are stable with deep equal as long as the key order is the same\n * @internal\n */\nexport function useParams(\n  params?: undefined | null | QueryParams,\n): QueryParams {\n  const stringifiedParams = useMemo(\n    () => JSON.stringify(params || {}),\n    [params],\n  )\n  return useMemo(\n    () => JSON.parse(stringifiedParams) as QueryParams,\n    [stringifiedParams],\n  )\n}\n","import type {\n  ClientConfig,\n  ClientPerspective,\n  ContentSourceMap,\n  QueryParams,\n  SanityClient,\n  SanityDocument,\n} from '@sanity/client'\nimport {\n  DocumentCachePerspective,\n  unstable__documentsCache,\n  unstable__getDocumentCacheKey,\n} from '@sanity/groq-store'\nimport { applyPatch } from 'mendoza'\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  useSyncExternalStore,\n} from 'react'\n\nimport { defineListenerContext as Context, IsEnabledContext } from './context'\nimport { turboChargeResultIfSourceMap } from './turboChargeResultIfSourceMap'\nimport type {\n  DefineListenerContext,\n  ListenerGetSnapshot,\n  ListenerSubscribe,\n  Logger,\n} from './types'\nimport { getQueryCacheKey, type QueryCacheKey } from './utils'\n\nexport type { Logger }\n\n/**\n * @internal\n */\nexport interface LiveStoreProviderProps {\n  children: React.ReactNode\n  /**\n   * The Sanity client to use for fetching data and listening to mutations.\n   */\n  client: SanityClient\n  /**\n   * How frequently queries should be refetched in the background to refresh the parts of queries that can't be source mapped.\n   * Setting it to `0` will disable background refresh.\n   * @defaultValue 10000\n   */\n  refreshInterval?: number\n  perspective: ClientPerspective\n  liveDocument: SanityDocument | null\n}\n/**\n * @internal\n */\nconst LiveStoreProvider = memo(function LiveStoreProvider(\n  props: LiveStoreProviderProps,\n) {\n  const {\n    liveDocument,\n    children,\n    client,\n    refreshInterval = 2000,\n    perspective,\n  } = props\n  if (perspective === 'raw') {\n    throw new Error('LiveStoreProvider does not support the raw perspective')\n  }\n\n  const [subscriptions, setSubscriptions] = useState<QueryCacheKey[]>([])\n  const [snapshots] = useState<QuerySnapshotsCache>(() => new Map())\n  const hooks = useHooks(setSubscriptions)\n  const [context] = useState<DefineListenerContext>(() => {\n    return function defineListener<QueryResult>(\n      initialSnapshot: QueryResult,\n      query: string,\n      params: QueryParams,\n    ) {\n      const key = getQueryCacheKey(perspective, query, params)\n\n      const subscribe: ListenerSubscribe = (onStoreChange) => {\n        const unsubscribe = hooks.subscribe(\n          key,\n          perspective,\n          query,\n          params,\n          onStoreChange,\n        )\n\n        return () => unsubscribe()\n      }\n      const getSnapshot: ListenerGetSnapshot<{\n        result: QueryResult\n        resultSourceMap?: ContentSourceMap\n      }> = () =>\n        snapshots.get(key) as unknown as {\n          result: QueryResult\n          resultSourceMap?: ContentSourceMap\n        }\n\n      return { subscribe, getSnapshot }\n    } satisfies DefineListenerContext\n  })\n  const [turboIds, setTurboIds] = useState<string[]>([])\n  const turboIdsFromSourceMap = useCallback(\n    (contentSourceMap: ContentSourceMap) => {\n      // This handler only adds ids, on each query fetch. But that's ok since <Turbo /> purges ids that are unused\n      const nextTurboIds = new Set<string>()\n      if (contentSourceMap.documents?.length) {\n        for (const { _id } of contentSourceMap.documents) {\n          // @TODO only add local ids, not remote ones\n          nextTurboIds.add(_id)\n        }\n      }\n      setTurboIds((prevTurboIds) => {\n        const mergedTurboIds = Array.from(\n          new Set([...prevTurboIds, ...nextTurboIds]),\n        )\n        if (\n          JSON.stringify(mergedTurboIds.sort()) ===\n          JSON.stringify(prevTurboIds.sort())\n        ) {\n          return prevTurboIds\n        }\n        return mergedTurboIds\n      })\n    },\n    [],\n  )\n\n  return (\n    <Context.Provider value={context}>\n      <IsEnabledContext.Provider value>{children}</IsEnabledContext.Provider>\n      <Turbo\n        liveDocument={liveDocument}\n        cache={hooks.cache}\n        client={client}\n        setTurboIds={setTurboIds}\n        snapshots={snapshots}\n        turboIds={turboIds}\n        perspective={perspective}\n      />\n      {subscriptions.map((key) => {\n        if (!hooks.cache.has(key)) return null\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const { query, params, listeners } = hooks.cache.get(key)!\n        return (\n          <QuerySubscription\n            key={key}\n            liveDocument={liveDocument}\n            client={client}\n            listeners={listeners}\n            params={params}\n            query={query}\n            refreshInterval={refreshInterval}\n            snapshots={snapshots}\n            turboIdsFromSourceMap={turboIdsFromSourceMap}\n            perspective={perspective}\n          />\n        )\n      })}\n    </Context.Provider>\n  )\n})\nLiveStoreProvider.displayName = 'LiveStoreProvider'\nexport default LiveStoreProvider\n\ninterface QuerySubscriptionProps\n  extends Required<Pick<LiveStoreProviderProps, 'client' | 'refreshInterval'>> {\n  liveDocument: SanityDocument | null\n  query: string\n  params: QueryParams\n  listeners: Set<() => void>\n  turboIdsFromSourceMap: (contentSourceMap: ContentSourceMap) => void\n  snapshots: QuerySnapshotsCache\n  perspective: ClientPerspective\n}\nconst QuerySubscription = memo(function QuerySubscription(\n  props: QuerySubscriptionProps,\n) {\n  const {\n    liveDocument,\n    client,\n    refreshInterval,\n    query,\n    params,\n    listeners,\n    snapshots,\n    turboIdsFromSourceMap,\n    perspective,\n  } = props\n  const { projectId, dataset } = useMemo(() => {\n    const { projectId, dataset } = client.config()\n    return { projectId, dataset } as Required<\n      Pick<ClientConfig, 'projectId' | 'dataset'>\n    >\n  }, [client])\n\n  // Make sure any async errors bubble up to the nearest error boundary\n  const [error, setError] = useState<unknown>(null)\n  if (error) throw error\n\n  const [revalidate, startRefresh] = useRevalidate({ refreshInterval })\n  const shouldRefetch = revalidate === 'refresh' || revalidate === 'inflight'\n  useEffect(() => {\n    if (!shouldRefetch) {\n      return\n    }\n\n    let fulfilled = false\n    const controller = new AbortController()\n    // eslint-disable-next-line no-inner-declarations\n    async function effect() {\n      const { signal } = controller\n      const { result, resultSourceMap } = await client.fetch(query, params, {\n        tag: 'presentation-loader',\n        signal,\n        perspective,\n        filterResponse: false,\n      })\n\n      if (!signal.aborted) {\n        snapshots.set(getQueryCacheKey(perspective, query, params), {\n          result: resultSourceMap\n            ? turboChargeResultIfSourceMap(\n                liveDocument,\n                projectId,\n                dataset,\n                result,\n                perspective,\n                resultSourceMap,\n              )\n            : result,\n          resultSourceMap,\n        })\n\n        if (resultSourceMap) {\n          turboIdsFromSourceMap(resultSourceMap)\n        }\n\n        // Notify listeners that snapshots are updated\n        for (const listener of listeners.values()) {\n          listener()\n        }\n        fulfilled = true\n      }\n    }\n    const onFinally = startRefresh()\n    effect()\n      .catch((error) => {\n        if (error.name !== 'AbortError') {\n          setError(error)\n        }\n      })\n      .finally(onFinally)\n    return () => {\n      if (!fulfilled) {\n        controller.abort()\n      }\n    }\n  }, [\n    liveDocument,\n    client,\n    dataset,\n    listeners,\n    params,\n    projectId,\n    query,\n    shouldRefetch,\n    snapshots,\n    startRefresh,\n    turboIdsFromSourceMap,\n    perspective,\n  ])\n\n  return null\n})\nQuerySubscription.displayName = 'QuerySubscription'\n\ntype QuerySnapshotsCache = Map<\n  QueryCacheKey,\n  { result: unknown; resultSourceMap?: ContentSourceMap }\n>\n\nfunction onVisibilityChange(onStoreChange: () => void): () => void {\n  document.addEventListener('visibilitychange', onStoreChange)\n  return () => document.removeEventListener('visibilitychange', onStoreChange)\n}\n\n/**\n * Keeps track of when revalidation and activities should be paused\n */\nfunction useShouldPause(): boolean {\n  const [online, setOnline] = useState(false)\n  useEffect(() => {\n    setOnline(navigator.onLine)\n    const online = () => setOnline(true)\n    const offline = () => setOnline(false)\n    window.addEventListener('online', online)\n    window.addEventListener('offline', offline)\n    return () => {\n      window.removeEventListener('online', online)\n      window.removeEventListener('offline', offline)\n    }\n  }, [])\n  const visibilityState = useSyncExternalStore(\n    onVisibilityChange,\n    () => document.visibilityState,\n    () => 'hidden' satisfies DocumentVisibilityState,\n  )\n\n  // Should pause activity when offline\n  if (!online) {\n    return true\n  }\n\n  // Should pause when the document isn't visible, as it's likely the user isn't looking at the page\n  if (visibilityState === 'hidden') {\n    return true\n  }\n\n  return false\n}\n\n/**\n * 'hit' - the cache is fresh and valid\n * 'stale' - the cache should revalidate, but can't/shouldn't yet (offline, visibility = hidden)\n * 'refresh' - stale cache, and now is a great time to start refreshing\n * 'inflight' - refreshing cache, revalidate events should be ignored\n */\ntype RevalidateState = 'hit' | 'stale' | 'refresh' | 'inflight'\n/**\n * Keeps track of when queries should revalidate\n */\nfunction useRevalidate(\n  props: Pick<LiveStoreProviderProps, 'refreshInterval'>,\n): [RevalidateState, () => () => void] {\n  const { refreshInterval } = props\n\n  const shouldPause = useShouldPause()\n  const [state, setState] = useState<RevalidateState>('hit')\n\n  // Keep track of indicators for when revalidation should be 'paused'\n  // Like if we're currently offline, or the document isn't visible\n  // Basically if 'stale' and all good we return 'refresh'\n\n  // Next keep track of staleness itself. If we come back online, on a windows focus event\n  // or on a refreshInterval timeout\n  // Basically it controls if cache should be 'hit' or 'stale'\n\n  // How to handle refresh to inflight?\n\n  const startRefresh = useCallback(() => {\n    setState('inflight')\n    return () => setState('hit')\n  }, [])\n\n  // Revalidate on refreshInterval\n  useEffect(() => {\n    // If refreshInterval is nullish then we don't want to refresh.\n    // Inflight means it's already refreshing and we pause the countdown.\n    // It's only necessary to start the countdown if the cache isn't already stale\n    if (!refreshInterval || state !== 'hit') {\n      return\n    }\n    const timeout = setTimeout(() => setState('stale'), refreshInterval)\n    return () => clearTimeout(timeout)\n  }, [refreshInterval, state])\n  // Revalidate on windows focus\n  useEffect(() => {\n    if (state !== 'hit') {\n      return\n    }\n    const onFocus = () => setState('stale')\n    window.addEventListener('focus', onFocus)\n    return () => window.removeEventListener('focus', onFocus)\n  }, [refreshInterval, state])\n  // Revalidate on changes to shouldPause\n  useEffect(() => {\n    // Mark as stale pre-emptively if we're offline or the document isn't visible\n    if (shouldPause && state === 'hit') {\n      setState('stale')\n    }\n    // If not paused we can mark stale as ready for refresh\n    if (!shouldPause && state === 'stale') {\n      setState('refresh')\n    }\n  }, [shouldPause, state])\n\n  return [state, startRefresh]\n}\n\ntype LiveStoreQueryCacheMap = Map<\n  QueryCacheKey,\n  {\n    query: string\n    params: QueryParams\n    perspective: ClientPerspective\n    listeners: Set<() => void>\n  }\n>\n\n/**\n * Keeps track of store subscribers per cache key, in a way that's designed for useSyncExternalStore.\n * The main difference from a typical subscription state with useEffect is that `adding` and `cleanup`\n * is wholly managed by the `subscribe` function in `useSyncExternalStore`, instead of lifecycles in useEffect.\n * And since the `onStoreChange` callback, provided to `subscribe`, notifies React when to re-render,\n * there is no need to use `setState` to trigger a re-render. That's why the Map is persisted in `useState` but the state setter isn't used.\n */\nfunction useHooks(\n  setSubscriptions: React.Dispatch<React.SetStateAction<QueryCacheKey[]>>,\n): {\n  cache: LiveStoreQueryCacheMap\n  subscribe: (\n    key: QueryCacheKey,\n    perspective: ClientPerspective,\n    query: string,\n    params: QueryParams,\n    listener: () => void,\n  ) => () => void\n} {\n  const [cache] = useState<LiveStoreQueryCacheMap>(() => new Map())\n  const subscribe = useCallback(\n    (\n      key: QueryCacheKey,\n      perspective: ClientPerspective,\n      query: string,\n      params: QueryParams,\n      listener: () => void,\n    ) => {\n      if (!cache.has(key)) {\n        cache.set(key, {\n          perspective,\n          query,\n          params,\n          listeners: new Set<() => void>(),\n        })\n        setSubscriptions((prevSubscriptions) => {\n          if (prevSubscriptions.includes(key)) {\n            return prevSubscriptions\n          }\n          return [...prevSubscriptions, key]\n        })\n      }\n      const hook = cache.get(key)\n      if (!hook || !hook.listeners) {\n        throw new TypeError('Inconsistent cache for key: ' + key)\n      }\n      const { listeners } = hook\n      listeners.add(listener)\n      return () => {\n        listeners.delete(listener)\n        if (listeners.size === 0) {\n          cache.delete(key)\n          setSubscriptions((prevSubscriptions) => {\n            if (prevSubscriptions.includes(key)) {\n              return prevSubscriptions.filter((sub) => sub !== key)\n            }\n            return prevSubscriptions\n          })\n        }\n      }\n    },\n    [cache, setSubscriptions],\n  )\n  return useMemo(() => ({ cache, subscribe }), [cache, subscribe])\n}\n\ninterface TurboProps extends Pick<LiveStoreProviderProps, 'client'> {\n  liveDocument: SanityDocument | null\n  turboIds: string[]\n  setTurboIds: React.Dispatch<React.SetStateAction<string[]>>\n  cache: LiveStoreQueryCacheMap\n  snapshots: QuerySnapshotsCache\n  perspective: DocumentCachePerspective\n}\n/**\n * A turbo-charged mutation observer that uses Content Source Maps to apply mendoza patches on your queries\n */\nconst Turbo = memo(function Turbo(props: TurboProps) {\n  const {\n    liveDocument,\n    client,\n    snapshots,\n    cache,\n    turboIds,\n    setTurboIds,\n    perspective,\n  } = props\n  const { projectId, dataset } = useMemo(() => {\n    const { projectId, dataset } = client.config()\n    return { projectId, dataset } as Required<\n      Pick<ClientConfig, 'projectId' | 'dataset'>\n    >\n  }, [client])\n\n  // Keep track of document ids that the active `useLiveQuery` hooks care about\n  useEffect(() => {\n    const nextTurboIds = new Set<string>()\n    for (const { perspective, query, params } of cache.values()) {\n      const key = getQueryCacheKey(perspective, query, params)\n      const snapshot = snapshots.get(key)\n      if (snapshot && snapshot.resultSourceMap?.documents?.length) {\n        for (const { _id } of snapshot.resultSourceMap.documents) {\n          nextTurboIds.add(_id)\n        }\n      }\n    }\n    const nextTurboIdsSnapshot = [...nextTurboIds].sort()\n    if (JSON.stringify(turboIds) !== JSON.stringify(nextTurboIdsSnapshot)) {\n      setTurboIds(nextTurboIdsSnapshot)\n    }\n  }, [cache, setTurboIds, snapshots, turboIds])\n\n  // Figure out which documents are missing from the cache\n  const [batch, setBatch] = useState<string[][]>([])\n  useEffect(() => {\n    const batchSet = new Set(batch.flat())\n    const nextBatch = new Set<string>()\n    for (const turboId of turboIds) {\n      if (\n        !batchSet.has(turboId) &&\n        !unstable__documentsCache.has(\n          unstable__getDocumentCacheKey(\n            { projectId, dataset, perspective },\n            { _id: turboId },\n          ),\n        )\n      ) {\n        nextBatch.add(turboId)\n      }\n    }\n    const nextBatchSlice = [...nextBatch].slice(0, 10)\n    if (nextBatchSlice.length === 0) return\n    setBatch((prevBatch) => [...prevBatch.slice(-10), nextBatchSlice])\n  }, [batch, dataset, perspective, projectId, turboIds])\n\n  const [lastMutatedDocumentId, setLastMutatedDocumentId] = useState<string>()\n  // Use the same listen instance and patch documents as they come in\n  useEffect(() => {\n    const subscription = client\n      .listen(\n        perspective === 'published'\n          ? `*[!(_id in path(\"drafts.**\"))]`\n          : `*[_id in path(\"drafts.**\")]`,\n        {},\n        {\n          events: ['mutation'],\n          effectFormat: 'mendoza',\n          includePreviousRevision: false,\n          includeResult: false,\n          tag: 'presentation-loader',\n        },\n      )\n      .subscribe((update) => {\n        if (update.type !== 'mutation' || !update.effects?.apply?.length) return\n        // Schedule a reach state update with the ID of the document that were mutated\n        // This react handler will apply the document to related source map snapshots\n        const key = unstable__getDocumentCacheKey(\n          { projectId, dataset, perspective },\n          { _id: update.documentId },\n        )\n        const cachedDocument = unstable__documentsCache.peek(key)\n        if (cachedDocument as SanityDocument) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const patchDoc = { ...cachedDocument } as any\n          delete patchDoc._rev\n          const patchedDocument = applyPatch(patchDoc, update.effects.apply)\n          unstable__documentsCache.set(key, patchedDocument)\n        }\n\n        setLastMutatedDocumentId(update.documentId)\n      })\n    return () => subscription.unsubscribe()\n  }, [client, dataset, perspective, projectId])\n\n  // If the last mutated document is in the list over turboIds then lets apply the source map\n  useEffect(() => {\n    if (!lastMutatedDocumentId || !turboIds.includes(lastMutatedDocumentId))\n      return\n\n    const updatedKeys: QueryCacheKey[] = []\n    for (const [key, snapshot] of snapshots.entries()) {\n      if (snapshot.resultSourceMap?.documents?.length) {\n        snapshot.result = turboChargeResultIfSourceMap(\n          liveDocument,\n          projectId,\n          dataset,\n          snapshot.result,\n          perspective,\n          snapshot.resultSourceMap,\n        )\n        updatedKeys.push(key)\n      }\n    }\n    for (const updatedKey of updatedKeys) {\n      const listeners = cache.get(updatedKey)?.listeners\n      if (listeners) {\n        for (const listener of listeners) {\n          listener()\n        }\n      }\n    }\n    setLastMutatedDocumentId(undefined)\n  }, [\n    liveDocument,\n    cache,\n    dataset,\n    lastMutatedDocumentId,\n    perspective,\n    projectId,\n    snapshots,\n    turboIds,\n  ])\n\n  const [lastDraftDocumentRev, setLastDraftDocumentRev] = useState<string>()\n  useEffect(() => {\n    if (!lastDraftDocumentRev) return\n\n    const updatedKeys: QueryCacheKey[] = []\n    for (const [key, snapshot] of snapshots.entries()) {\n      if (snapshot.resultSourceMap?.documents?.length) {\n        snapshot.result = turboChargeResultIfSourceMap(\n          liveDocument,\n          projectId,\n          dataset,\n          snapshot.result,\n          perspective,\n          snapshot.resultSourceMap,\n        )\n        updatedKeys.push(key)\n      }\n    }\n    for (const updatedKey of updatedKeys) {\n      const listeners = cache.get(updatedKey)?.listeners\n      if (listeners) {\n        for (const listener of listeners) {\n          listener()\n        }\n      }\n    }\n  }, [\n    cache,\n    dataset,\n    liveDocument,\n    lastDraftDocumentRev,\n    perspective,\n    projectId,\n    snapshots,\n  ])\n  useEffect(() => {\n    if (liveDocument) {\n      setLastDraftDocumentRev(liveDocument._rev)\n    }\n  }, [liveDocument])\n\n  return (\n    <>\n      {batch.map((ids) => (\n        <GetDocuments\n          key={JSON.stringify(ids)}\n          client={client}\n          projectId={projectId}\n          dataset={dataset}\n          ids={ids}\n          perspective={perspective}\n        />\n      ))}\n    </>\n  )\n})\nTurbo.displayName = 'Turbo'\n\ninterface GetDocumentsProps extends Pick<LiveStoreProviderProps, 'client'> {\n  projectId: string\n  dataset: string\n  ids: string[]\n  perspective: DocumentCachePerspective\n}\nconst GetDocuments = memo(function GetDocuments(props: GetDocumentsProps) {\n  const { client, projectId, dataset, ids, perspective } = props\n\n  useEffect(() => {\n    const missingIds = ids.filter(\n      (id) =>\n        !unstable__documentsCache.has(\n          unstable__getDocumentCacheKey(\n            { projectId, dataset, perspective },\n            { _id: id },\n          ),\n        ),\n    )\n    if (missingIds.length === 0) return\n    client.getDocuments(missingIds).then((documents) => {\n      for (const doc of documents) {\n        if (doc && doc?._id) {\n          unstable__documentsCache.set(\n            unstable__getDocumentCacheKey(\n              { projectId, dataset, perspective },\n              doc,\n            ),\n            doc,\n          )\n        }\n      }\n      // eslint-disable-next-line no-console\n    }, console.error)\n  }, [client, dataset, ids, perspective, projectId])\n\n  return null\n})\nGetDocuments.displayName = 'GetDocuments'\n","// This is a smaller version of `useLiveQuery`, as `LiveQuery` doesn't\n// need the more advanced features `useLiveQuery`, like the `isEqual` option or the `loading` state\n\nimport type { QueryParams as ClientQueryParams } from '@sanity/client'\nimport {\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  useSyncExternalStore,\n} from 'react'\n\nimport { defineListenerContext } from './context'\nimport { useParams } from './utils'\n\n// Re-export types we use that are needed externally\nexport type { ClientQueryParams }\n\n/** @public */\nexport function useLiveQuery<\n  QueryResult,\n  QueryParams extends ClientQueryParams = ClientQueryParams,\n>(\n  initialData: QueryResult,\n  query: string,\n  queryParams2?: QueryParams,\n): QueryResult {\n  const defineStore = useContext(defineListenerContext)\n  if (!defineStore) {\n    throw new Error('useLiveQuery must be used inside a <LiveQueryProvider />')\n  }\n  const queryParams = useParams(queryParams2)\n  const store = useMemo(\n    () => defineStore<QueryResult>(initialData, query, queryParams),\n    [defineStore, initialData, queryParams, query],\n  )\n  // initialSnapshot might change before hydration is done, so deep cloning it on the first hook call\n  // helps ensure that we don't get a mismatch between the server and client snapshots\n  const [serverSnapshot] = useState(() => {\n    if (initialData === undefined) {\n      throw new Error(\n        `initialSnapshot can't be undefined, if you don't want an initial value use null instead`,\n      )\n    }\n    try {\n      return JSON.parse(JSON.stringify(initialData))\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        \"Failed to deep clone initialSnapshot, this is likely an error and an indication that the snapshot isn't JSON serializable\",\n        { initialSnapshot: initialData, error },\n      )\n      return initialData\n    }\n  })\n  const getServerSnapshot = useCallback(() => serverSnapshot, [serverSnapshot])\n\n  return useSyncExternalStore(\n    store.subscribe,\n    store.getSnapshot,\n    getServerSnapshot,\n  )\n}\n","import { ChannelReturns } from '@sanity/channels'\nimport type {\n  ClientPerspective,\n  ContentSourceMap,\n  QueryParams,\n} from '@sanity/client'\nimport { VisualEditingMsg } from '@sanity/visual-editing-helpers'\nimport { useEffect, useMemo } from 'react'\nimport { type SanityDocument, useClient } from 'sanity'\n\nimport LiveStoreProvider from './LiveStoreProvider'\nimport { useLiveQuery } from './useLiveQuery'\n\nexport default function LoaderQueries(props: {\n  activePerspective: boolean\n  liveDocument: SanityDocument | null\n  channel: ChannelReturns<VisualEditingMsg> | undefined\n  perspective: ClientPerspective\n  liveQueries: Record<string, { query: string; params: QueryParams }>\n}): any {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { activePerspective, liveDocument, channel, perspective, liveQueries } =\n    props\n  // @TODO lift up this client instance to the root, re-use it everywhere\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const studioClient = useClient({ apiVersion: '2023-10-16' })\n  const clientConfig = useMemo(() => studioClient.config(), [studioClient])\n  const client = useMemo(\n    () =>\n      studioClient.withConfig({\n        perspective,\n        resultSourceMap: 'withKeyArraySelector',\n      }),\n    [perspective, studioClient],\n  )\n  useEffect(() => {\n    if (channel && activePerspective) {\n      const { projectId, dataset } = clientConfig\n      channel.send('loader/perspective', {\n        projectId: projectId!,\n        dataset: dataset!,\n        perspective,\n      })\n    }\n  }, [activePerspective, channel, clientConfig, perspective])\n\n  return (\n    <LiveStoreProvider\n      liveDocument={liveDocument}\n      client={client}\n      perspective={perspective}\n      refreshInterval={activePerspective ? 2000 : 0}\n    >\n      {Object.entries(liveQueries).map(([key, { query, params }]) => (\n        <QuerySubscription\n          key={`${key}${perspective}`}\n          projectId={clientConfig.projectId!}\n          dataset={clientConfig.dataset!}\n          perspective={perspective}\n          query={query}\n          params={params}\n          channel={channel}\n        />\n      ))}\n    </LiveStoreProvider>\n  )\n}\n\nfunction QuerySubscription(props: {\n  projectId: string\n  dataset: string\n  perspective: ClientPerspective\n  query: string\n  params: QueryParams\n  channel: ChannelReturns<VisualEditingMsg> | undefined\n}) {\n  const { projectId, dataset, perspective, query, params, channel } = props\n\n  const data = useLiveQuery<null | {\n    result: any\n    resultSourceMap?: ContentSourceMap\n  }>(null, query, params)\n  const result = data?.result\n  const resultSourceMap = data?.resultSourceMap\n\n  useEffect(() => {\n    if (resultSourceMap) {\n      channel!.send('loader/query-change', {\n        projectId,\n        dataset,\n        perspective,\n        query,\n        params,\n        result,\n        resultSourceMap,\n      })\n    }\n  }, [\n    channel,\n    dataset,\n    params,\n    perspective,\n    projectId,\n    query,\n    result,\n    resultSourceMap,\n  ])\n\n  return null\n}\n","import { createContext, type CSSProperties } from 'react'\n\nimport { PanelElement, ResizerElement } from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useContext,\n  useLayoutEffect,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const { getPanelStyle, registerElement, unregisterElement } = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [\n    id,\n    defaultSize,\n    order,\n    maxWidth,\n    minWidth,\n    registerElement,\n    unregisterElement,\n  ])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {\n  type FunctionComponent,\n  MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport { usePanelId } from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({ $disabled }) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-shadow-outline-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({ $disabled }) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({ id: propId, order, disabled = false }) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const id = usePanelId(propId)\n\n  const {\n    activeResizer,\n    drag,\n    startDragging,\n    stopDragging,\n    registerElement,\n    unregisterElement,\n  } = context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n\n    return () => {\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, { id, order, type: 'resizer', el })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import { useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const idRef = useRef(id || uuid())\n  return idRef.current\n}\n","export function debounce<F extends (...args: any[]) => void>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: any\n  return ((...args: any[]) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import { useMemo } from 'react'\n\nimport { debounce } from '../lib/debounce'\nimport { PanelElement } from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[]\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\n\nfunction getNextWidth(\n  panel: PanelElement,\n  nextWidth: number,\n  containerWidth: number,\n) {\n  const { maxWidth: maxWidthPx, minWidth: minWidthPx } = panel\n  const maxWidth =\n    maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const { panels, widths: prevWidths } = panelsState\n  const { widths: initialWidths } = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(\n      pivotPanel,\n      width + Math.abs(delta),\n      containerWidth,\n    )\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(\n      panel,\n      width - deltaRemaining,\n      containerWidth,\n    )\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied\n          .toPrecision(10)\n          .localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n            numeric: true,\n          }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(\n  panels: PanelElement[],\n  id: string,\n  widths: number[],\n): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(\n  element: PanelElement | ResizerElement,\n): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(\n  element: PanelElement | ResizerElement,\n): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(\n  elements: ElementMap,\n): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({ order: a }, { order: b }) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let { maxWidth, minWidth } = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\nimport { usePanelsStorage } from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({\n  children,\n}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(\n    () => getSortedElements(elements).filter(isPanel),\n    [elements],\n  )\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback(\n    (id: string, data: PanelElement | ResizerElement) => {\n      setElements((prev) => {\n        if (prev.has(id)) return prev\n        const next = new Map(prev)\n        next.set(id, data)\n        return next\n      })\n    },\n    [],\n  )\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {\n        containerWidth,\n        dragOffset,\n        panelBefore,\n        panelAfter,\n        resizerRect,\n      } = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const { widths: prevWidths } = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const { widths } = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(\n        panels,\n        storedWidths,\n        window.innerWidth,\n      )\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const { panels, widths: prevWidths } = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import { ReactNode } from 'react'\nimport { useEditState } from 'sanity'\n\nexport function HoldEditState(props: { id: string; type: string }): ReactNode {\n  const { id, type } = props\n\n  useEditState(id, type)\n\n  return null\n}\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useMemo,\n} from 'react'\n\nimport {\n  PresentationNavigateContext,\n  PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport { SetPresentationParams } from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    setParams: SetPresentationParams\n  }>\n> = function (props) {\n  const { children, setParams } = props\n\n  const navigate = useCallback(\n    (preview: string) => {\n      setParams({ preview })\n    },\n    [setParams],\n  )\n\n  const context = useMemo<PresentationNavigateContextValue>(\n    () => navigate,\n    [navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={context}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport { PresentationParamsContext } from './PresentationParamsContext'\nimport { PresentationParams } from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const { children, params } = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\nimport {\n  DeskDocumentPaneParams,\n  PresentationParams,\n  SetPresentationParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    deskParams: DeskDocumentPaneParams\n    devMode: boolean\n    name: string\n    params: PresentationParams\n    setParams: SetPresentationParams\n  }>\n> = function (props) {\n  const { children, deskParams, devMode, name, params, setParams } = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      deskParams,\n      devMode,\n      name,\n      params,\n      setParams,\n    }),\n    [deskParams, devMode, name, params, setParams],\n  )\n\n  return (\n    <PresentationContext.Provider value={context}>\n      {children}\n    </PresentationContext.Provider>\n  )\n}\n","import { motion } from 'framer-motion'\nimport styled from 'styled-components'\n\nexport const IFrame = motion(styled.iframe`\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  display: block;\n`)\n","import { LaunchIcon, ResetIcon } from '@sanity/icons'\nimport { Box, Button, TextInput, TextInputClearButtonProps } from '@sanity/ui'\nimport {\n  ChangeEvent,\n  FunctionComponent,\n  KeyboardEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  value: string\n}> = function (props) {\n  const { fontSize = 1, onChange, origin, padding = 3, value } = props\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(\n    undefined,\n  )\n  const [customValidity, setCustomValidity] = useState<string | undefined>(\n    undefined,\n  )\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (\n          !absoluteValue.startsWith(origin + '/') &&\n          absoluteValue !== origin\n        ) {\n          setCustomValidity(`URL must start with ${origin}`)\n          return\n        }\n\n        const nextValue =\n          absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [onChange, origin, sessionValue],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(\n    () => ({ icon: ResetIcon }),\n    [],\n  )\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        style={{ zIndex: 1 }}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={\n          <Box padding={1} style={{ lineHeight: 0, zIndex: -1 }}>\n            <Button\n              as=\"a\"\n              fontSize={fontSize}\n              href={origin + (sessionValue || value)}\n              icon={LaunchIcon}\n              padding={padding - 1}\n              mode=\"bleed\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            />\n          </Box>\n        }\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import type { ConnectionStatus } from '@sanity/channels'\nimport { ClientPerspective } from '@sanity/client'\nimport {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  DatabaseIcon,\n  DesktopIcon,\n  EditIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n} from '@sanity/icons'\nimport { withoutSecretSearchParams } from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  ButtonTone,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n} from '@sanity/ui'\nimport { AnimatePresence, motion, MotionConfig } from 'framer-motion'\nimport {\n  ComponentType,\n  createElement,\n  Dispatch,\n  forwardRef,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { MAX_TIME_TO_OVERLAYS_CONNECTION } from '../constants'\nimport { PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { IFrame } from './IFrame'\nimport { PreviewLocationInput } from './PreviewLocationInput'\n\nconst MotionFlex = motion(Flex)\n\nconst StyledSwitch = styled(Switch)`\n  & > span {\n    width: 21px;\n    height: 13px;\n    overflow: hidden;\n\n    & > span:nth-child(1) {\n      width: 21px;\n      height: 13px;\n    }\n\n    & > span:nth-child(2) {\n      width: 9px;\n      height: 9px;\n      top: 2px;\n      left: 2px;\n    }\n  }\n\n  & input:checked + span {\n    & > span:nth-child(2) {\n      transform: translate3d(8px, 0, 0) !important;\n    }\n  }\n`\n\nconst PERSPECTIVE_TITLES: Record<ClientPerspective, string> = {\n  previewDrafts: 'Drafts',\n  published: 'Published',\n  raw: 'Raw',\n}\n\nconst PERSPECTIVE_TONES: Record<ClientPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n  raw: 'default',\n}\n\nconst PERSPECTIVE_ICONS: Record<ClientPerspective, ComponentType> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n  raw: DatabaseIcon,\n}\n\nexport const PreviewFrame = forwardRef<\n  HTMLIFrameElement,\n  {\n    initialUrl: URL\n    targetOrigin: string\n    navigatorEnabled: boolean\n    onPathChange: (nextPath: string) => void\n    overlayEnabled: boolean\n    params: PresentationParams\n    perspective: ClientPerspective\n    setPerspective: Dispatch<SetStateAction<ClientPerspective>>\n    toggleNavigator?: () => void\n    toggleOverlay: () => void\n    loadersConnection: ConnectionStatus\n    overlaysConnection: ConnectionStatus\n    previewKitConnection: ConnectionStatus\n  }\n>(function PreviewFrame(props, ref) {\n  const {\n    initialUrl,\n    targetOrigin,\n    navigatorEnabled,\n    onPathChange,\n    overlayEnabled,\n    params,\n    perspective,\n    setPerspective,\n    toggleNavigator,\n    toggleOverlay,\n    loadersConnection,\n    overlaysConnection,\n    previewKitConnection,\n  } = props\n\n  const { devMode } = usePresentationTool()\n\n  const [mode, setMode] = useState<'desktop' | 'mobile'>('desktop')\n  const prefersReducedMotion = usePrefersReducedMotion()\n\n  const setDesktopMode = useCallback(() => setMode('desktop'), [setMode])\n  const setMobileMode = useCallback(() => setMode('mobile'), [setMode])\n  const [loading, setLoading] = useState(true)\n  const [timedOut, setTimedOut] = useState(false)\n  const [refreshing, setRefreshing] = useState(false)\n  const iframeIsBusy =\n    loading || refreshing || overlaysConnection === 'connecting'\n  const somethingIsWrong =\n    overlaysConnection === 'unhealthy' ||\n    overlaysConnection === 'disconnected' ||\n    loadersConnection === 'unhealthy' ||\n    loadersConnection === 'disconnected' ||\n    previewKitConnection === 'unhealthy' ||\n    previewKitConnection === 'disconnected'\n\n  const previewLocationOrigin = useMemo(() => {\n    const { origin: previewOrigin } = new URL(\n      params.preview || '/',\n      targetOrigin,\n    )\n    return previewOrigin === location.origin ? '' : previewOrigin\n  }, [params.preview, targetOrigin])\n\n  const handleRefresh = useCallback(() => {\n    if (typeof ref === 'function' || !ref?.current) {\n      return\n    }\n\n    // Funky way to reload an iframe without CORS issues\n    // eslint-disable-next-line no-self-assign\n    // ref.current.src = ref.current.src\n    ref.current.src = `${targetOrigin}${params.preview || '/'}`\n\n    setRefreshing(true)\n  }, [params.preview, targetOrigin, ref])\n  const handleRetry = useCallback(() => {\n    if (typeof ref === 'function' || !ref?.current) {\n      return\n    }\n\n    ref.current.src = initialUrl.toString()\n\n    setRefreshing(true)\n  }, [ref, initialUrl])\n\n  const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] =\n    useState(false)\n  useEffect(() => {\n    if (loading || refreshing) {\n      return\n    }\n\n    if (overlaysConnection === 'connecting') {\n      const timeout = setTimeout(() => {\n        setShowOverlaysConnectionState(true)\n      }, 3000)\n      return () => clearTimeout(timeout)\n    }\n    return\n  }, [overlaysConnection, loading, refreshing])\n  useEffect(() => {\n    if (loading || refreshing || !showOverlaysConnectionStatus) {\n      return\n    }\n    if (overlaysConnection === 'connected') {\n      setTimedOut(false)\n    }\n    if (overlaysConnection === 'connecting') {\n      const timeout = setTimeout(() => {\n        setTimedOut(true)\n        // eslint-disable-next-line no-console\n        console.error(\n          `Unable to connect to overlays. Make sure you're calling the 'enableOverlays' function in '@sanity/overlays' correctly, and that its 'allowStudioOrigin' property is set to '${location.origin}'`,\n        )\n      }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n      return () => clearTimeout(timeout)\n    }\n    return\n  }, [overlaysConnection, loading, refreshing, showOverlaysConnectionStatus])\n\n  const previewLocationRoute = useMemo(() => {\n    const previewUrl = new URL(params.preview || '/', targetOrigin)\n    const { pathname, search } = withoutSecretSearchParams(previewUrl)\n\n    return `${pathname}${search}`\n  }, [params.preview, targetOrigin])\n\n  const onIFrameLoad = useCallback(() => {\n    setLoading(false)\n    setRefreshing(false)\n  }, [])\n\n  return (\n    <MotionConfig\n      transition={prefersReducedMotion ? { duration: 0 } : undefined}\n    >\n      <TooltipDelayGroupProvider delay={1000}>\n        <Card\n          flex=\"none\"\n          padding={2}\n          shadow={1}\n          style={{ position: 'relative' }}\n        >\n          <Flex align=\"center\" gap={2} style={{ minHeight: 0 }}>\n            {toggleNavigator && (\n              <Tooltip\n                content={<Text size={1}>Toggle navigator</Text>}\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Toggle navigator\"\n                  fontSize={1}\n                  icon={PanelLeftIcon}\n                  mode=\"bleed\"\n                  onClick={toggleNavigator}\n                  padding={3}\n                  selected={navigatorEnabled}\n                />\n              </Tooltip>\n            )}\n\n            <Tooltip\n              content={\n                <Flex align=\"center\" style={{ whiteSpace: 'nowrap' }}>\n                  <Box padding={1}>\n                    <Text size={1}>\n                      {overlayEnabled\n                        ? 'Disable edit overlay'\n                        : 'Enable edit overlay'}\n                    </Text>\n                  </Box>\n                </Flex>\n              }\n              fallbackPlacements={['bottom-start']}\n              padding={1}\n              placement=\"bottom\"\n              portal\n            >\n              <Card\n                as=\"label\"\n                flex=\"none\"\n                padding={3}\n                style={{\n                  lineHeight: 0,\n                  borderRadius: 999,\n                  userSelect: 'none',\n                }}\n                tone={overlayEnabled ? 'positive' : undefined}\n              >\n                <Flex align=\"center\" gap={2}>\n                  <div style={{ margin: -2 }}>\n                    <StyledSwitch\n                      checked={overlayEnabled}\n                      onChange={toggleOverlay}\n                      disabled={iframeIsBusy}\n                    />\n                  </div>\n                  <Box>\n                    <Text muted size={1} weight=\"medium\">\n                      Edit\n                    </Text>\n                  </Box>\n                </Flex>\n              </Card>\n            </Tooltip>\n\n            {devMode && (\n              <Tooltip\n                content={\n                  <Text size={1}>\n                    {refreshing ? 'Refreshing…' : 'Refresh preview'}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Refresh preview\"\n                  fontSize={1}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={refreshing}\n                  onClick={handleRefresh}\n                  padding={3}\n                />\n              </Tooltip>\n            )}\n\n            <Box flex={1}>\n              <PreviewLocationInput\n                onChange={onPathChange}\n                origin={previewLocationOrigin}\n                value={previewLocationRoute}\n              />\n            </Box>\n\n            <Flex align=\"center\" flex=\"none\" gap={1}>\n              <MenuButton\n                button={\n                  <Button\n                    fontSize={1}\n                    iconRight={ChevronDownIcon}\n                    mode=\"bleed\"\n                    padding={3}\n                    space={2}\n                    text={PERSPECTIVE_TITLES[perspective]}\n                    loading={\n                      iframeIsBusy ||\n                      (loadersConnection === 'connecting' &&\n                        previewKitConnection !== 'connected')\n                    }\n                    disabled={loadersConnection !== 'connected'}\n                  />\n                }\n                id=\"perspective-menu\"\n                menu={\n                  <Menu style={{ maxWidth: 240 }}>\n                    <MenuItem\n                      fontSize={1}\n                      onClick={() => setPerspective('previewDrafts')}\n                      padding={3}\n                      pressed={perspective === 'previewDrafts'}\n                      tone={PERSPECTIVE_TONES['previewDrafts']}\n                    >\n                      <Flex align=\"flex-start\" gap={3}>\n                        <Box flex=\"none\">\n                          <Text size={1}>\n                            {createElement(PERSPECTIVE_ICONS['previewDrafts'])}\n                          </Text>\n                        </Box>\n                        <Stack flex={1} space={2}>\n                          <Text size={1} weight=\"medium\">\n                            {PERSPECTIVE_TITLES['previewDrafts']}\n                          </Text>\n                          <Text muted size={1}>\n                            View this page with latest draft content\n                          </Text>\n                        </Stack>\n                        <Box flex=\"none\">\n                          <Text\n                            muted\n                            size={1}\n                            style={{\n                              opacity: perspective === 'previewDrafts' ? 1 : 0,\n                            }}\n                          >\n                            <CheckmarkIcon />\n                          </Text>\n                        </Box>\n                      </Flex>\n                    </MenuItem>\n                    <MenuItem\n                      fontSize={1}\n                      onClick={() => setPerspective('published')}\n                      padding={3}\n                      pressed={perspective === 'published'}\n                      tone={PERSPECTIVE_TONES['published']}\n                    >\n                      <Flex align=\"flex-start\" gap={3}>\n                        <Box flex=\"none\">\n                          <Text size={1}>\n                            {createElement(PERSPECTIVE_ICONS['published'])}\n                          </Text>\n                        </Box>\n                        <Stack flex={1} space={2}>\n                          <Text size={1} weight=\"medium\">\n                            {PERSPECTIVE_TITLES['published']}\n                          </Text>\n                          <Text muted size={1}>\n                            View this page with published content\n                          </Text>\n                        </Stack>\n                        <Box flex=\"none\">\n                          <Text\n                            muted\n                            size={1}\n                            style={{\n                              opacity: perspective === 'published' ? 1 : 0,\n                            }}\n                          >\n                            <CheckmarkIcon />\n                          </Text>\n                        </Box>\n                      </Flex>\n                    </MenuItem>\n                  </Menu>\n                }\n                popover={{\n                  // arrow: false,\n                  constrainSize: true,\n                  placement: 'bottom',\n                  portal: true,\n                }}\n              />\n            </Flex>\n\n            <Flex align=\"center\" flex=\"none\" gap={1}>\n              <Tooltip\n                content={<Text size={1}>Full viewport</Text>}\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Full viewport\"\n                  fontSize={1}\n                  icon={DesktopIcon}\n                  mode=\"bleed\"\n                  onClick={setDesktopMode}\n                  padding={3}\n                  selected={mode === 'desktop'}\n                />\n              </Tooltip>\n              <Tooltip\n                content={<Text size={1}>Narrow viewport</Text>}\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Narrow viewport\"\n                  fontSize={1}\n                  icon={MobileDeviceIcon}\n                  mode=\"bleed\"\n                  onClick={setMobileMode}\n                  padding={3}\n                  selected={mode === 'mobile'}\n                />\n              </Tooltip>\n            </Flex>\n          </Flex>\n        </Card>\n\n        <Card flex={1} tone=\"transparent\">\n          <Flex\n            align=\"center\"\n            height=\"fill\"\n            justify=\"center\"\n            padding={mode === 'desktop' ? 0 : 2}\n            sizing=\"border\"\n            style={{\n              position: 'relative',\n              cursor: iframeIsBusy ? 'wait' : undefined,\n            }}\n          >\n            <AnimatePresence>\n              {!somethingIsWrong &&\n              !loading &&\n              !refreshing &&\n              showOverlaysConnectionStatus &&\n              loadersConnection === 'connecting' ? (\n                <MotionFlex\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  variants={spinnerVariants}\n                  justify=\"center\"\n                  align=\"center\"\n                  style={{\n                    inset: `0`,\n                    position: `absolute`,\n                    backdropFilter: timedOut\n                      ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                      : 'blur(2px)',\n                    ['transition' as string]:\n                      'backdrop-filter 0.2s ease-in-out',\n                    zIndex: 1,\n                  }}\n                >\n                  <Flex\n                    style={{ ...sizes[mode] }}\n                    justify=\"center\"\n                    align=\"center\"\n                  >\n                    <Card\n                      radius={2}\n                      tone={timedOut ? 'caution' : 'inherit'}\n                      padding={4}\n                      shadow={1}\n                    >\n                      <Flex\n                        justify=\"center\"\n                        align=\"center\"\n                        direction=\"column\"\n                        gap={4}\n                      >\n                        <Spinner muted />\n                        <Text muted size={1}>\n                          {timedOut ? (\n                            <>\n                              Unable to connect, check the browser console for\n                              more information.\n                            </>\n                          ) : (\n                            'Connecting…'\n                          )}\n                        </Text>\n                      </Flex>\n                    </Card>\n                  </Flex>\n                </MotionFlex>\n              ) : loading || iframeIsBusy ? (\n                <MotionFlex\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  variants={spinnerVariants}\n                  justify=\"center\"\n                  align=\"center\"\n                  style={{\n                    inset: `0`,\n                    position: `absolute`,\n                    // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                  }}\n                >\n                  <Flex\n                    style={{ ...sizes[mode] }}\n                    justify=\"center\"\n                    align=\"center\"\n                    direction=\"column\"\n                    gap={4}\n                  >\n                    <Spinner muted />\n                    <Text muted size={1}>\n                      Loading…\n                    </Text>\n                  </Flex>\n                </MotionFlex>\n              ) : somethingIsWrong && !iframeIsBusy ? (\n                <MotionFlex\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  variants={errorVariants}\n                  justify=\"center\"\n                  align=\"center\"\n                  style={{\n                    background: 'var(--card-bg-color)',\n                    inset: `0`,\n                    position: `absolute`,\n                    borderTop: '1px solid transparent',\n                    boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                  }}\n                >\n                  <ErrorCard\n                    flex={1}\n                    message=\"Could not connect to the preview\"\n                    onRetry={handleRetry}\n                  >\n                    {devMode && (\n                      <>\n                        {(overlaysConnection === 'unhealthy' ||\n                          overlaysConnection === 'disconnected') && (\n                          <Card padding={3} radius={2} tone=\"critical\">\n                            <Stack space={3}>\n                              <Label muted size={0}>\n                                Overlay connection status\n                              </Label>\n                              <Code size={1}>{overlaysConnection}</Code>\n                            </Stack>\n                          </Card>\n                        )}\n\n                        {(loadersConnection === 'unhealthy' ||\n                          loadersConnection === 'disconnected') && (\n                          <Card padding={3} radius={2} tone=\"critical\">\n                            <Stack space={3}>\n                              <Label muted size={0}>\n                                Loader connection status\n                              </Label>\n                              <Code size={1}>{loadersConnection}</Code>\n                            </Stack>\n                          </Card>\n                        )}\n                      </>\n                    )}\n                  </ErrorCard>\n                </MotionFlex>\n              ) : null}\n            </AnimatePresence>\n            <IFrame\n              ref={ref}\n              style={{\n                pointerEvents: iframeIsBusy ? 'none' : 'auto',\n                boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                borderTop: '1px solid transparent',\n              }}\n              src={initialUrl.toString()}\n              initial={['background']}\n              variants={iframeVariants}\n              animate={[\n                loading || iframeIsBusy ? 'background' : 'active',\n                refreshing ? 'reloading' : 'idle',\n                mode,\n                showOverlaysConnectionStatus ? 'timedOut' : '',\n              ]}\n              onLoad={onIFrameLoad}\n            />\n          </Flex>\n        </Card>\n      </TooltipDelayGroupProvider>\n    </MotionConfig>\n  )\n})\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst errorVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-shadow-outline-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","import { studioPath } from '@sanity/client/csm'\nimport { urlStringToPath } from '@sanity/visual-editing-helpers'\n\nexport function parsePath(rawPath: string | undefined): {\n  id: string | undefined\n  path: string | undefined\n} {\n  if (rawPath === undefined) {\n    return { id: undefined, path: undefined }\n  }\n\n  const segments = rawPath?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return {\n    id: segments[0],\n    path:\n      segments.length > 1\n        ? studioPath.toString(urlStringToPath(segments.slice(1).join('.')))\n        : undefined,\n  }\n}\n","import { studioPath } from '@sanity/client/csm'\nimport { pathToUrlString } from '@sanity/visual-editing-helpers'\nimport isEqual from 'lodash.isequal'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { NavigateOptions, RouterContextValue, RouterState } from 'sanity/router'\n\nimport { debounce } from './lib/debounce'\nimport { parsePath } from './parsePath'\nimport {\n  DeskDocumentPaneParams,\n  PresentationParams,\n  PresentationStateParams,\n  SetPresentationParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n}): {\n  deskParams: DeskDocumentPaneParams\n  navigate: (nextState: RouterState, options?: NavigateOptions) => void\n  params: PresentationParams\n  setParams: SetPresentationParams\n} {\n  const [params, setParamsState] = useState<PresentationParams>(() => {\n    const { id, path } = parsePath(\n      routerState.path && decodeURIComponent(routerState.path),\n    )\n    return {\n      id,\n      type: routerState.type,\n      path,\n      preview:\n        routerSearchParams.preview ||\n        `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams.perspective,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n    }\n  })\n\n  const setParams = useCallback((newParams: Partial<PresentationParams>) => {\n    setParamsState((state) => {\n      const nextState = { ...state, ...newParams }\n      if (isEqual(pruneObject(state), pruneObject(nextState))) {\n        return state\n      }\n      return nextState\n    })\n  }, [])\n\n  const deskParams = useMemo<DeskDocumentPaneParams>(\n    () =>\n      pruneObject({\n        inspect: params.inspect,\n        path: params.path,\n        rev: params.rev,\n        since: params.since,\n        template: params.template,\n        view: params.view,\n        // assist\n        pathKey: params.pathKey,\n        instruction: params.instruction,\n        // comments\n        comment: params.comment,\n      }),\n    [\n      params.inspect,\n      params.path,\n      params.rev,\n      params.since,\n      params.template,\n      params.view,\n      params.pathKey,\n      params.instruction,\n      params.comment,\n    ],\n  )\n\n  useEffect(() => {\n    const { type } = routerState\n    // decodeURI param in path?\n    const { id, path } = parsePath(routerState.path)\n\n    const timeout = setTimeout(\n      () =>\n        setParams({\n          id,\n          type: type === '*' ? undefined : type,\n          path,\n          preview:\n            routerSearchParams.preview ||\n            `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n          perspective: routerSearchParams.perspective,\n          inspect: routerSearchParams.inspect,\n          rev: routerSearchParams.rev,\n          since: routerSearchParams.since,\n          template: routerSearchParams.template,\n          view: routerSearchParams.view,\n          // assist\n          pathKey: routerSearchParams.pathKey,\n          instruction: routerSearchParams.instruction,\n          // comments\n          comment: routerSearchParams.comment,\n        }),\n      0,\n    )\n    return () => clearTimeout(timeout)\n  }, [initialPreviewUrl, routerSearchParams, routerState, setParams])\n\n  const navigate = useMemo(() => {\n    // Debounce navigation to mitigate various event related race conditions\n    return debounce((nextState: RouterState, options?: NavigateOptions) => {\n      const state = pruneObject(nextState)\n      routerNavigate(state, options)\n    }, 50)\n  }, [routerNavigate])\n\n  const previewRef = useRef(params.preview)\n\n  useEffect(() => {\n    const previousPreview = previewRef.current\n    previewRef.current = params.preview\n\n    const type = params.type\n    const path = params.id\n      ? pathToUrlString(\n          studioPath.fromString(\n            [params.id, params.path].filter(Boolean).join('.'),\n          ),\n        )\n      : undefined\n\n    const searchParams = pruneObject({\n      preview: params.preview,\n      perspective: params.perspective === 'published' ? 'published' : undefined,\n      inspect: params.inspect,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n    }) satisfies PresentationParams\n\n    const replace = params.preview === previousPreview\n    const timeout = setTimeout(\n      () =>\n        navigate(\n          {\n            type,\n            path,\n            _searchParams: Object.entries(\n              searchParams as Record<string, string>,\n            ),\n          },\n          { replace },\n        ),\n      0,\n    )\n    return () => clearTimeout(timeout)\n  }, [navigate, params])\n\n  return {\n    navigate,\n    setParams,\n    deskParams,\n    params,\n  }\n}\n","import { createPreviewSecret } from '@sanity/preview-url-secret/create-secret'\nimport { definePreviewUrl } from '@sanity/preview-url-secret/define-preview-url'\nimport { useMemo, useState } from 'react'\nimport {\n  SanityClient,\n  useActiveWorkspace,\n  useClient,\n  useCurrentUser,\n} from 'sanity'\nimport { suspend } from 'suspend-react'\n\nimport { PreviewUrlOption } from './types'\n\nexport function usePreviewUrl(\n  _previewUrl: PreviewUrlOption,\n  toolName: string,\n  _previewSearchParam: string | null,\n): URL {\n  const client = useClient({ apiVersion: '2023-10-16' })\n  const [previewUrl] = useState(() => _previewUrl)\n  const currentUser = useCurrentUser()\n  const resolvePreviewUrl = useMemo(() => {\n    if (typeof previewUrl === 'object') {\n      return definePreviewUrl<SanityClient>(previewUrl)\n    }\n    return previewUrl\n  }, [previewUrl])\n  const [previewSearchParam] = useState(() => {\n    if (typeof resolvePreviewUrl !== 'string' || !_previewSearchParam) {\n      return null\n    }\n    return new URL(\n      _previewSearchParam,\n      new URL(resolvePreviewUrl, location.origin),\n    )\n  })\n\n  const resolveUrlDeps = usePreviewUrlSecretDependencies(\n    toolName,\n    currentUser?.id,\n  )\n  const resolvedUrl =\n    typeof resolvePreviewUrl === 'function'\n      ? suspend(async (): Promise<string> => {\n          const { secret: previewUrlSecret } = await createPreviewSecret(\n            client,\n            '@sanity/presentation',\n            typeof window === 'undefined' ? '' : location.href,\n            currentUser?.id,\n          )\n          return resolvePreviewUrl({\n            client,\n            previewUrlSecret,\n            previewSearchParam: _previewSearchParam,\n          })\n        }, resolveUrlDeps)\n      : previewSearchParam || resolvePreviewUrl\n\n  return useMemo(() => new URL(resolvedUrl, location.origin), [resolvedUrl])\n}\n\nfunction usePreviewUrlSecretDependencies(\n  toolName: string,\n  currentUserId?: string,\n) {\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  return [\n    // Cache based on a few specific conditions\n    '@sanity/presentation',\n    basePath,\n    workspaceName,\n    toolName,\n    currentUserId,\n    resolveUUID,\n  ]\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n","import type { ConnectionStatus } from '@sanity/channels'\nimport { ChannelReturns, createChannel } from '@sanity/channels'\nimport type { ClientPerspective, QueryParams } from '@sanity/client'\nimport { studioPath } from '@sanity/client/csm'\nimport { Flex } from '@sanity/ui'\nimport {\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  type VisualEditingConnectionIds,\n  type VisualEditingMsg,\n} from '@sanity/visual-editing-helpers'\nimport {\n  type ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useUnique } from 'sanity'\nimport {\n  getPublishedId,\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n} from 'sanity'\nimport { RouterContextValue, useRouter } from 'sanity/router'\nimport styled from 'styled-components'\n\nimport { DEFAULT_TOOL_NAME } from './constants'\nimport { ContentEditor } from './editor/ContentEditor'\nimport LoaderQueries from './loader/LoaderQueries'\nimport { Panel } from './panels/Panel'\nimport { PanelResizer } from './panels/PanelResizer'\nimport { Panels } from './panels/Panels'\nimport { HoldEditState } from './perf/HoldEditState'\nimport { PresentationNavigateProvider } from './PresentationNavigateProvider'\nimport { PresentationParamsProvider } from './PresentationParamsProvider'\nimport { PresentationProvider } from './PresentationProvider'\nimport { PreviewFrame } from './preview/PreviewFrame'\nimport {\n  DeskDocumentPaneParams,\n  NavigatorOptions,\n  PresentationPluginOptions,\n  PresentationStateParams,\n} from './types'\nimport { DocumentOnPage, useDocumentsOnPage } from './useDocumentsOnPage'\nimport { useLocalState } from './useLocalState'\nimport { useParams } from './useParams'\nimport { usePreviewUrl } from './usePreviewUrl'\n\nfunction Navigator(props: NavigatorOptions) {\n  const { minWidth, maxWidth, component: NavigatorComponent } = props\n  const navigatorDisabled =\n    minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const { previewUrl: _previewUrl, components } = props.tool.options ?? {}\n  const name = props.tool.name || DEFAULT_TOOL_NAME\n  const { unstable_navigator } = components || {}\n\n  const { navigate: routerNavigate, state: routerState } =\n    useRouter() as RouterContextValue & { state: PresentationStateParams }\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams.preview || null,\n  )\n\n  const [devMode] = useState(() => {\n    const option = props.tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return (\n      typeof window !== 'undefined' && window.location.hostname === 'localhost'\n    )\n  })\n\n  // @TODO The iframe URL might change, we have to make sure we don't post Studio state to unknown origins\n  // see https://medium.com/@chiragrai3666/exploiting-postmessage-e2b01349c205\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [channel, setChannel] = useState<ChannelReturns<VisualEditingMsg>>()\n\n  const [liveQueries, setLiveQueries] = useState<\n    Record<\n      string,\n      { query: string; params: QueryParams; perspective: ClientPerspective }\n    >\n  >({})\n\n  const { setParams, params, deskParams } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n  })\n\n  const [perspective, setPerspective] = useState<ClientPerspective>(() =>\n    params.perspective === 'published' ? params.perspective : 'previewDrafts',\n  )\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective)\n\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  const navigatorProvided = !!unstable_navigator?.component\n\n  const [navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const previewRef = useRef<typeof params.preview>()\n\n  const idRef = useRef(params.id)\n\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const [preloadRefs, setPreloadRefs] = useState<DocumentOnPage[]>(() =>\n    documentsOnPage\n      .slice(0, 3)\n      .map((d) => ({ ...d, _id: getPublishedId(d._id) })),\n  )\n\n  // Update the perspective when the param changes\n  useEffect(() => {\n    if (perspective !== params.perspective) {\n      setParams({ perspective })\n    }\n  }, [params.perspective, perspective, setParams])\n\n  useEffect(() => {\n    setPreloadRefs(\n      documentsOnPage\n        .slice(0, 3)\n        .map((d) => ({ ...d, _id: getPublishedId(d._id) })),\n    )\n  }, [documentsOnPage])\n\n  useEffect(() => {\n    if (params.id !== idRef.current) {\n      idRef.current = params.id\n\n      if (params.id) {\n        setPreloadRefs((p) => {\n          const exists = p.find((d) => d._id === params.id)\n\n          if (exists) return p\n\n          return p.slice(1).concat([{ _id: params.id!, _type: params.type! }])\n        })\n      }\n    }\n  }, [params])\n\n  const [overlaysConnection, setOverlaysConnection] =\n    useState<ConnectionStatus>('fresh')\n  const [loadersConnection, setLoadersConnection] =\n    useState<ConnectionStatus>('fresh')\n  const [previewKitConnection, setPreviewKitConnection] =\n    useState<ConnectionStatus>('fresh')\n\n  useEffect(() => {\n    const iframe = iframeRef.current?.contentWindow\n\n    if (!iframe) return\n\n    const nextChannel = createChannel<VisualEditingMsg>({\n      id: 'presentation' satisfies VisualEditingConnectionIds,\n      onStatusUpdate(status, prevStatus, connection) {\n        if (connection.config.id === 'loaders') setLoadersConnection(status)\n        if (connection.config.id === 'overlays') setOverlaysConnection(status)\n        if (connection.config.id === 'preview-kit')\n          setPreviewKitConnection(status)\n      },\n      connections: [\n        {\n          target: iframe,\n          targetOrigin,\n          id: 'overlays' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n        },\n        {\n          target: iframe,\n          targetOrigin,\n          id: 'loaders' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n        },\n        {\n          target: iframe,\n          targetOrigin,\n          id: 'preview-kit' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n        },\n      ],\n      handler(type, data) {\n        if (type === 'overlay/focus' && 'id' in data) {\n          setParams({\n            id: data.id,\n            path: data.path,\n            type: data.type,\n          })\n        } else if (type === 'overlay/navigate') {\n          if (previewRef.current !== data.url) {\n            const isInitialNavigation = previewRef.current === undefined\n\n            previewRef.current = data.url\n            setParams(\n              isInitialNavigation\n                ? { preview: data.url }\n                : { id: undefined, type: undefined, preview: data.url },\n            )\n          }\n        } else if (type === 'overlay/toggle') {\n          setOverlayEnabled(data.enabled)\n        } else if (\n          type === 'loader/documents' ||\n          (type === 'preview-kit/documents' &&\n            data.projectId === projectId &&\n            data.dataset === dataset)\n        ) {\n          setDocumentsOnPage(data.perspective, data.documents)\n        } else if (\n          type === 'loader/query-listen' &&\n          data.projectId === projectId &&\n          data.dataset === dataset\n        ) {\n          setLiveQueries((prev) => ({\n            ...prev,\n            [getQueryCacheKey(data.query, data.params)]: {\n              perspective: data.perspective,\n              query: data.query,\n              params: data.params,\n            },\n          }))\n        }\n      },\n    })\n    setChannel(nextChannel)\n\n    return () => {\n      nextChannel.disconnect()\n      setChannel(undefined)\n    }\n  }, [dataset, projectId, setDocumentsOnPage, setParams, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    // eslint-disable-next-line no-warning-comments\n    // @todo nextDocumentId may not be needed with this strategy\n    (nextDocumentId: string, nextPath: Path) => {\n      setParams({\n        // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n        path: studioPath.toString(nextPath),\n      })\n    },\n    [setParams],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (\n        url.origin === initialPreviewUrl.origin &&\n        preview !== params.preview\n      ) {\n        setParams({ id: undefined, path: undefined, preview })\n      }\n    },\n    [initialPreviewUrl, params, setParams],\n  )\n\n  const handleDeskParams = useCallback(\n    (deskParams: DeskDocumentPaneParams) => {\n      setParams({ ...deskParams })\n    },\n    [setParams],\n  )\n\n  useEffect(() => {\n    if (params.id && params.path) {\n      channel?.send('presentation/focus', { id: params.id, path: params.path })\n    } else {\n      channel?.send('presentation/blur', undefined)\n    }\n  }, [channel, params.id, params.path])\n\n  // Dispatch a navigation message whenever the preview param changes\n  // @todo This will cause a reflection of received navigation messages which could be problematic\n  useEffect(() => {\n    if (\n      previewRef.current &&\n      params.preview &&\n      previewRef.current !== params.preview\n    ) {\n      previewRef.current = params.preview\n      channel?.send('presentation/navigate', {\n        url: params.preview,\n        type: 'push',\n      })\n    }\n  }, [channel, params.preview])\n\n  const toggleOverlay = useCallback(\n    () => channel?.send('presentation/toggleOverlay', undefined),\n    [channel],\n  )\n\n  // The current document being edited, it's put on the fast track for super low latency updates\n  const [liveDocument, setLiveDocument] = useState<SanityDocument | null>(null)\n  const onDocumentChange = useCallback(\n    (document: SanityDocument | null) => setLiveDocument(document),\n    [],\n  )\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  return (\n    <>\n      <PresentationProvider\n        deskParams={deskParams}\n        devMode={devMode}\n        name={name}\n        params={params}\n        setParams={setParams}\n      >\n        {/* perf improvement: preload edit state */}\n        {preloadRefs.map((d) => (\n          <HoldEditState id={d._id} key={d._id} type={d._type} />\n        ))}\n\n        <PresentationNavigateProvider setParams={setParams}>\n          <PresentationParamsProvider params={params}>\n            <Container height=\"fill\">\n              <Panels>\n                {navigatorProvided && navigatorEnabled && (\n                  <Navigator {...unstable_navigator} />\n                )}\n                <Panel\n                  id=\"preview\"\n                  minWidth={325}\n                  defaultSize={navigatorEnabled ? 50 : 75}\n                  order={3}\n                >\n                  <Flex direction=\"column\" flex={1} height=\"fill\">\n                    <PreviewFrame\n                      initialUrl={initialPreviewUrl}\n                      navigatorEnabled={navigatorEnabled}\n                      onPathChange={handlePreviewPath}\n                      overlayEnabled={overlayEnabled}\n                      params={params}\n                      perspective={perspective}\n                      ref={iframeRef}\n                      setPerspective={setPerspective}\n                      targetOrigin={targetOrigin}\n                      toggleNavigator={toggleNavigator}\n                      toggleOverlay={toggleOverlay}\n                      loadersConnection={loadersConnection}\n                      overlaysConnection={overlaysConnection}\n                      previewKitConnection={previewKitConnection}\n                    />\n                  </Flex>\n                </Panel>\n                <PanelResizer order={4} />\n                <Panel id=\"content\" minWidth={325} order={5}>\n                  <ContentEditor\n                    refs={documentsOnPage}\n                    deskParams={deskParams}\n                    documentId={params.id}\n                    documentType={params.type}\n                    onDeskParams={handleDeskParams}\n                    onFocusPath={handleFocusPath}\n                    onDocumentChange={onDocumentChange}\n                    previewUrl={params.preview}\n                  />\n                </Panel>\n              </Panels>\n            </Container>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      {channel && (\n        <>\n          <LoaderQueries\n            key=\"published\"\n            activePerspective={perspective === 'published'}\n            channel={channel}\n            liveQueries={liveQueries}\n            perspective=\"published\"\n            // Only send the liveDocument if it's a published document\n            liveDocument={\n              liveDocument?._id?.startsWith('drafts.') ? null : liveDocument\n            }\n          />\n          <LoaderQueries\n            key=\"previewDrafts\"\n            activePerspective={perspective === 'previewDrafts'}\n            channel={channel}\n            liveQueries={liveQueries}\n            perspective=\"previewDrafts\"\n            liveDocument={liveDocument}\n          />\n        </>\n      )}\n    </>\n  )\n}\n","import { ClientPerspective } from '@sanity/client'\nimport { useCallback, useMemo, useState } from 'react'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n  _projectId?: string\n  dataset?: string\n}\n\nexport function useDocumentsOnPage(\n  perspective: ClientPerspective,\n): [\n  DocumentOnPage[],\n  (perspective: ClientPerspective, state: DocumentOnPage[]) => void,\n] {\n  const [state, setState] = useState<\n    Record<ClientPerspective, Map<string, DocumentOnPage>>\n  >(() => ({ published: new Map(), previewDrafts: new Map(), raw: new Map() }))\n\n  const setDocumentsOnPage = useCallback(\n    (perspective: ClientPerspective, documents: DocumentOnPage[]) => {\n      setState((state) => {\n        let changed = false\n        let map = state[perspective]\n        const getKey = (document: DocumentOnPage) => {\n          return `${document._projectId}-${document.dataset}-${document._type}-${document._id}`\n        }\n        const knownKeys = new Set<ReturnType<typeof getKey>>()\n        // Add anything new, and track all keys\n        for (const document of documents) {\n          const key = getKey(document)\n          knownKeys.add(key)\n          if (!map.has(key)) {\n            map.set(key, document)\n            changed = true\n          }\n        }\n        // Remove anything that is no longer on the page\n        for (const key of map.keys()) {\n          if (!knownKeys.has(key)) {\n            map.delete(key)\n            changed = true\n          }\n        }\n\n        if (changed) {\n          map = new Map(map)\n          return { ...state, [perspective]: new Map(map) }\n        }\n\n        return state\n      })\n    },\n    [],\n  )\n\n  const documentsOnPageMap = useMemo(() => {\n    return state[perspective]\n  }, [perspective, state])\n\n  const documentsOnPage = useMemo(() => {\n    return [...documentsOnPageMap.values()]\n  }, [documentsOnPageMap])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport function useLocalState<T>(\n  key: string,\n  defaultValue: T,\n): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n"],"names":["jsx","jsxs","Fragment","applySourceDocuments","studioPath","Card","Flex","Container$1","Stack","Text","Box","Button","Code","Label","ErrorBoundary","TextInput","Switch","usePrefersReducedMotion","TooltipDelayGroupProvider","Tooltip","MenuButton","Menu","MenuItem","Spinner","useContext","forwardRef","useCallback","useMemo","useState","useEffect","createContext","memo","useSyncExternalStore","useLayoutEffect","useRef","createElement","useUnique","getPublishedId","useEditState","useClient","useCurrentUser","useActiveWorkspace","useProjectId","useDataset","StateLink","useRouter","styled","PresentationContext","PresentationNavigateContext","PresentationParamsContext","MAX_TIME_TO_OVERLAYS_CONNECTION","DEFAULT_TOOL_NAME","PaneRouterContext","PaneLayout","DeskToolProvider","DocumentListPane$1","useDeskTool","DocumentPane$1","unstable__getDocumentCacheKey","unstable__documentsCache","applyPatch","ResetIcon","LaunchIcon","PanelLeftIcon","RefreshIcon","ChevronDownIcon","CheckmarkIcon","DesktopIcon","MobileDeviceIcon","EditIcon","PublishIcon","DatabaseIcon","withoutSecretSearchParams","motion","MotionConfig","AnimatePresence","isEqual","createPreviewSecret","definePreviewUrl","suspend","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","native","randomUUID","v4","options","buf","offset","rnds","random","arr","unsafeStringify","RESPONSE_TIMEOUT","HEARTBEAT_INTERVAL","INTERNAL_MSG_TYPES","HANDSHAKE_MSG_TYPES","isObject","value","Boolean","Array","isArray","isInternalMessage","type","some","t","isHandshakeMessage","isHeartbeatMessage","createChannel","config","inFrame","window","self","top","connections","map","connection","buffer","heartbeat","id","status","stopHeartbeat","clearInterval","setConnectionStatus","newStatus","prevStatus","onStatusUpdate","toFlush","splice","length","forEach","data","post","flush","heartbeatInverval","setInterval","send","startHeartbeat","Promise","resolve","reject","msg","uuid","connectionId","from","to","isInternal","isHandshake","isHeartbeat","activeConnection","find","c","maxWait","setTimeout","reason","transact","e","eventData","responseTo","removeEventListener","clearTimeout","addEventListener","targetOrigin","target","postMessage","console","error","postMany","allSettled","handleEvents","source","origin","findConnection","handleHandshake","args","handler","async","connectionSubset","results","result","inactiveConnections","filter","includes","all","connect","disconnect","connectionsToDisconnect","n","r","o","u","s","split","exec","Number","_key","alt","ctrl","mod","test","navigator","platform","shift","every","key","toUpperCase","ErrorCard","props","children","message","onRetry","restProps","height","align","justify","Container","padding","sizing","width","space","size","weight","muted","fontSize","mode","onClick","text","usePresentationTool","presentation","resolveQueryStringFromParams","nextParams","allowed","params","parts","Object","entries","join","encodeQueryString","reduce","obj","BackLink","ref","deskParams","state","_searchParams","preview","title","ReferenceChildLink","documentId","documentType","path","PresentationPaneRouterProvider","onDeskParams","previewUrl","refs","routerState","resolvePathFromState","routerSearchParams","fromEntries","createPathWithParams","context","index","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","childLinkProps","childId","_id","_type","ParameterizedLink","closeCurrentAndAfter","warn","handleEditReference","replaceCurrent","pane","closeCurrent","duplicateCurrent","setView","viewId","setParams","inspect","setPayload","navigateIntent","intentName","intentParams","Provider","RootLayout","Root","WrappedCode","DocumentListPane","devMode","ids","schemaTypeName","errorParams","setErrorParams","handleRetry","flex","overflow","radius","tone","onCatch","direction","DeskDocumentListPane","itemId","paneKey","DocumentListPanel","DocumentPane","onFocusPath","paneDocumentNode","setLayoutCollapsed","handleRootCollapse","handleRootExpand","style","onExpand","onCollapse","DeskDocumentPane","DocumentPanel","onDocumentChange","editState","documentValue","draft","published","handleFocusPath","ContentEditor","defineListenerContext","IsEnabledContext","warnedAboutCrossDatasetReference","turboChargeResultIfSourceMap","liveDocument","projectId","dataset","perspective","resultSourceMap","sourceDocument","_projectId","get","getQueryCacheKey","query","JSON","stringify","LiveStoreProvider","client","refreshInterval","subscriptions","setSubscriptions","snapshots","Map","hooks","cache","subscribe","listener","has","set","listeners","Set","prevSubscriptions","hook","TypeError","add","delete","sub","useHooks","initialSnapshot","onStoreChange","unsubscribe","getSnapshot","turboIds","setTurboIds","turboIdsFromSourceMap","contentSourceMap","nextTurboIds","documents","prevTurboIds","mergedTurboIds","sort","Context","Turbo","QuerySubscription","displayName","LiveStoreProvider$1","setError","revalidate","startRefresh","shouldPause","online","setOnline","onLine","online2","offline","visibilityState","onVisibilityChange","document","useShouldPause","setState","timeout","onFocus","useRevalidate","shouldRefetch","fulfilled","controller","AbortController","onFinally","signal","fetch","tag","filterResponse","aborted","values","effect","catch","name","finally","abort","snapshot","nextTurboIdsSnapshot","batch","setBatch","batchSet","flat","nextBatch","turboId","nextBatchSlice","prevBatch","lastMutatedDocumentId","setLastMutatedDocumentId","subscription","listen","events","effectFormat","includePreviousRevision","includeResult","update","effects","apply","cachedDocument","peek","patchDoc","_rev","patchedDocument","updatedKeys","updatedKey","lastDraftDocumentRev","setLastDraftDocumentRev","GetDocuments","missingIds","getDocuments","then","doc","useLiveQuery","initialData","queryParams2","defineStore","queryParams","stringifiedParams","parse","useParams","store","serverSnapshot","getServerSnapshot","LoaderQueries","activePerspective","channel","liveQueries","studioClient","apiVersion","clientConfig","withConfig","PanelsContext","div","Panel","defaultSize","minWidth","maxWidth","order","getPanelStyle","registerElement","unregisterElement","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","el","current","usePanelId","activeResizer","drag","startDragging","stopDragging","isDragging","onMouseDown","event","nativeEvent","onDrag","onDragStop","blur","debounce","fn","timer","itemKey","getStoredItem","localStorage","getItem","getKeyForPanels","panels","panel","usePanelsStorage","widths","setItem","setStoredItem","setDebounced","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getPanelWidth","findIndex","toPrecision","getOffset","handleElement","initialOffset","initialHandleElementRect","clientX","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","a","b","validateWidths","widthsToValidate","total","remainingWidth","toFixed","abs","PanelsWrapper","Panels","panelsEl","setElements","setWidths","setActiveResizer","panelsRef","flexGrow","pointerEvents","prev","next","dragRef","innerWidth","dragOffset","panelAfter","panelBefore","resizerIndex","resizerRect","startX","elementsArr","resizer","resizeElement","acc","pageX","preventDefault","stopPropagation","prevWidths","nextWidths","delta","panelsState","initialDragState","initialWidths","pivotPanel","deltaApplied","localeCompare","numeric","getNextWidths","widthsChanged","prevWidth","storage","storedWidths","validatedStoredWidths","defaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","getDefaultWidths","resizeObserver","ResizeObserver","observe","HoldEditState","PresentationNavigateProvider","navigate","PresentationParamsProvider","PresentationProvider","IFrame","iframe","PreviewLocationInput","onChange","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","currentTarget","handleKeyDown","absoluteValue","startsWith","nextValue","handleBlur","resetButton","icon","clearButton","onBlur","onClear","onKeyDownCapture","zIndex","suffix","lineHeight","as","href","rel","MotionFlex","StyledSwitch","PERSPECTIVE_TITLES","previewDrafts","raw","PERSPECTIVE_TONES","PERSPECTIVE_ICONS","PreviewFrame","initialUrl","navigatorEnabled","onPathChange","overlayEnabled","setPerspective","toggleNavigator","toggleOverlay","loadersConnection","overlaysConnection","previewKitConnection","setMode","prefersReducedMotion","setDesktopMode","setMobileMode","loading","setLoading","timedOut","setTimedOut","refreshing","setRefreshing","iframeIsBusy","somethingIsWrong","previewLocationOrigin","previewOrigin","URL","location","handleRefresh","src","showOverlaysConnectionStatus","setShowOverlaysConnectionState","previewLocationRoute","pathname","search","onIFrameLoad","transition","duration","delay","shadow","position","gap","minHeight","content","fallbackPlacements","placement","portal","selected","whiteSpace","borderRadius","userSelect","margin","checked","button","iconRight","menu","pressed","opacity","popover","constrainSize","cursor","initial","animate","exit","variants","spinnerVariants","inset","sizes","errorVariants","background","borderTop","boxShadow","backdropFilter","iframeVariants","onLoad","desktop","mobile","scale","idle","reloading","active","parsePath","rawPath","segments","urlStringToPath","pruneObject","initialPreviewUrl","routerNavigate","setParamsState","decodeURIComponent","rev","since","template","view","pathKey","instruction","comment","newParams","nextState","previewRef","previousPreview","pathToUrlString","fromString","searchParams","replace","usePreviewUrl","_previewUrl","toolName","_previewSearchParam","currentUser","resolvePreviewUrl","previewSearchParam","resolveUrlDeps","currentUserId","workspace","basePath","activeWorkspace","resolveUUID","usePreviewUrlSecretDependencies","resolvedUrl","secret","previewUrlSecret","Symbol","Navigator","component","NavigatorComponent","navigatorDisabled","PresentationTool","components","tool","unstable_navigator","option","hostname","iframeRef","setChannel","setLiveQueries","documentsOnPage","setDocumentsOnPage","changed","getKey","knownKeys","keys","perspective2","documentsOnPageMap","useDocumentsOnPage","setOverlayEnabled","navigatorProvided","setNavigatorEnabled","defaultValue","setValue","useLocalState","idRef","enabled","preloadRefs","setPreloadRefs","d","p","concat","setOverlaysConnection","setLoadersConnection","setPreviewKitConnection","contentWindow","nextChannel","url","isInitialNavigation","nextDocumentId","nextPath","handlePreviewPath","handleDeskParams","setLiveDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}