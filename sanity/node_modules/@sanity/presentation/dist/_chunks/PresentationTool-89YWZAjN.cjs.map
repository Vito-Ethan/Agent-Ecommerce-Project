{"version":3,"file":"PresentationTool-89YWZAjN.cjs","sources":["../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js","../../../channels/src/constants.ts","../../../channels/src/helper.ts","../../../channels/src/channels.ts","../../../visual-editing-helpers/dist/_chunks/urlStringToPath-FefM00gz.js","../../../visual-editing-helpers/dist/index.js","../../src/components/ErrorCard.tsx","../../src/usePresentationTool.ts","../../src/editor/PresentationPaneRouterProvider.tsx","../../src/editor/DocumentListPane.tsx","../../src/editor/DocumentListPanel.tsx","../../src/editor/DocumentPane.tsx","../../src/editor/DocumentPanel.tsx","../../src/editor/ContentEditor.tsx","../../src/loader/context.tsx","../../src/loader/turboChargeResultIfSourceMap.tsx","../../src/loader/utils.ts","../../src/loader/LiveStoreProvider.tsx","../../src/loader/useLiveQuery.ts","../../src/loader/LoaderQueries.tsx","../../src/panels/PanelsContext.tsx","../../src/panels/Panel.tsx","../../src/panels/PanelResizer.tsx","../../src/panels/usePanelId.ts","../../src/lib/debounce.ts","../../src/panels/usePanelsStorage.ts","../../src/panels/util.ts","../../src/panels/Panels.tsx","../../src/perf/HoldEditState.tsx","../../src/PresentationNavigateProvider.tsx","../../src/PresentationParamsProvider.tsx","../../src/PresentationProvider.tsx","../../src/preview/IFrame.tsx","../../src/preview/PreviewLocationInput.tsx","../../src/preview/PreviewFrame.tsx","../../src/parsePath.ts","../../src/useParams.ts","../../src/usePreviewUrl.ts","../../src/PresentationTool.tsx","../../src/useDocumentsOnPage.ts","../../src/useLocalState.ts"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import type { MsgType } from './types'\n\nexport const RESPONSE_TIMEOUT = 1000\nexport const HEARTBEAT_INTERVAL = 3000\n\nexport const INTERNAL_MSG_TYPES = [\n  'channel/disconnect',\n  'channel/response',\n] satisfies MsgType[]\n\nexport const HANDSHAKE_MSG_TYPES = [\n  'handshake/syn',\n  'handshake/syn-ack',\n  'handshake/ack',\n] satisfies MsgType[]\n\nexport const HEARTBEAT_MSG_TYPES = ['channel/heartbeat'] satisfies MsgType[]\n","import { HANDSHAKE_MSG_TYPES, INTERNAL_MSG_TYPES } from './constants'\nimport type { HandshakeMsgType, InternalMsgType, MsgType } from './types'\n\nexport const isObject = (value: unknown): value is Record<string, unknown> => {\n  return Boolean(value) && typeof value === 'object' && !Array.isArray(value)\n}\n\nexport const isInternalMessage = (\n  type: MsgType | InternalMsgType,\n): type is InternalMsgType => {\n  return INTERNAL_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isHandshakeMessage = (\n  type: MsgType | InternalMsgType,\n): type is HandshakeMsgType => {\n  return HANDSHAKE_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isHeartbeatMessage = (\n  type: MsgType | InternalMsgType,\n): type is 'channel/heartbeat' => {\n  return type === 'channel/heartbeat'\n}\n","import { v4 as uuid } from 'uuid'\n\nimport { HEARTBEAT_INTERVAL, RESPONSE_TIMEOUT } from './constants'\nimport {\n  isHandshakeMessage,\n  isHeartbeatMessage,\n  isInternalMessage,\n  isObject,\n} from './helper'\nimport type {\n  ChannelMsg,\n  ChannelOptions,\n  ChannelReturns,\n  Connection,\n  ConnectionStatus,\n  Msg,\n  MsgType,\n  ProtocolMsg,\n  ToArgs,\n} from './types'\n\n/**\n *\n * @public\n */\nexport function createChannel<T extends ChannelMsg>(\n  config: ChannelOptions<T>,\n): ChannelReturns<T> {\n  const inFrame = window.self !== window.top\n\n  const connections: Connection[] = config.connections.map((connection) => {\n    // const { target, targetOrigin, id: targetId } = connection\n    return {\n      buffer: [],\n      config: connection,\n      heartbeat: null,\n      id: null,\n      status: 'fresh',\n      // target,\n      // targetId,\n      // targetOrigin,\n    }\n  })\n\n  function flush(connection: Connection) {\n    const toFlush = [...connection.buffer]\n    connection.buffer.splice(0, connection.buffer.length)\n    toFlush.forEach(({ type, data }) => {\n      post(connection, type, data)\n    })\n  }\n\n  function startHeartbeat(connection: Connection) {\n    stopHeartbeat(connection)\n    if (connection.config.heartbeat) {\n      const heartbeatInverval =\n        typeof connection.config.heartbeat === 'number'\n          ? connection.config.heartbeat\n          : HEARTBEAT_INTERVAL\n      connection.heartbeat = window.setInterval(() => {\n        send('channel/heartbeat', undefined, [connection])\n      }, heartbeatInverval)\n    }\n  }\n  function stopHeartbeat(connection: Connection) {\n    if (connection.heartbeat) {\n      window.clearInterval(connection.heartbeat)\n    }\n  }\n\n  function setConnectionStatus(\n    connection: Connection,\n    newStatus: ConnectionStatus,\n  ) {\n    const prevStatus = connection.status\n    if (prevStatus !== newStatus) {\n      connection.status = newStatus\n      config.onStatusUpdate?.(newStatus, prevStatus, connection)\n      if (newStatus === 'connected') {\n        flush(connection)\n        startHeartbeat(connection)\n      }\n      if (newStatus === 'disconnected') {\n        stopHeartbeat(connection)\n      }\n    }\n  }\n\n  function findConnection(e: MessageEvent<unknown>) {\n    const { source, origin, data } = e\n    if (isObject(data)) {\n      return connections.find((connection) => {\n        return (\n          config.id === data.to &&\n          connection.config.id === data.from &&\n          connection.config.target === source &&\n          (connection.config.targetOrigin === origin ||\n            connection.config.targetOrigin === '*') &&\n          // Must match the connection id or be a handshake\n          (connection.id === data.connectionId ||\n            isHandshakeMessage(data.type as MsgType))\n        )\n      })\n    }\n    return undefined\n  }\n\n  function post<K extends T['type']>(\n    connection: Connection,\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    return new Promise<string>((resolve, reject) => {\n      const msg: Msg = {\n        id: uuid(),\n        type,\n        connectionId: connection.id,\n        from: config.id,\n        to: connection.config.id,\n        data,\n      }\n\n      const isInternal = isInternalMessage(type)\n      const isHandshake = isHandshakeMessage(type)\n      const isHeartbeat = isHeartbeatMessage(type)\n      const activeConnection = connections.find(\n        (c) => c.id === connection.id && c.status === 'connected',\n      )\n\n      // Always send internal messages\n      // Otherwise send if connection is active\n      if (isInternal || isHandshake || isHeartbeat || activeConnection) {\n        if (!isInternal || isHeartbeat) {\n          // If the message isn’t internal, and the connection is active, we should receive a response. If we don't, reject, as the channel is unhealthy\n          const maxWait = setTimeout(() => {\n            // The connection may have changed, so only reject if the IDs match\n            if (msg.connectionId === connection.id) {\n              reject({\n                reason: `Received no response to message '${msg.id}' on client '${config.id}'`,\n                msg,\n                connection,\n              })\n            } else {\n              resolve(msg.id)\n            }\n          }, RESPONSE_TIMEOUT)\n\n          const transact = (e: MessageEvent<Msg>) => {\n            const { data: eventData } = e\n            if (\n              eventData.type === 'channel/response' &&\n              eventData.data?.responseTo &&\n              eventData.data.responseTo === msg.id\n            ) {\n              window.removeEventListener('message', transact, false)\n              clearTimeout(maxWait)\n              resolve(msg.id)\n            }\n          }\n          window.addEventListener('message', transact, false)\n        }\n\n        try {\n          // Handshakes may be dispatched before an iframe has loaded in which case the targetOrigin will not match, so send handshakes using '*'\n          const targetOrigin = isHandshake\n            ? '*'\n            : connection.config.targetOrigin\n          connection.config.target.postMessage(msg, { targetOrigin })\n          // Don't wait for internal message or handshake responses\n          if (isInternal || isHandshake) resolve(msg.id)\n          return\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.error('Failed to postMessage', e, { msg, connection })\n          reject({\n            reason: `Failed to postMessage '${msg.id}' on client '${config.id}'`,\n            msg,\n            connection,\n          })\n        }\n      }\n\n      // Buffer messages if we have a fresh connection or connecting\n      if (connection.status === 'fresh' || connection.status === 'connecting') {\n        connection.buffer.push({\n          type,\n          data,\n        })\n        resolve(msg.id)\n      }\n\n      reject({\n        reason: `Will not send message '${msg.id}' on client '${config.id}'`,\n        msg,\n        connection,\n      })\n    })\n  }\n\n  function postMany<K extends T['type']>(\n    connections: Connection[],\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    return Promise.allSettled(\n      connections.map((connection) => post(connection, type, data)),\n    )\n  }\n\n  function handleHandshake(\n    connection: Connection,\n    e: MessageEvent<ProtocolMsg>,\n  ) {\n    if (e.data.type === 'handshake/syn') {\n      const id = e.data.data?.id || connection.id\n      connection.id = id\n      post(connection, 'handshake/syn-ack', { id })\n    }\n    if (e.data.type === 'handshake/syn-ack') {\n      const id = e.data.data?.id || connection.id\n      connection.id = id\n      setConnectionStatus(connection, 'connected')\n      post(connection, 'handshake/ack', { id })\n    }\n    if (e.data.type === 'handshake/ack') {\n      const id = e.data.data?.id || connection.id\n      connection.id = id\n      setConnectionStatus(connection, 'connected')\n    }\n  }\n\n  function handleEvents(e: MessageEvent) {\n    const connection = findConnection(e)\n    if (!connection) return\n    const { data } = e\n    if (isHandshakeMessage(data.type)) {\n      handleHandshake(connection, e)\n    } else if (data.type === 'channel/disconnect') {\n      setConnectionStatus(connection, 'disconnected')\n    } else if (data.type === 'channel/response') {\n      // Do nothing for now\n    } else {\n      // eslint-disable-next-line no-warning-comments\n      // @todo Ugly type casting\n      const args = [data.type, data.data] as ToArgs<T>\n      config.handler(...args)\n      post(connection, 'channel/response', { responseTo: data.id })\n    }\n  }\n\n  function disconnect() {\n    window.removeEventListener('message', handleEvents, false)\n    const connectionsToDisconnect = connections.filter(\n      ({ status }) => status === 'connecting' || status === 'connected',\n    )\n    if (!connectionsToDisconnect.length) return\n    postMany(connectionsToDisconnect, 'channel/disconnect')\n    connectionsToDisconnect.forEach((connection) => {\n      setConnectionStatus(connection, 'disconnected')\n    })\n  }\n\n  function connect() {\n    window.addEventListener('message', handleEvents, false)\n    const inactiveConnections = connections.filter((connection) =>\n      ['disconnected', 'fresh', 'unhealthy'].includes(connection.status),\n    )\n    return Promise.all(\n      inactiveConnections.map((connection) => {\n        setConnectionStatus(connection, 'connecting')\n        return post(connection, 'handshake/syn', { id: uuid() })\n      }),\n    )\n  }\n\n  /**\n   * Dispatch a message to all connections\n   * @param type The message type\n   * @param data The message body\n   * @returns void\n   */\n  async function send(\n    type: T['type'],\n    data?: T['data'],\n    connectionSubset?: Connection[],\n  ) {\n    const results = await postMany(connectionSubset || connections, type, data)\n    results.forEach((result) => {\n      if (result.status === 'rejected') {\n        const connection = connections.find(\n          (connection) =>\n            connection.status === 'connected' &&\n            connection.id === result.reason.connection.id,\n        )\n        if (connection) {\n          setConnectionStatus(connection, 'unhealthy')\n        }\n      }\n    })\n    return results\n  }\n\n  connect()\n\n  return {\n    disconnect,\n    inFrame,\n    send,\n  }\n}\n","function n(n){return\"object\"==typeof n&&null!==n&&!Array.isArray(n)}function e(n){return null!==n&&Array.isArray(n)}function t(n){let t=\"\";for(const r of n)\"string\"!=typeof r?\"number\"!=typeof r?e(r)?(t&&(t+=\":\"),t+=`${r.join(\",\")}}`):r._key&&(t&&(t+=\":\"),t+=`${r._key}`):(t&&(t+=\":\"),t+=`${r}`):(t&&(t+=\".\"),t+=r);return t}const r=/^([A-Za-z]+):([0-9]+)$/,o=/^([A-Za-z]+):([0-9]+),([0-9]+)$/,u=/^([A-Za-z]+):([a-z0-9]+)$/;function s(n){const e=[];for(const t of n.split(\".\")){const n=r.exec(t);if(n){e.push(n[1],Number(n[2]));continue}const s=o.exec(t);if(s){e.push(s[1],[Number(s[2]),Number(s[3])]);continue}const c=u.exec(t);c?e.push(c[1],{_key:c[2]}):e.push(t)}return e}export{e as a,n as i,t as p,s as u};//# sourceMappingURL=urlStringToPath-FefM00gz.js.map\n","export{p as pathToUrlString,u as urlStringToPath}from\"./_chunks/urlStringToPath-FefM00gz.js\";function t(t,r){return`${t}-${\"string\"==typeof r?r:JSON.stringify(r)}`}const r=\"undefined\"!=typeof window&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform),e={alt:\"altKey\",ctrl:\"ctrlKey\",mod:r?\"metaKey\":\"ctrlKey\",shift:\"shiftKey\"};function n(t,r){return t.every((t=>e[t]?r[e[t]]:r.key===t.toUpperCase()))}function o(t){return t.key===(r?\"Meta\":\"Ctrl\")}function i(t){return\"Alt\"===t.key}export{t as getQueryCacheKey,i as isAltKey,n as isHotkey,o as isModKey};//# sourceMappingURL=index.js.map\n","import {\n  Box,\n  Button,\n  Card,\n  CardProps,\n  Container,\n  Flex,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport { ReactElement, ReactNode } from 'react'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n  } & CardProps,\n): ReactElement {\n  const { children, message, onRetry, ...restProps } = props\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                An error occured\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && (\n              <Box>\n                <Button\n                  fontSize={1}\n                  mode=\"ghost\"\n                  onClick={onRetry}\n                  text=\"Retry\"\n                />\n              </Box>\n            )}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import { useContext } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\n\nexport function usePresentationTool(): PresentationContextValue {\n  const presentation = useContext(PresentationContext)\n\n  if (!presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","/* eslint-disable no-console */\n\nimport {\n  forwardRef,\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useMemo,\n} from 'react'\nimport { getPublishedId, useUnique } from 'sanity'\nimport {\n  BackLinkProps,\n  PaneRouterContext,\n  PaneRouterContextValue,\n  ReferenceChildLinkProps,\n} from 'sanity/desk'\nimport { StateLink, useRouter } from 'sanity/router'\n\nimport { DeskDocumentPaneParams, PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(\n  nextParams: Record<string, string | undefined>,\n) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return { ...obj, [key]: value }\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { deskParams, params } = usePresentationTool()\n\n  return (\n    <StateLink\n      {...props}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries({\n          ...deskParams,\n          preview: params.preview,\n        }),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { documentId, documentType, ...restProps } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{ path: documentId, type: documentType }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onDeskParams: (params: DeskDocumentPaneParams) => void\n    params: DeskDocumentPaneParams\n    previewUrl?: string\n    refs?: { _id: string; _type: string }[]\n  }>,\n): ReactElement {\n  const { children, params, onDeskParams, previewUrl, refs } = props\n\n  const { state: routerState, resolvePathFromState } = useRouter()\n\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] =\n    useCallback(\n      (nextParams) => {\n        const path = resolvePathFromState(routerState)\n        const qs = resolveQueryStringFromParams({\n          ...routerSearchParams,\n          ...nextParams,\n        })\n        return `${path}${qs}`\n      },\n      [resolvePathFromState, routerSearchParams, routerState],\n    )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      params: params as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const { childId, ...restProps } = childLinkProps\n        const ref = refs?.find((r) => getPublishedId(r._id) === childId)\n\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                path: ref._id,\n                type: ref._type,\n                _searchParams: Object.entries({ preview: previewUrl }),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink,\n      ReferenceChildLink,\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        onDeskParams({\n          ...nextParams,\n          // eslint-disable-next-line no-warning-comments\n          // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n          inspect: nextParams.inspect ?? undefined,\n        } as DeskDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onDeskParams, params, previewUrl, refs])\n\n  return (\n    <PaneRouterContext.Provider value={context}>\n      {children}\n    </PaneRouterContext.Provider>\n  )\n}\n","import { Card, Code, ErrorBoundary, Flex, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport {\n  DeskToolProvider,\n  DocumentListPane as DeskDocumentListPane,\n  PaneLayout,\n  PaneNode,\n} from 'sanity/desk'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n  const { devMode } = usePresentationTool()\n\n  const pane: Extract<PaneNode, { type: 'documentList' }> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: { ids: refs.map((r) => r._id) },\n      },\n      schemaTypeName: '',\n      title: 'Documents on this page',\n      type: 'documentList',\n    }),\n    [refs],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const deskParams = useMemo(() => ({}), [])\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document list\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <DeskToolProvider>\n          <PresentationPaneRouterProvider\n            params={deskParams}\n            onDeskParams={onDeskParams}\n            previewUrl={previewUrl}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <DeskDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </DeskToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import { ReactElement } from 'react'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPane } from './DocumentListPane'\n\nexport function DocumentListPanel(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n\n  return (\n    <DocumentListPane\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refs}\n    />\n  )\n}\n","import { Card, Code, ErrorBoundary, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { Path } from 'sanity'\nimport {\n  DocumentPane as DeskDocumentPane,\n  DocumentPaneNode,\n  PaneLayout,\n  useDeskTool,\n} from 'sanity/desk'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  params: DeskDocumentPaneParams\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n}): ReactElement {\n  const { documentId, documentType, params, onDeskParams, onFocusPath } = props\n  const { devMode } = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, params])\n\n  const { setLayoutCollapsed } = useDeskTool()\n  const handleRootCollapse = useCallback(\n    () => setLayoutCollapsed(true),\n    [setLayoutCollapsed],\n  )\n  const handleRootExpand = useCallback(\n    () => setLayoutCollapsed(false),\n    [setLayoutCollapsed],\n  )\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document editor\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout\n        style={{ height: '100%' }}\n        onExpand={handleRootExpand}\n        onCollapse={handleRootCollapse}\n      >\n        <PresentationPaneRouterProvider\n          onDeskParams={onDeskParams}\n          params={params}\n        >\n          <DeskDocumentPane\n            paneKey=\"document\"\n            index={1}\n            itemId=\"document\"\n            pane={paneDocumentNode}\n            onFocusPath={onFocusPath}\n          />\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import { ReactElement, useCallback, useEffect } from 'react'\nimport { Path, SanityDocument, useEditState } from 'sanity'\nimport { DeskToolProvider } from 'sanity/desk'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentPane } from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId: string\n  documentType: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (documentId: string, path: Path) => void\n  onDocumentChange: (document: SanityDocument | null) => void\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    onDocumentChange,\n  } = props\n\n  const editState = useEditState(documentId, documentType)\n  const documentValue = editState.draft || editState.published\n\n  // Sync changes to the document being edited back up to the live loaders\n  useEffect(\n    () => onDocumentChange(documentValue),\n    [documentValue, onDocumentChange],\n  )\n\n  const handleFocusPath = useCallback(\n    (path: Path) => {\n      if (documentValue?._id) {\n        onFocusPath(documentValue._id, path)\n      }\n    },\n    [documentValue, onFocusPath],\n  )\n\n  return (\n    <DeskToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        params={deskParams}\n        onDeskParams={onDeskParams}\n        onFocusPath={handleFocusPath}\n      />\n    </DeskToolProvider>\n  )\n}\n","import { ReactElement } from 'react'\nimport { Path, SanityDocument } from 'sanity'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPanel } from './DocumentListPanel'\nimport { DocumentPanel } from './DocumentPanel'\n\nexport function ContentEditor(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId?: string\n  documentType?: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (documentId: string, path: Path) => void\n  onDocumentChange: (document: SanityDocument | null) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    onDocumentChange,\n    previewUrl,\n    refs,\n  } = props\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        deskParams={deskParams}\n        documentId={documentId}\n        documentType={documentType}\n        onDeskParams={onDeskParams}\n        onFocusPath={onFocusPath}\n        onDocumentChange={onDocumentChange}\n      />\n    )\n  }\n\n  return (\n    <DocumentListPanel\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refs}\n    />\n  )\n}\n","import { createContext } from 'react'\n\nimport { DefineListenerContext } from './types'\nimport { QueryCacheKey } from './utils'\n\n/**\n * @internal\n */\nexport const defineListenerContext =\n  createContext<DefineListenerContext | null>(null)\n\n/**\n * If it's `null` then the listener should be treated as `success`, otherwise if a listener isn't in the array it should be considered as `loading`\n * @internal\n */\nexport const LoadedListenersContext = createContext<QueryCacheKey[] | null>(\n  null,\n)\n\n/**\n * Aids in debugging, notifying if the parent has a GroqStoreProvider, or a LiveStoreProvider, and is thus `live`.\n * This is helpful as the `useLiveQuery` hook itself works even if no provider is present, but it will not be `live`.\n * @internal\n */\nexport const IsEnabledContext = createContext<boolean>(false)\n","import type {\n  ClientPerspective,\n  ContentSourceMap,\n  SanityDocument,\n} from '@sanity/client'\nimport { applySourceDocuments } from '@sanity/client/csm'\nimport {\n  unstable__documentsCache,\n  unstable__getDocumentCacheKey,\n} from '@sanity/groq-store'\n\nlet warnedAboutCrossDatasetReference = false\n\nexport function turboChargeResultIfSourceMap(\n  liveDocument: SanityDocument | null,\n  projectId: string,\n  dataset: string,\n  result: unknown,\n  perspective: ClientPerspective,\n  resultSourceMap?: ContentSourceMap,\n): any {\n  if (perspective === 'raw') {\n    throw new Error(\n      'turboChargeResultIfSourceMap does not support raw perspective',\n    )\n  }\n  return applySourceDocuments(result, resultSourceMap, (sourceDocument) => {\n    if (sourceDocument._projectId) {\n      // @TODO Handle cross dataset references\n      if (!warnedAboutCrossDatasetReference) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Cross dataset references are not supported yet, ignoring source document',\n          sourceDocument,\n        )\n        warnedAboutCrossDatasetReference = true\n      }\n      return undefined\n    }\n    // If the draft matches, use that as it's the most up to date\n    if (\n      liveDocument?._id === sourceDocument._id &&\n      liveDocument?._type === sourceDocument._type\n    ) {\n      return liveDocument\n    }\n    // Fallback to general documents cache\n    const key = unstable__getDocumentCacheKey(\n      { projectId, dataset, perspective },\n      sourceDocument,\n    )\n    return unstable__documentsCache.get(key)\n  })\n}\n","import type { ClientPerspective, QueryParams } from '@sanity/client'\nimport { useMemo } from 'react'\n\n/**\n * @internal\n */\nexport type QueryCacheKey = `${ClientPerspective}-${string}-${string}`\n/**\n * @internal\n */\nexport function getQueryCacheKey(\n  perspective: ClientPerspective,\n  query: string,\n  params: QueryParams,\n): QueryCacheKey {\n  return `${perspective}-${query}-${JSON.stringify(params)}`\n}\n\n/**\n * Return params that are stable with deep equal as long as the key order is the same\n * @internal\n */\nexport function useParams(\n  params?: undefined | null | QueryParams,\n): QueryParams {\n  const stringifiedParams = useMemo(\n    () => JSON.stringify(params || {}),\n    [params],\n  )\n  return useMemo(\n    () => JSON.parse(stringifiedParams) as QueryParams,\n    [stringifiedParams],\n  )\n}\n","import type {\n  ClientConfig,\n  ClientPerspective,\n  ContentSourceMap,\n  QueryParams,\n  SanityClient,\n  SanityDocument,\n} from '@sanity/client'\nimport {\n  DocumentCachePerspective,\n  unstable__documentsCache,\n  unstable__getDocumentCacheKey,\n} from '@sanity/groq-store'\nimport { applyPatch } from 'mendoza'\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  useSyncExternalStore,\n} from 'react'\n\nimport { defineListenerContext as Context, IsEnabledContext } from './context'\nimport { turboChargeResultIfSourceMap } from './turboChargeResultIfSourceMap'\nimport type {\n  DefineListenerContext,\n  ListenerGetSnapshot,\n  ListenerSubscribe,\n  Logger,\n} from './types'\nimport { getQueryCacheKey, type QueryCacheKey } from './utils'\n\nexport type { Logger }\n\n/**\n * @internal\n */\nexport interface LiveStoreProviderProps {\n  children: React.ReactNode\n  /**\n   * The Sanity client to use for fetching data and listening to mutations.\n   */\n  client: SanityClient\n  /**\n   * How frequently queries should be refetched in the background to refresh the parts of queries that can't be source mapped.\n   * Setting it to `0` will disable background refresh.\n   * @defaultValue 10000\n   */\n  refreshInterval?: number\n  perspective: ClientPerspective\n  liveDocument: SanityDocument | null\n}\n/**\n * @internal\n */\nconst LiveStoreProvider = memo(function LiveStoreProvider(\n  props: LiveStoreProviderProps,\n) {\n  const {\n    liveDocument,\n    children,\n    client,\n    refreshInterval = 2000,\n    perspective,\n  } = props\n  if (perspective === 'raw') {\n    throw new Error('LiveStoreProvider does not support the raw perspective')\n  }\n\n  const [subscriptions, setSubscriptions] = useState<QueryCacheKey[]>([])\n  const [snapshots] = useState<QuerySnapshotsCache>(() => new Map())\n  const hooks = useHooks(setSubscriptions)\n  const [context] = useState<DefineListenerContext>(() => {\n    return function defineListener<QueryResult>(\n      initialSnapshot: QueryResult,\n      query: string,\n      params: QueryParams,\n    ) {\n      const key = getQueryCacheKey(perspective, query, params)\n\n      const subscribe: ListenerSubscribe = (onStoreChange) => {\n        const unsubscribe = hooks.subscribe(\n          key,\n          perspective,\n          query,\n          params,\n          onStoreChange,\n        )\n\n        return () => unsubscribe()\n      }\n      const getSnapshot: ListenerGetSnapshot<{\n        result: QueryResult\n        resultSourceMap?: ContentSourceMap\n      }> = () =>\n        snapshots.get(key) as unknown as {\n          result: QueryResult\n          resultSourceMap?: ContentSourceMap\n        }\n\n      return { subscribe, getSnapshot }\n    } satisfies DefineListenerContext\n  })\n  const [turboIds, setTurboIds] = useState<string[]>([])\n  const turboIdsFromSourceMap = useCallback(\n    (contentSourceMap: ContentSourceMap) => {\n      // This handler only adds ids, on each query fetch. But that's ok since <Turbo /> purges ids that are unused\n      const nextTurboIds = new Set<string>()\n      if (contentSourceMap.documents?.length) {\n        for (const { _id } of contentSourceMap.documents) {\n          // @TODO only add local ids, not remote ones\n          nextTurboIds.add(_id)\n        }\n      }\n      setTurboIds((prevTurboIds) => {\n        const mergedTurboIds = Array.from(\n          new Set([...prevTurboIds, ...nextTurboIds]),\n        )\n        if (\n          JSON.stringify(mergedTurboIds.sort()) ===\n          JSON.stringify(prevTurboIds.sort())\n        ) {\n          return prevTurboIds\n        }\n        return mergedTurboIds\n      })\n    },\n    [],\n  )\n\n  return (\n    <Context.Provider value={context}>\n      <IsEnabledContext.Provider value>{children}</IsEnabledContext.Provider>\n      <Turbo\n        liveDocument={liveDocument}\n        cache={hooks.cache}\n        client={client}\n        setTurboIds={setTurboIds}\n        snapshots={snapshots}\n        turboIds={turboIds}\n        perspective={perspective}\n      />\n      {subscriptions.map((key) => {\n        if (!hooks.cache.has(key)) return null\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const { query, params, listeners } = hooks.cache.get(key)!\n        return (\n          <QuerySubscription\n            key={key}\n            liveDocument={liveDocument}\n            client={client}\n            listeners={listeners}\n            params={params}\n            query={query}\n            refreshInterval={refreshInterval}\n            snapshots={snapshots}\n            turboIdsFromSourceMap={turboIdsFromSourceMap}\n            perspective={perspective}\n          />\n        )\n      })}\n    </Context.Provider>\n  )\n})\nLiveStoreProvider.displayName = 'LiveStoreProvider'\nexport default LiveStoreProvider\n\ninterface QuerySubscriptionProps\n  extends Required<Pick<LiveStoreProviderProps, 'client' | 'refreshInterval'>> {\n  liveDocument: SanityDocument | null\n  query: string\n  params: QueryParams\n  listeners: Set<() => void>\n  turboIdsFromSourceMap: (contentSourceMap: ContentSourceMap) => void\n  snapshots: QuerySnapshotsCache\n  perspective: ClientPerspective\n}\nconst QuerySubscription = memo(function QuerySubscription(\n  props: QuerySubscriptionProps,\n) {\n  const {\n    liveDocument,\n    client,\n    refreshInterval,\n    query,\n    params,\n    listeners,\n    snapshots,\n    turboIdsFromSourceMap,\n    perspective,\n  } = props\n  const { projectId, dataset } = useMemo(() => {\n    const { projectId, dataset } = client.config()\n    return { projectId, dataset } as Required<\n      Pick<ClientConfig, 'projectId' | 'dataset'>\n    >\n  }, [client])\n\n  // Make sure any async errors bubble up to the nearest error boundary\n  const [error, setError] = useState<unknown>(null)\n  if (error) throw error\n\n  const [revalidate, startRefresh] = useRevalidate({ refreshInterval })\n  const shouldRefetch = revalidate === 'refresh' || revalidate === 'inflight'\n  useEffect(() => {\n    if (!shouldRefetch) {\n      return\n    }\n\n    let fulfilled = false\n    const controller = new AbortController()\n    // eslint-disable-next-line no-inner-declarations\n    async function effect() {\n      const { signal } = controller\n      const { result, resultSourceMap } = await client.fetch(query, params, {\n        tag: 'presentation-loader',\n        signal,\n        perspective,\n        filterResponse: false,\n      })\n\n      if (!signal.aborted) {\n        snapshots.set(getQueryCacheKey(perspective, query, params), {\n          result: resultSourceMap\n            ? turboChargeResultIfSourceMap(\n                liveDocument,\n                projectId,\n                dataset,\n                result,\n                perspective,\n                resultSourceMap,\n              )\n            : result,\n          resultSourceMap,\n        })\n\n        if (resultSourceMap) {\n          turboIdsFromSourceMap(resultSourceMap)\n        }\n\n        // Notify listeners that snapshots are updated\n        for (const listener of listeners.values()) {\n          listener()\n        }\n        fulfilled = true\n      }\n    }\n    const onFinally = startRefresh()\n    effect()\n      .catch((error) => {\n        if (error.name !== 'AbortError') {\n          setError(error)\n        }\n      })\n      .finally(onFinally)\n    return () => {\n      if (!fulfilled) {\n        controller.abort()\n      }\n    }\n  }, [\n    liveDocument,\n    client,\n    dataset,\n    listeners,\n    params,\n    projectId,\n    query,\n    shouldRefetch,\n    snapshots,\n    startRefresh,\n    turboIdsFromSourceMap,\n    perspective,\n  ])\n\n  return null\n})\nQuerySubscription.displayName = 'QuerySubscription'\n\ntype QuerySnapshotsCache = Map<\n  QueryCacheKey,\n  { result: unknown; resultSourceMap?: ContentSourceMap }\n>\n\nfunction onVisibilityChange(onStoreChange: () => void): () => void {\n  document.addEventListener('visibilitychange', onStoreChange)\n  return () => document.removeEventListener('visibilitychange', onStoreChange)\n}\n\n/**\n * Keeps track of when revalidation and activities should be paused\n */\nfunction useShouldPause(): boolean {\n  const [online, setOnline] = useState(false)\n  useEffect(() => {\n    setOnline(navigator.onLine)\n    const online = () => setOnline(true)\n    const offline = () => setOnline(false)\n    window.addEventListener('online', online)\n    window.addEventListener('offline', offline)\n    return () => {\n      window.removeEventListener('online', online)\n      window.removeEventListener('offline', offline)\n    }\n  }, [])\n  const visibilityState = useSyncExternalStore(\n    onVisibilityChange,\n    () => document.visibilityState,\n    () => 'hidden' satisfies DocumentVisibilityState,\n  )\n\n  // Should pause activity when offline\n  if (!online) {\n    return true\n  }\n\n  // Should pause when the document isn't visible, as it's likely the user isn't looking at the page\n  if (visibilityState === 'hidden') {\n    return true\n  }\n\n  return false\n}\n\n/**\n * 'hit' - the cache is fresh and valid\n * 'stale' - the cache should revalidate, but can't/shouldn't yet (offline, visibility = hidden)\n * 'refresh' - stale cache, and now is a great time to start refreshing\n * 'inflight' - refreshing cache, revalidate events should be ignored\n */\ntype RevalidateState = 'hit' | 'stale' | 'refresh' | 'inflight'\n/**\n * Keeps track of when queries should revalidate\n */\nfunction useRevalidate(\n  props: Pick<LiveStoreProviderProps, 'refreshInterval'>,\n): [RevalidateState, () => () => void] {\n  const { refreshInterval } = props\n\n  const shouldPause = useShouldPause()\n  const [state, setState] = useState<RevalidateState>('hit')\n\n  // Keep track of indicators for when revalidation should be 'paused'\n  // Like if we're currently offline, or the document isn't visible\n  // Basically if 'stale' and all good we return 'refresh'\n\n  // Next keep track of staleness itself. If we come back online, on a windows focus event\n  // or on a refreshInterval timeout\n  // Basically it controls if cache should be 'hit' or 'stale'\n\n  // How to handle refresh to inflight?\n\n  const startRefresh = useCallback(() => {\n    setState('inflight')\n    return () => setState('hit')\n  }, [])\n\n  // Revalidate on refreshInterval\n  useEffect(() => {\n    // If refreshInterval is nullish then we don't want to refresh.\n    // Inflight means it's already refreshing and we pause the countdown.\n    // It's only necessary to start the countdown if the cache isn't already stale\n    if (!refreshInterval || state !== 'hit') {\n      return\n    }\n    const timeout = setTimeout(() => setState('stale'), refreshInterval)\n    return () => clearTimeout(timeout)\n  }, [refreshInterval, state])\n  // Revalidate on windows focus\n  useEffect(() => {\n    if (state !== 'hit') {\n      return\n    }\n    const onFocus = () => setState('stale')\n    window.addEventListener('focus', onFocus)\n    return () => window.removeEventListener('focus', onFocus)\n  }, [refreshInterval, state])\n  // Revalidate on changes to shouldPause\n  useEffect(() => {\n    // Mark as stale pre-emptively if we're offline or the document isn't visible\n    if (shouldPause && state === 'hit') {\n      setState('stale')\n    }\n    // If not paused we can mark stale as ready for refresh\n    if (!shouldPause && state === 'stale') {\n      setState('refresh')\n    }\n  }, [shouldPause, state])\n\n  return [state, startRefresh]\n}\n\ntype LiveStoreQueryCacheMap = Map<\n  QueryCacheKey,\n  {\n    query: string\n    params: QueryParams\n    perspective: ClientPerspective\n    listeners: Set<() => void>\n  }\n>\n\n/**\n * Keeps track of store subscribers per cache key, in a way that's designed for useSyncExternalStore.\n * The main difference from a typical subscription state with useEffect is that `adding` and `cleanup`\n * is wholly managed by the `subscribe` function in `useSyncExternalStore`, instead of lifecycles in useEffect.\n * And since the `onStoreChange` callback, provided to `subscribe`, notifies React when to re-render,\n * there is no need to use `setState` to trigger a re-render. That's why the Map is persisted in `useState` but the state setter isn't used.\n */\nfunction useHooks(\n  setSubscriptions: React.Dispatch<React.SetStateAction<QueryCacheKey[]>>,\n): {\n  cache: LiveStoreQueryCacheMap\n  subscribe: (\n    key: QueryCacheKey,\n    perspective: ClientPerspective,\n    query: string,\n    params: QueryParams,\n    listener: () => void,\n  ) => () => void\n} {\n  const [cache] = useState<LiveStoreQueryCacheMap>(() => new Map())\n  const subscribe = useCallback(\n    (\n      key: QueryCacheKey,\n      perspective: ClientPerspective,\n      query: string,\n      params: QueryParams,\n      listener: () => void,\n    ) => {\n      if (!cache.has(key)) {\n        cache.set(key, {\n          perspective,\n          query,\n          params,\n          listeners: new Set<() => void>(),\n        })\n        setSubscriptions((prevSubscriptions) => {\n          if (prevSubscriptions.includes(key)) {\n            return prevSubscriptions\n          }\n          return [...prevSubscriptions, key]\n        })\n      }\n      const hook = cache.get(key)\n      if (!hook || !hook.listeners) {\n        throw new TypeError('Inconsistent cache for key: ' + key)\n      }\n      const { listeners } = hook\n      listeners.add(listener)\n      return () => {\n        listeners.delete(listener)\n        if (listeners.size === 0) {\n          cache.delete(key)\n          setSubscriptions((prevSubscriptions) => {\n            if (prevSubscriptions.includes(key)) {\n              return prevSubscriptions.filter((sub) => sub !== key)\n            }\n            return prevSubscriptions\n          })\n        }\n      }\n    },\n    [cache, setSubscriptions],\n  )\n  return useMemo(() => ({ cache, subscribe }), [cache, subscribe])\n}\n\ninterface TurboProps extends Pick<LiveStoreProviderProps, 'client'> {\n  liveDocument: SanityDocument | null\n  turboIds: string[]\n  setTurboIds: React.Dispatch<React.SetStateAction<string[]>>\n  cache: LiveStoreQueryCacheMap\n  snapshots: QuerySnapshotsCache\n  perspective: DocumentCachePerspective\n}\n/**\n * A turbo-charged mutation observer that uses Content Source Maps to apply mendoza patches on your queries\n */\nconst Turbo = memo(function Turbo(props: TurboProps) {\n  const {\n    liveDocument,\n    client,\n    snapshots,\n    cache,\n    turboIds,\n    setTurboIds,\n    perspective,\n  } = props\n  const { projectId, dataset } = useMemo(() => {\n    const { projectId, dataset } = client.config()\n    return { projectId, dataset } as Required<\n      Pick<ClientConfig, 'projectId' | 'dataset'>\n    >\n  }, [client])\n\n  // Keep track of document ids that the active `useLiveQuery` hooks care about\n  useEffect(() => {\n    const nextTurboIds = new Set<string>()\n    for (const { perspective, query, params } of cache.values()) {\n      const key = getQueryCacheKey(perspective, query, params)\n      const snapshot = snapshots.get(key)\n      if (snapshot && snapshot.resultSourceMap?.documents?.length) {\n        for (const { _id } of snapshot.resultSourceMap.documents) {\n          nextTurboIds.add(_id)\n        }\n      }\n    }\n    const nextTurboIdsSnapshot = [...nextTurboIds].sort()\n    if (JSON.stringify(turboIds) !== JSON.stringify(nextTurboIdsSnapshot)) {\n      setTurboIds(nextTurboIdsSnapshot)\n    }\n  }, [cache, setTurboIds, snapshots, turboIds])\n\n  // Figure out which documents are missing from the cache\n  const [batch, setBatch] = useState<string[][]>([])\n  useEffect(() => {\n    const batchSet = new Set(batch.flat())\n    const nextBatch = new Set<string>()\n    for (const turboId of turboIds) {\n      if (\n        !batchSet.has(turboId) &&\n        !unstable__documentsCache.has(\n          unstable__getDocumentCacheKey(\n            { projectId, dataset, perspective },\n            { _id: turboId },\n          ),\n        )\n      ) {\n        nextBatch.add(turboId)\n      }\n    }\n    const nextBatchSlice = [...nextBatch].slice(0, 10)\n    if (nextBatchSlice.length === 0) return\n    setBatch((prevBatch) => [...prevBatch.slice(-10), nextBatchSlice])\n  }, [batch, dataset, perspective, projectId, turboIds])\n\n  const [lastMutatedDocumentId, setLastMutatedDocumentId] = useState<string>()\n  // Use the same listen instance and patch documents as they come in\n  useEffect(() => {\n    const subscription = client\n      .listen(\n        perspective === 'published'\n          ? `*[!(_id in path(\"drafts.**\"))]`\n          : `*[_id in path(\"drafts.**\")]`,\n        {},\n        {\n          events: ['mutation'],\n          effectFormat: 'mendoza',\n          includePreviousRevision: false,\n          includeResult: false,\n          tag: 'presentation-loader',\n        },\n      )\n      .subscribe((update) => {\n        if (update.type !== 'mutation' || !update.effects?.apply?.length) return\n        // Schedule a reach state update with the ID of the document that were mutated\n        // This react handler will apply the document to related source map snapshots\n        const key = unstable__getDocumentCacheKey(\n          { projectId, dataset, perspective },\n          { _id: update.documentId },\n        )\n        const cachedDocument = unstable__documentsCache.peek(key)\n        if (cachedDocument as SanityDocument) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const patchDoc = { ...cachedDocument } as any\n          delete patchDoc._rev\n          const patchedDocument = applyPatch(patchDoc, update.effects.apply)\n          unstable__documentsCache.set(key, patchedDocument)\n        }\n\n        setLastMutatedDocumentId(update.documentId)\n      })\n    return () => subscription.unsubscribe()\n  }, [client, dataset, perspective, projectId])\n\n  // If the last mutated document is in the list over turboIds then lets apply the source map\n  useEffect(() => {\n    if (!lastMutatedDocumentId || !turboIds.includes(lastMutatedDocumentId))\n      return\n\n    const updatedKeys: QueryCacheKey[] = []\n    for (const [key, snapshot] of snapshots.entries()) {\n      if (snapshot.resultSourceMap?.documents?.length) {\n        snapshot.result = turboChargeResultIfSourceMap(\n          liveDocument,\n          projectId,\n          dataset,\n          snapshot.result,\n          perspective,\n          snapshot.resultSourceMap,\n        )\n        updatedKeys.push(key)\n      }\n    }\n    for (const updatedKey of updatedKeys) {\n      const listeners = cache.get(updatedKey)?.listeners\n      if (listeners) {\n        for (const listener of listeners) {\n          listener()\n        }\n      }\n    }\n    setLastMutatedDocumentId(undefined)\n  }, [\n    liveDocument,\n    cache,\n    dataset,\n    lastMutatedDocumentId,\n    perspective,\n    projectId,\n    snapshots,\n    turboIds,\n  ])\n\n  const [lastDraftDocumentRev, setLastDraftDocumentRev] = useState<string>()\n  useEffect(() => {\n    if (!lastDraftDocumentRev) return\n\n    const updatedKeys: QueryCacheKey[] = []\n    for (const [key, snapshot] of snapshots.entries()) {\n      if (snapshot.resultSourceMap?.documents?.length) {\n        snapshot.result = turboChargeResultIfSourceMap(\n          liveDocument,\n          projectId,\n          dataset,\n          snapshot.result,\n          perspective,\n          snapshot.resultSourceMap,\n        )\n        updatedKeys.push(key)\n      }\n    }\n    for (const updatedKey of updatedKeys) {\n      const listeners = cache.get(updatedKey)?.listeners\n      if (listeners) {\n        for (const listener of listeners) {\n          listener()\n        }\n      }\n    }\n  }, [\n    cache,\n    dataset,\n    liveDocument,\n    lastDraftDocumentRev,\n    perspective,\n    projectId,\n    snapshots,\n  ])\n  useEffect(() => {\n    if (liveDocument) {\n      setLastDraftDocumentRev(liveDocument._rev)\n    }\n  }, [liveDocument])\n\n  return (\n    <>\n      {batch.map((ids) => (\n        <GetDocuments\n          key={JSON.stringify(ids)}\n          client={client}\n          projectId={projectId}\n          dataset={dataset}\n          ids={ids}\n          perspective={perspective}\n        />\n      ))}\n    </>\n  )\n})\nTurbo.displayName = 'Turbo'\n\ninterface GetDocumentsProps extends Pick<LiveStoreProviderProps, 'client'> {\n  projectId: string\n  dataset: string\n  ids: string[]\n  perspective: DocumentCachePerspective\n}\nconst GetDocuments = memo(function GetDocuments(props: GetDocumentsProps) {\n  const { client, projectId, dataset, ids, perspective } = props\n\n  useEffect(() => {\n    const missingIds = ids.filter(\n      (id) =>\n        !unstable__documentsCache.has(\n          unstable__getDocumentCacheKey(\n            { projectId, dataset, perspective },\n            { _id: id },\n          ),\n        ),\n    )\n    if (missingIds.length === 0) return\n    client.getDocuments(missingIds).then((documents) => {\n      for (const doc of documents) {\n        if (doc && doc?._id) {\n          unstable__documentsCache.set(\n            unstable__getDocumentCacheKey(\n              { projectId, dataset, perspective },\n              doc,\n            ),\n            doc,\n          )\n        }\n      }\n      // eslint-disable-next-line no-console\n    }, console.error)\n  }, [client, dataset, ids, perspective, projectId])\n\n  return null\n})\nGetDocuments.displayName = 'GetDocuments'\n","// This is a smaller version of `useLiveQuery`, as `LiveQuery` doesn't\n// need the more advanced features `useLiveQuery`, like the `isEqual` option or the `loading` state\n\nimport type { QueryParams as ClientQueryParams } from '@sanity/client'\nimport {\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  useSyncExternalStore,\n} from 'react'\n\nimport { defineListenerContext } from './context'\nimport { useParams } from './utils'\n\n// Re-export types we use that are needed externally\nexport type { ClientQueryParams }\n\n/** @public */\nexport function useLiveQuery<\n  QueryResult,\n  QueryParams extends ClientQueryParams = ClientQueryParams,\n>(\n  initialData: QueryResult,\n  query: string,\n  queryParams2?: QueryParams,\n): QueryResult {\n  const defineStore = useContext(defineListenerContext)\n  if (!defineStore) {\n    throw new Error('useLiveQuery must be used inside a <LiveQueryProvider />')\n  }\n  const queryParams = useParams(queryParams2)\n  const store = useMemo(\n    () => defineStore<QueryResult>(initialData, query, queryParams),\n    [defineStore, initialData, queryParams, query],\n  )\n  // initialSnapshot might change before hydration is done, so deep cloning it on the first hook call\n  // helps ensure that we don't get a mismatch between the server and client snapshots\n  const [serverSnapshot] = useState(() => {\n    if (initialData === undefined) {\n      throw new Error(\n        `initialSnapshot can't be undefined, if you don't want an initial value use null instead`,\n      )\n    }\n    try {\n      return JSON.parse(JSON.stringify(initialData))\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        \"Failed to deep clone initialSnapshot, this is likely an error and an indication that the snapshot isn't JSON serializable\",\n        { initialSnapshot: initialData, error },\n      )\n      return initialData\n    }\n  })\n  const getServerSnapshot = useCallback(() => serverSnapshot, [serverSnapshot])\n\n  return useSyncExternalStore(\n    store.subscribe,\n    store.getSnapshot,\n    getServerSnapshot,\n  )\n}\n","import { ChannelReturns } from '@sanity/channels'\nimport type {\n  ClientPerspective,\n  ContentSourceMap,\n  QueryParams,\n} from '@sanity/client'\nimport { VisualEditingMsg } from '@sanity/visual-editing-helpers'\nimport { useEffect, useMemo } from 'react'\nimport { type SanityDocument, useClient } from 'sanity'\n\nimport LiveStoreProvider from './LiveStoreProvider'\nimport { useLiveQuery } from './useLiveQuery'\n\nexport default function LoaderQueries(props: {\n  activePerspective: boolean\n  liveDocument: SanityDocument | null\n  channel: ChannelReturns<VisualEditingMsg> | undefined\n  perspective: ClientPerspective\n  liveQueries: Record<string, { query: string; params: QueryParams }>\n}): any {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { activePerspective, liveDocument, channel, perspective, liveQueries } =\n    props\n  // @TODO lift up this client instance to the root, re-use it everywhere\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const studioClient = useClient({ apiVersion: '2023-10-16' })\n  const clientConfig = useMemo(() => studioClient.config(), [studioClient])\n  const client = useMemo(\n    () =>\n      studioClient.withConfig({\n        perspective,\n        resultSourceMap: 'withKeyArraySelector',\n      }),\n    [perspective, studioClient],\n  )\n  useEffect(() => {\n    if (channel && activePerspective) {\n      const { projectId, dataset } = clientConfig\n      channel.send('loader/perspective', {\n        projectId: projectId!,\n        dataset: dataset!,\n        perspective,\n      })\n    }\n  }, [activePerspective, channel, clientConfig, perspective])\n\n  return (\n    <LiveStoreProvider\n      liveDocument={liveDocument}\n      client={client}\n      perspective={perspective}\n      refreshInterval={activePerspective ? 2000 : 0}\n    >\n      {Object.entries(liveQueries).map(([key, { query, params }]) => (\n        <QuerySubscription\n          key={`${key}${perspective}`}\n          projectId={clientConfig.projectId!}\n          dataset={clientConfig.dataset!}\n          perspective={perspective}\n          query={query}\n          params={params}\n          channel={channel}\n        />\n      ))}\n    </LiveStoreProvider>\n  )\n}\n\nfunction QuerySubscription(props: {\n  projectId: string\n  dataset: string\n  perspective: ClientPerspective\n  query: string\n  params: QueryParams\n  channel: ChannelReturns<VisualEditingMsg> | undefined\n}) {\n  const { projectId, dataset, perspective, query, params, channel } = props\n\n  const data = useLiveQuery<null | {\n    result: any\n    resultSourceMap?: ContentSourceMap\n  }>(null, query, params)\n  const result = data?.result\n  const resultSourceMap = data?.resultSourceMap\n\n  useEffect(() => {\n    if (resultSourceMap) {\n      channel!.send('loader/query-change', {\n        projectId,\n        dataset,\n        perspective,\n        query,\n        params,\n        result,\n        resultSourceMap,\n      })\n    }\n  }, [\n    channel,\n    dataset,\n    params,\n    perspective,\n    projectId,\n    query,\n    result,\n    resultSourceMap,\n  ])\n\n  return null\n}\n","import { createContext, type CSSProperties } from 'react'\n\nimport { PanelElement, ResizerElement } from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useContext,\n  useLayoutEffect,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const { getPanelStyle, registerElement, unregisterElement } = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [\n    id,\n    defaultSize,\n    order,\n    maxWidth,\n    minWidth,\n    registerElement,\n    unregisterElement,\n  ])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {\n  type FunctionComponent,\n  MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport { usePanelId } from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({ $disabled }) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-shadow-outline-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({ $disabled }) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({ id: propId, order, disabled = false }) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const id = usePanelId(propId)\n\n  const {\n    activeResizer,\n    drag,\n    startDragging,\n    stopDragging,\n    registerElement,\n    unregisterElement,\n  } = context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n\n    return () => {\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, { id, order, type: 'resizer', el })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import { useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const idRef = useRef(id || uuid())\n  return idRef.current\n}\n","export function debounce<F extends (...args: any[]) => void>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: any\n  return ((...args: any[]) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import { useMemo } from 'react'\n\nimport { debounce } from '../lib/debounce'\nimport { PanelElement } from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[]\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\n\nfunction getNextWidth(\n  panel: PanelElement,\n  nextWidth: number,\n  containerWidth: number,\n) {\n  const { maxWidth: maxWidthPx, minWidth: minWidthPx } = panel\n  const maxWidth =\n    maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const { panels, widths: prevWidths } = panelsState\n  const { widths: initialWidths } = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(\n      pivotPanel,\n      width + Math.abs(delta),\n      containerWidth,\n    )\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(\n      panel,\n      width - deltaRemaining,\n      containerWidth,\n    )\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied\n          .toPrecision(10)\n          .localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n            numeric: true,\n          }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(\n  panels: PanelElement[],\n  id: string,\n  widths: number[],\n): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(\n  element: PanelElement | ResizerElement,\n): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(\n  element: PanelElement | ResizerElement,\n): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(\n  elements: ElementMap,\n): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({ order: a }, { order: b }) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let { maxWidth, minWidth } = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\nimport { usePanelsStorage } from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({\n  children,\n}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(\n    () => getSortedElements(elements).filter(isPanel),\n    [elements],\n  )\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback(\n    (id: string, data: PanelElement | ResizerElement) => {\n      setElements((prev) => {\n        if (prev.has(id)) return prev\n        const next = new Map(prev)\n        next.set(id, data)\n        return next\n      })\n    },\n    [],\n  )\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {\n        containerWidth,\n        dragOffset,\n        panelBefore,\n        panelAfter,\n        resizerRect,\n      } = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const { widths: prevWidths } = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const { widths } = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(\n        panels,\n        storedWidths,\n        window.innerWidth,\n      )\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const { panels, widths: prevWidths } = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import { ReactNode } from 'react'\nimport { useEditState } from 'sanity'\n\nexport function HoldEditState(props: { id: string; type: string }): ReactNode {\n  const { id, type } = props\n\n  useEditState(id, type)\n\n  return null\n}\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useMemo,\n} from 'react'\n\nimport {\n  PresentationNavigateContext,\n  PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport { SetPresentationParams } from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    setParams: SetPresentationParams\n  }>\n> = function (props) {\n  const { children, setParams } = props\n\n  const navigate = useCallback(\n    (preview: string) => {\n      setParams({ preview })\n    },\n    [setParams],\n  )\n\n  const context = useMemo<PresentationNavigateContextValue>(\n    () => navigate,\n    [navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={context}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport { PresentationParamsContext } from './PresentationParamsContext'\nimport { PresentationParams } from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const { children, params } = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\nimport {\n  DeskDocumentPaneParams,\n  PresentationParams,\n  SetPresentationParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    deskParams: DeskDocumentPaneParams\n    devMode: boolean\n    name: string\n    params: PresentationParams\n    setParams: SetPresentationParams\n  }>\n> = function (props) {\n  const { children, deskParams, devMode, name, params, setParams } = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      deskParams,\n      devMode,\n      name,\n      params,\n      setParams,\n    }),\n    [deskParams, devMode, name, params, setParams],\n  )\n\n  return (\n    <PresentationContext.Provider value={context}>\n      {children}\n    </PresentationContext.Provider>\n  )\n}\n","import { motion } from 'framer-motion'\nimport styled from 'styled-components'\n\nexport const IFrame = motion(styled.iframe`\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  display: block;\n`)\n","import { LaunchIcon, ResetIcon } from '@sanity/icons'\nimport { Box, Button, TextInput, TextInputClearButtonProps } from '@sanity/ui'\nimport {\n  ChangeEvent,\n  FunctionComponent,\n  KeyboardEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  value: string\n}> = function (props) {\n  const { fontSize = 1, onChange, origin, padding = 3, value } = props\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(\n    undefined,\n  )\n  const [customValidity, setCustomValidity] = useState<string | undefined>(\n    undefined,\n  )\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (\n          !absoluteValue.startsWith(origin + '/') &&\n          absoluteValue !== origin\n        ) {\n          setCustomValidity(`URL must start with ${origin}`)\n          return\n        }\n\n        const nextValue =\n          absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [onChange, origin, sessionValue],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(\n    () => ({ icon: ResetIcon }),\n    [],\n  )\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        style={{ zIndex: 1 }}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={\n          <Box padding={1} style={{ lineHeight: 0, zIndex: -1 }}>\n            <Button\n              as=\"a\"\n              fontSize={fontSize}\n              href={origin + (sessionValue || value)}\n              icon={LaunchIcon}\n              padding={padding - 1}\n              mode=\"bleed\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            />\n          </Box>\n        }\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import type { ConnectionStatus } from '@sanity/channels'\nimport { ClientPerspective } from '@sanity/client'\nimport {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  DatabaseIcon,\n  DesktopIcon,\n  EditIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n} from '@sanity/icons'\nimport { withoutSecretSearchParams } from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  ButtonTone,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n} from '@sanity/ui'\nimport { AnimatePresence, motion, MotionConfig } from 'framer-motion'\nimport {\n  ComponentType,\n  createElement,\n  Dispatch,\n  forwardRef,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { MAX_TIME_TO_OVERLAYS_CONNECTION } from '../constants'\nimport { PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { IFrame } from './IFrame'\nimport { PreviewLocationInput } from './PreviewLocationInput'\n\nconst MotionFlex = motion(Flex)\n\nconst StyledSwitch = styled(Switch)`\n  & > span {\n    width: 21px;\n    height: 13px;\n    overflow: hidden;\n\n    & > span:nth-child(1) {\n      width: 21px;\n      height: 13px;\n    }\n\n    & > span:nth-child(2) {\n      width: 9px;\n      height: 9px;\n      top: 2px;\n      left: 2px;\n    }\n  }\n\n  & input:checked + span {\n    & > span:nth-child(2) {\n      transform: translate3d(8px, 0, 0) !important;\n    }\n  }\n`\n\nconst PERSPECTIVE_TITLES: Record<ClientPerspective, string> = {\n  previewDrafts: 'Drafts',\n  published: 'Published',\n  raw: 'Raw',\n}\n\nconst PERSPECTIVE_TONES: Record<ClientPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n  raw: 'default',\n}\n\nconst PERSPECTIVE_ICONS: Record<ClientPerspective, ComponentType> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n  raw: DatabaseIcon,\n}\n\nexport const PreviewFrame = forwardRef<\n  HTMLIFrameElement,\n  {\n    initialUrl: URL\n    targetOrigin: string\n    navigatorEnabled: boolean\n    onPathChange: (nextPath: string) => void\n    overlayEnabled: boolean\n    params: PresentationParams\n    perspective: ClientPerspective\n    setPerspective: Dispatch<SetStateAction<ClientPerspective>>\n    toggleNavigator?: () => void\n    toggleOverlay: () => void\n    loadersConnection: ConnectionStatus\n    overlaysConnection: ConnectionStatus\n    previewKitConnection: ConnectionStatus\n  }\n>(function PreviewFrame(props, ref) {\n  const {\n    initialUrl,\n    targetOrigin,\n    navigatorEnabled,\n    onPathChange,\n    overlayEnabled,\n    params,\n    perspective,\n    setPerspective,\n    toggleNavigator,\n    toggleOverlay,\n    loadersConnection,\n    overlaysConnection,\n    previewKitConnection,\n  } = props\n\n  const { devMode } = usePresentationTool()\n\n  const [mode, setMode] = useState<'desktop' | 'mobile'>('desktop')\n  const prefersReducedMotion = usePrefersReducedMotion()\n\n  const setDesktopMode = useCallback(() => setMode('desktop'), [setMode])\n  const setMobileMode = useCallback(() => setMode('mobile'), [setMode])\n  const [loading, setLoading] = useState(true)\n  const [timedOut, setTimedOut] = useState(false)\n  const [refreshing, setRefreshing] = useState(false)\n  const iframeIsBusy =\n    loading || refreshing || overlaysConnection === 'connecting'\n  const somethingIsWrong =\n    overlaysConnection === 'unhealthy' ||\n    overlaysConnection === 'disconnected' ||\n    loadersConnection === 'unhealthy' ||\n    loadersConnection === 'disconnected' ||\n    previewKitConnection === 'unhealthy' ||\n    previewKitConnection === 'disconnected'\n\n  const previewLocationOrigin = useMemo(() => {\n    const { origin: previewOrigin } = new URL(\n      params.preview || '/',\n      targetOrigin,\n    )\n    return previewOrigin === location.origin ? '' : previewOrigin\n  }, [params.preview, targetOrigin])\n\n  const handleRefresh = useCallback(() => {\n    if (typeof ref === 'function' || !ref?.current) {\n      return\n    }\n\n    // Funky way to reload an iframe without CORS issues\n    // eslint-disable-next-line no-self-assign\n    // ref.current.src = ref.current.src\n    ref.current.src = `${targetOrigin}${params.preview || '/'}`\n\n    setRefreshing(true)\n  }, [params.preview, targetOrigin, ref])\n  const handleRetry = useCallback(() => {\n    if (typeof ref === 'function' || !ref?.current) {\n      return\n    }\n\n    ref.current.src = initialUrl.toString()\n\n    setRefreshing(true)\n  }, [ref, initialUrl])\n\n  const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] =\n    useState(false)\n  useEffect(() => {\n    if (loading || refreshing) {\n      return\n    }\n\n    if (overlaysConnection === 'connecting') {\n      const timeout = setTimeout(() => {\n        setShowOverlaysConnectionState(true)\n      }, 3000)\n      return () => clearTimeout(timeout)\n    }\n    return\n  }, [overlaysConnection, loading, refreshing])\n  useEffect(() => {\n    if (loading || refreshing || !showOverlaysConnectionStatus) {\n      return\n    }\n    if (overlaysConnection === 'connected') {\n      setTimedOut(false)\n    }\n    if (overlaysConnection === 'connecting') {\n      const timeout = setTimeout(() => {\n        setTimedOut(true)\n        // eslint-disable-next-line no-console\n        console.error(\n          `Unable to connect to overlays. Make sure you're calling the 'enableOverlays' function in '@sanity/overlays' correctly, and that its 'allowStudioOrigin' property is set to '${location.origin}'`,\n        )\n      }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n      return () => clearTimeout(timeout)\n    }\n    return\n  }, [overlaysConnection, loading, refreshing, showOverlaysConnectionStatus])\n\n  const previewLocationRoute = useMemo(() => {\n    const previewUrl = new URL(params.preview || '/', targetOrigin)\n    const { pathname, search } = withoutSecretSearchParams(previewUrl)\n\n    return `${pathname}${search}`\n  }, [params.preview, targetOrigin])\n\n  const onIFrameLoad = useCallback(() => {\n    setLoading(false)\n    setRefreshing(false)\n  }, [])\n\n  return (\n    <MotionConfig\n      transition={prefersReducedMotion ? { duration: 0 } : undefined}\n    >\n      <TooltipDelayGroupProvider delay={1000}>\n        <Card\n          flex=\"none\"\n          padding={2}\n          shadow={1}\n          style={{ position: 'relative' }}\n        >\n          <Flex align=\"center\" gap={2} style={{ minHeight: 0 }}>\n            {toggleNavigator && (\n              <Tooltip\n                content={<Text size={1}>Toggle navigator</Text>}\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Toggle navigator\"\n                  fontSize={1}\n                  icon={PanelLeftIcon}\n                  mode=\"bleed\"\n                  onClick={toggleNavigator}\n                  padding={3}\n                  selected={navigatorEnabled}\n                />\n              </Tooltip>\n            )}\n\n            <Tooltip\n              content={\n                <Flex align=\"center\" style={{ whiteSpace: 'nowrap' }}>\n                  <Box padding={1}>\n                    <Text size={1}>\n                      {overlayEnabled\n                        ? 'Disable edit overlay'\n                        : 'Enable edit overlay'}\n                    </Text>\n                  </Box>\n                </Flex>\n              }\n              fallbackPlacements={['bottom-start']}\n              padding={1}\n              placement=\"bottom\"\n              portal\n            >\n              <Card\n                as=\"label\"\n                flex=\"none\"\n                padding={3}\n                style={{\n                  lineHeight: 0,\n                  borderRadius: 999,\n                  userSelect: 'none',\n                }}\n                tone={overlayEnabled ? 'positive' : undefined}\n              >\n                <Flex align=\"center\" gap={2}>\n                  <div style={{ margin: -2 }}>\n                    <StyledSwitch\n                      checked={overlayEnabled}\n                      onChange={toggleOverlay}\n                      disabled={iframeIsBusy}\n                    />\n                  </div>\n                  <Box>\n                    <Text muted size={1} weight=\"medium\">\n                      Edit\n                    </Text>\n                  </Box>\n                </Flex>\n              </Card>\n            </Tooltip>\n\n            {devMode && (\n              <Tooltip\n                content={\n                  <Text size={1}>\n                    {refreshing ? 'Refreshing…' : 'Refresh preview'}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Refresh preview\"\n                  fontSize={1}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={refreshing}\n                  onClick={handleRefresh}\n                  padding={3}\n                />\n              </Tooltip>\n            )}\n\n            <Box flex={1}>\n              <PreviewLocationInput\n                onChange={onPathChange}\n                origin={previewLocationOrigin}\n                value={previewLocationRoute}\n              />\n            </Box>\n\n            <Flex align=\"center\" flex=\"none\" gap={1}>\n              <MenuButton\n                button={\n                  <Button\n                    fontSize={1}\n                    iconRight={ChevronDownIcon}\n                    mode=\"bleed\"\n                    padding={3}\n                    space={2}\n                    text={PERSPECTIVE_TITLES[perspective]}\n                    loading={\n                      iframeIsBusy ||\n                      (loadersConnection === 'connecting' &&\n                        previewKitConnection !== 'connected')\n                    }\n                    disabled={loadersConnection !== 'connected'}\n                  />\n                }\n                id=\"perspective-menu\"\n                menu={\n                  <Menu style={{ maxWidth: 240 }}>\n                    <MenuItem\n                      fontSize={1}\n                      onClick={() => setPerspective('previewDrafts')}\n                      padding={3}\n                      pressed={perspective === 'previewDrafts'}\n                      tone={PERSPECTIVE_TONES['previewDrafts']}\n                    >\n                      <Flex align=\"flex-start\" gap={3}>\n                        <Box flex=\"none\">\n                          <Text size={1}>\n                            {createElement(PERSPECTIVE_ICONS['previewDrafts'])}\n                          </Text>\n                        </Box>\n                        <Stack flex={1} space={2}>\n                          <Text size={1} weight=\"medium\">\n                            {PERSPECTIVE_TITLES['previewDrafts']}\n                          </Text>\n                          <Text muted size={1}>\n                            View this page with latest draft content\n                          </Text>\n                        </Stack>\n                        <Box flex=\"none\">\n                          <Text\n                            muted\n                            size={1}\n                            style={{\n                              opacity: perspective === 'previewDrafts' ? 1 : 0,\n                            }}\n                          >\n                            <CheckmarkIcon />\n                          </Text>\n                        </Box>\n                      </Flex>\n                    </MenuItem>\n                    <MenuItem\n                      fontSize={1}\n                      onClick={() => setPerspective('published')}\n                      padding={3}\n                      pressed={perspective === 'published'}\n                      tone={PERSPECTIVE_TONES['published']}\n                    >\n                      <Flex align=\"flex-start\" gap={3}>\n                        <Box flex=\"none\">\n                          <Text size={1}>\n                            {createElement(PERSPECTIVE_ICONS['published'])}\n                          </Text>\n                        </Box>\n                        <Stack flex={1} space={2}>\n                          <Text size={1} weight=\"medium\">\n                            {PERSPECTIVE_TITLES['published']}\n                          </Text>\n                          <Text muted size={1}>\n                            View this page with published content\n                          </Text>\n                        </Stack>\n                        <Box flex=\"none\">\n                          <Text\n                            muted\n                            size={1}\n                            style={{\n                              opacity: perspective === 'published' ? 1 : 0,\n                            }}\n                          >\n                            <CheckmarkIcon />\n                          </Text>\n                        </Box>\n                      </Flex>\n                    </MenuItem>\n                  </Menu>\n                }\n                popover={{\n                  // arrow: false,\n                  constrainSize: true,\n                  placement: 'bottom',\n                  portal: true,\n                }}\n              />\n            </Flex>\n\n            <Flex align=\"center\" flex=\"none\" gap={1}>\n              <Tooltip\n                content={<Text size={1}>Full viewport</Text>}\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Full viewport\"\n                  fontSize={1}\n                  icon={DesktopIcon}\n                  mode=\"bleed\"\n                  onClick={setDesktopMode}\n                  padding={3}\n                  selected={mode === 'desktop'}\n                />\n              </Tooltip>\n              <Tooltip\n                content={<Text size={1}>Narrow viewport</Text>}\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Narrow viewport\"\n                  fontSize={1}\n                  icon={MobileDeviceIcon}\n                  mode=\"bleed\"\n                  onClick={setMobileMode}\n                  padding={3}\n                  selected={mode === 'mobile'}\n                />\n              </Tooltip>\n            </Flex>\n          </Flex>\n        </Card>\n\n        <Card flex={1} tone=\"transparent\">\n          <Flex\n            align=\"center\"\n            height=\"fill\"\n            justify=\"center\"\n            padding={mode === 'desktop' ? 0 : 2}\n            sizing=\"border\"\n            style={{\n              position: 'relative',\n              cursor: iframeIsBusy ? 'wait' : undefined,\n            }}\n          >\n            <AnimatePresence>\n              {!somethingIsWrong &&\n              !loading &&\n              !refreshing &&\n              showOverlaysConnectionStatus &&\n              loadersConnection === 'connecting' ? (\n                <MotionFlex\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  variants={spinnerVariants}\n                  justify=\"center\"\n                  align=\"center\"\n                  style={{\n                    inset: `0`,\n                    position: `absolute`,\n                    backdropFilter: timedOut\n                      ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                      : 'blur(2px)',\n                    ['transition' as string]:\n                      'backdrop-filter 0.2s ease-in-out',\n                    zIndex: 1,\n                  }}\n                >\n                  <Flex\n                    style={{ ...sizes[mode] }}\n                    justify=\"center\"\n                    align=\"center\"\n                  >\n                    <Card\n                      radius={2}\n                      tone={timedOut ? 'caution' : 'inherit'}\n                      padding={4}\n                      shadow={1}\n                    >\n                      <Flex\n                        justify=\"center\"\n                        align=\"center\"\n                        direction=\"column\"\n                        gap={4}\n                      >\n                        <Spinner muted />\n                        <Text muted size={1}>\n                          {timedOut ? (\n                            <>\n                              Unable to connect, check the browser console for\n                              more information.\n                            </>\n                          ) : (\n                            'Connecting…'\n                          )}\n                        </Text>\n                      </Flex>\n                    </Card>\n                  </Flex>\n                </MotionFlex>\n              ) : loading || iframeIsBusy ? (\n                <MotionFlex\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  variants={spinnerVariants}\n                  justify=\"center\"\n                  align=\"center\"\n                  style={{\n                    inset: `0`,\n                    position: `absolute`,\n                    // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                  }}\n                >\n                  <Flex\n                    style={{ ...sizes[mode] }}\n                    justify=\"center\"\n                    align=\"center\"\n                    direction=\"column\"\n                    gap={4}\n                  >\n                    <Spinner muted />\n                    <Text muted size={1}>\n                      Loading…\n                    </Text>\n                  </Flex>\n                </MotionFlex>\n              ) : somethingIsWrong && !iframeIsBusy ? (\n                <MotionFlex\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  variants={errorVariants}\n                  justify=\"center\"\n                  align=\"center\"\n                  style={{\n                    background: 'var(--card-bg-color)',\n                    inset: `0`,\n                    position: `absolute`,\n                    borderTop: '1px solid transparent',\n                    boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                  }}\n                >\n                  <ErrorCard\n                    flex={1}\n                    message=\"Could not connect to the preview\"\n                    onRetry={handleRetry}\n                  >\n                    {devMode && (\n                      <>\n                        {(overlaysConnection === 'unhealthy' ||\n                          overlaysConnection === 'disconnected') && (\n                          <Card padding={3} radius={2} tone=\"critical\">\n                            <Stack space={3}>\n                              <Label muted size={0}>\n                                Overlay connection status\n                              </Label>\n                              <Code size={1}>{overlaysConnection}</Code>\n                            </Stack>\n                          </Card>\n                        )}\n\n                        {(loadersConnection === 'unhealthy' ||\n                          loadersConnection === 'disconnected') && (\n                          <Card padding={3} radius={2} tone=\"critical\">\n                            <Stack space={3}>\n                              <Label muted size={0}>\n                                Loader connection status\n                              </Label>\n                              <Code size={1}>{loadersConnection}</Code>\n                            </Stack>\n                          </Card>\n                        )}\n                      </>\n                    )}\n                  </ErrorCard>\n                </MotionFlex>\n              ) : null}\n            </AnimatePresence>\n            <IFrame\n              ref={ref}\n              style={{\n                pointerEvents: iframeIsBusy ? 'none' : 'auto',\n                boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                borderTop: '1px solid transparent',\n              }}\n              src={initialUrl.toString()}\n              initial={['background']}\n              variants={iframeVariants}\n              animate={[\n                loading || iframeIsBusy ? 'background' : 'active',\n                refreshing ? 'reloading' : 'idle',\n                mode,\n                showOverlaysConnectionStatus ? 'timedOut' : '',\n              ]}\n              onLoad={onIFrameLoad}\n            />\n          </Flex>\n        </Card>\n      </TooltipDelayGroupProvider>\n    </MotionConfig>\n  )\n})\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst errorVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-shadow-outline-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","import { studioPath } from '@sanity/client/csm'\nimport { urlStringToPath } from '@sanity/visual-editing-helpers'\n\nexport function parsePath(rawPath: string | undefined): {\n  id: string | undefined\n  path: string | undefined\n} {\n  if (rawPath === undefined) {\n    return { id: undefined, path: undefined }\n  }\n\n  const segments = rawPath?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return {\n    id: segments[0],\n    path:\n      segments.length > 1\n        ? studioPath.toString(urlStringToPath(segments.slice(1).join('.')))\n        : undefined,\n  }\n}\n","import { studioPath } from '@sanity/client/csm'\nimport { pathToUrlString } from '@sanity/visual-editing-helpers'\nimport isEqual from 'lodash.isequal'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { NavigateOptions, RouterContextValue, RouterState } from 'sanity/router'\n\nimport { debounce } from './lib/debounce'\nimport { parsePath } from './parsePath'\nimport {\n  DeskDocumentPaneParams,\n  PresentationParams,\n  PresentationStateParams,\n  SetPresentationParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n}): {\n  deskParams: DeskDocumentPaneParams\n  navigate: (nextState: RouterState, options?: NavigateOptions) => void\n  params: PresentationParams\n  setParams: SetPresentationParams\n} {\n  const [params, setParamsState] = useState<PresentationParams>(() => {\n    const { id, path } = parsePath(\n      routerState.path && decodeURIComponent(routerState.path),\n    )\n    return {\n      id,\n      type: routerState.type,\n      path,\n      preview:\n        routerSearchParams.preview ||\n        `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams.perspective,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n    }\n  })\n\n  const setParams = useCallback((newParams: Partial<PresentationParams>) => {\n    setParamsState((state) => {\n      const nextState = { ...state, ...newParams }\n      if (isEqual(pruneObject(state), pruneObject(nextState))) {\n        return state\n      }\n      return nextState\n    })\n  }, [])\n\n  const deskParams = useMemo<DeskDocumentPaneParams>(\n    () =>\n      pruneObject({\n        inspect: params.inspect,\n        path: params.path,\n        rev: params.rev,\n        since: params.since,\n        template: params.template,\n        view: params.view,\n        // assist\n        pathKey: params.pathKey,\n        instruction: params.instruction,\n        // comments\n        comment: params.comment,\n      }),\n    [\n      params.inspect,\n      params.path,\n      params.rev,\n      params.since,\n      params.template,\n      params.view,\n      params.pathKey,\n      params.instruction,\n      params.comment,\n    ],\n  )\n\n  useEffect(() => {\n    const { type } = routerState\n    // decodeURI param in path?\n    const { id, path } = parsePath(routerState.path)\n\n    const timeout = setTimeout(\n      () =>\n        setParams({\n          id,\n          type: type === '*' ? undefined : type,\n          path,\n          preview:\n            routerSearchParams.preview ||\n            `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n          perspective: routerSearchParams.perspective,\n          inspect: routerSearchParams.inspect,\n          rev: routerSearchParams.rev,\n          since: routerSearchParams.since,\n          template: routerSearchParams.template,\n          view: routerSearchParams.view,\n          // assist\n          pathKey: routerSearchParams.pathKey,\n          instruction: routerSearchParams.instruction,\n          // comments\n          comment: routerSearchParams.comment,\n        }),\n      0,\n    )\n    return () => clearTimeout(timeout)\n  }, [initialPreviewUrl, routerSearchParams, routerState, setParams])\n\n  const navigate = useMemo(() => {\n    // Debounce navigation to mitigate various event related race conditions\n    return debounce((nextState: RouterState, options?: NavigateOptions) => {\n      const state = pruneObject(nextState)\n      routerNavigate(state, options)\n    }, 50)\n  }, [routerNavigate])\n\n  const previewRef = useRef(params.preview)\n\n  useEffect(() => {\n    const previousPreview = previewRef.current\n    previewRef.current = params.preview\n\n    const type = params.type\n    const path = params.id\n      ? pathToUrlString(\n          studioPath.fromString(\n            [params.id, params.path].filter(Boolean).join('.'),\n          ),\n        )\n      : undefined\n\n    const searchParams = pruneObject({\n      preview: params.preview,\n      perspective: params.perspective === 'published' ? 'published' : undefined,\n      inspect: params.inspect,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n    }) satisfies PresentationParams\n\n    const replace = params.preview === previousPreview\n    const timeout = setTimeout(\n      () =>\n        navigate(\n          {\n            type,\n            path,\n            _searchParams: Object.entries(\n              searchParams as Record<string, string>,\n            ),\n          },\n          { replace },\n        ),\n      0,\n    )\n    return () => clearTimeout(timeout)\n  }, [navigate, params])\n\n  return {\n    navigate,\n    setParams,\n    deskParams,\n    params,\n  }\n}\n","import { createPreviewSecret } from '@sanity/preview-url-secret/create-secret'\nimport { definePreviewUrl } from '@sanity/preview-url-secret/define-preview-url'\nimport { useMemo, useState } from 'react'\nimport {\n  SanityClient,\n  useActiveWorkspace,\n  useClient,\n  useCurrentUser,\n} from 'sanity'\nimport { suspend } from 'suspend-react'\n\nimport { PreviewUrlOption } from './types'\n\nexport function usePreviewUrl(\n  _previewUrl: PreviewUrlOption,\n  toolName: string,\n  _previewSearchParam: string | null,\n): URL {\n  const client = useClient({ apiVersion: '2023-10-16' })\n  const [previewUrl] = useState(() => _previewUrl)\n  const currentUser = useCurrentUser()\n  const resolvePreviewUrl = useMemo(() => {\n    if (typeof previewUrl === 'object') {\n      return definePreviewUrl<SanityClient>(previewUrl)\n    }\n    return previewUrl\n  }, [previewUrl])\n  const [previewSearchParam] = useState(() => {\n    if (typeof resolvePreviewUrl !== 'string' || !_previewSearchParam) {\n      return null\n    }\n    return new URL(\n      _previewSearchParam,\n      new URL(resolvePreviewUrl, location.origin),\n    )\n  })\n\n  const resolveUrlDeps = usePreviewUrlSecretDependencies(\n    toolName,\n    currentUser?.id,\n  )\n  const resolvedUrl =\n    typeof resolvePreviewUrl === 'function'\n      ? suspend(async (): Promise<string> => {\n          const { secret: previewUrlSecret } = await createPreviewSecret(\n            client,\n            '@sanity/presentation',\n            typeof window === 'undefined' ? '' : location.href,\n            currentUser?.id,\n          )\n          return resolvePreviewUrl({\n            client,\n            previewUrlSecret,\n            previewSearchParam: _previewSearchParam,\n          })\n        }, resolveUrlDeps)\n      : previewSearchParam || resolvePreviewUrl\n\n  return useMemo(() => new URL(resolvedUrl, location.origin), [resolvedUrl])\n}\n\nfunction usePreviewUrlSecretDependencies(\n  toolName: string,\n  currentUserId?: string,\n) {\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  return [\n    // Cache based on a few specific conditions\n    '@sanity/presentation',\n    basePath,\n    workspaceName,\n    toolName,\n    currentUserId,\n    resolveUUID,\n  ]\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n","import type { ConnectionStatus } from '@sanity/channels'\nimport { ChannelReturns, createChannel } from '@sanity/channels'\nimport type { ClientPerspective, QueryParams } from '@sanity/client'\nimport { studioPath } from '@sanity/client/csm'\nimport { Flex } from '@sanity/ui'\nimport {\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  type VisualEditingConnectionIds,\n  type VisualEditingMsg,\n} from '@sanity/visual-editing-helpers'\nimport {\n  type ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useUnique } from 'sanity'\nimport {\n  getPublishedId,\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n} from 'sanity'\nimport { RouterContextValue, useRouter } from 'sanity/router'\nimport styled from 'styled-components'\n\nimport { DEFAULT_TOOL_NAME } from './constants'\nimport { ContentEditor } from './editor/ContentEditor'\nimport LoaderQueries from './loader/LoaderQueries'\nimport { Panel } from './panels/Panel'\nimport { PanelResizer } from './panels/PanelResizer'\nimport { Panels } from './panels/Panels'\nimport { HoldEditState } from './perf/HoldEditState'\nimport { PresentationNavigateProvider } from './PresentationNavigateProvider'\nimport { PresentationParamsProvider } from './PresentationParamsProvider'\nimport { PresentationProvider } from './PresentationProvider'\nimport { PreviewFrame } from './preview/PreviewFrame'\nimport {\n  DeskDocumentPaneParams,\n  NavigatorOptions,\n  PresentationPluginOptions,\n  PresentationStateParams,\n} from './types'\nimport { DocumentOnPage, useDocumentsOnPage } from './useDocumentsOnPage'\nimport { useLocalState } from './useLocalState'\nimport { useParams } from './useParams'\nimport { usePreviewUrl } from './usePreviewUrl'\n\nfunction Navigator(props: NavigatorOptions) {\n  const { minWidth, maxWidth, component: NavigatorComponent } = props\n  const navigatorDisabled =\n    minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const { previewUrl: _previewUrl, components } = props.tool.options ?? {}\n  const name = props.tool.name || DEFAULT_TOOL_NAME\n  const { unstable_navigator } = components || {}\n\n  const { navigate: routerNavigate, state: routerState } =\n    useRouter() as RouterContextValue & { state: PresentationStateParams }\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams.preview || null,\n  )\n\n  const [devMode] = useState(() => {\n    const option = props.tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return (\n      typeof window !== 'undefined' && window.location.hostname === 'localhost'\n    )\n  })\n\n  // @TODO The iframe URL might change, we have to make sure we don't post Studio state to unknown origins\n  // see https://medium.com/@chiragrai3666/exploiting-postmessage-e2b01349c205\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [channel, setChannel] = useState<ChannelReturns<VisualEditingMsg>>()\n\n  const [liveQueries, setLiveQueries] = useState<\n    Record<\n      string,\n      { query: string; params: QueryParams; perspective: ClientPerspective }\n    >\n  >({})\n\n  const { setParams, params, deskParams } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n  })\n\n  const [perspective, setPerspective] = useState<ClientPerspective>(() =>\n    params.perspective === 'published' ? params.perspective : 'previewDrafts',\n  )\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective)\n\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  const navigatorProvided = !!unstable_navigator?.component\n\n  const [navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const previewRef = useRef<typeof params.preview>()\n\n  const idRef = useRef(params.id)\n\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const [preloadRefs, setPreloadRefs] = useState<DocumentOnPage[]>(() =>\n    documentsOnPage\n      .slice(0, 3)\n      .map((d) => ({ ...d, _id: getPublishedId(d._id) })),\n  )\n\n  // Update the perspective when the param changes\n  useEffect(() => {\n    if (perspective !== params.perspective) {\n      setParams({ perspective })\n    }\n  }, [params.perspective, perspective, setParams])\n\n  useEffect(() => {\n    setPreloadRefs(\n      documentsOnPage\n        .slice(0, 3)\n        .map((d) => ({ ...d, _id: getPublishedId(d._id) })),\n    )\n  }, [documentsOnPage])\n\n  useEffect(() => {\n    if (params.id !== idRef.current) {\n      idRef.current = params.id\n\n      if (params.id) {\n        setPreloadRefs((p) => {\n          const exists = p.find((d) => d._id === params.id)\n\n          if (exists) return p\n\n          return p.slice(1).concat([{ _id: params.id!, _type: params.type! }])\n        })\n      }\n    }\n  }, [params])\n\n  const [overlaysConnection, setOverlaysConnection] =\n    useState<ConnectionStatus>('fresh')\n  const [loadersConnection, setLoadersConnection] =\n    useState<ConnectionStatus>('fresh')\n  const [previewKitConnection, setPreviewKitConnection] =\n    useState<ConnectionStatus>('fresh')\n\n  useEffect(() => {\n    const iframe = iframeRef.current?.contentWindow\n\n    if (!iframe) return\n\n    const nextChannel = createChannel<VisualEditingMsg>({\n      id: 'presentation' satisfies VisualEditingConnectionIds,\n      onStatusUpdate(status, prevStatus, connection) {\n        if (connection.config.id === 'loaders') setLoadersConnection(status)\n        if (connection.config.id === 'overlays') setOverlaysConnection(status)\n        if (connection.config.id === 'preview-kit')\n          setPreviewKitConnection(status)\n      },\n      connections: [\n        {\n          target: iframe,\n          targetOrigin,\n          id: 'overlays' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n        },\n        {\n          target: iframe,\n          targetOrigin,\n          id: 'loaders' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n        },\n        {\n          target: iframe,\n          targetOrigin,\n          id: 'preview-kit' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n        },\n      ],\n      handler(type, data) {\n        if (type === 'overlay/focus' && 'id' in data) {\n          setParams({\n            id: data.id,\n            path: data.path,\n            type: data.type,\n          })\n        } else if (type === 'overlay/navigate') {\n          if (previewRef.current !== data.url) {\n            const isInitialNavigation = previewRef.current === undefined\n\n            previewRef.current = data.url\n            setParams(\n              isInitialNavigation\n                ? { preview: data.url }\n                : { id: undefined, type: undefined, preview: data.url },\n            )\n          }\n        } else if (type === 'overlay/toggle') {\n          setOverlayEnabled(data.enabled)\n        } else if (\n          type === 'loader/documents' ||\n          (type === 'preview-kit/documents' &&\n            data.projectId === projectId &&\n            data.dataset === dataset)\n        ) {\n          setDocumentsOnPage(data.perspective, data.documents)\n        } else if (\n          type === 'loader/query-listen' &&\n          data.projectId === projectId &&\n          data.dataset === dataset\n        ) {\n          setLiveQueries((prev) => ({\n            ...prev,\n            [getQueryCacheKey(data.query, data.params)]: {\n              perspective: data.perspective,\n              query: data.query,\n              params: data.params,\n            },\n          }))\n        }\n      },\n    })\n    setChannel(nextChannel)\n\n    return () => {\n      nextChannel.disconnect()\n      setChannel(undefined)\n    }\n  }, [dataset, projectId, setDocumentsOnPage, setParams, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    // eslint-disable-next-line no-warning-comments\n    // @todo nextDocumentId may not be needed with this strategy\n    (nextDocumentId: string, nextPath: Path) => {\n      setParams({\n        // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n        path: studioPath.toString(nextPath),\n      })\n    },\n    [setParams],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (\n        url.origin === initialPreviewUrl.origin &&\n        preview !== params.preview\n      ) {\n        setParams({ id: undefined, path: undefined, preview })\n      }\n    },\n    [initialPreviewUrl, params, setParams],\n  )\n\n  const handleDeskParams = useCallback(\n    (deskParams: DeskDocumentPaneParams) => {\n      setParams({ ...deskParams })\n    },\n    [setParams],\n  )\n\n  useEffect(() => {\n    if (params.id && params.path) {\n      channel?.send('presentation/focus', { id: params.id, path: params.path })\n    } else {\n      channel?.send('presentation/blur', undefined)\n    }\n  }, [channel, params.id, params.path])\n\n  // Dispatch a navigation message whenever the preview param changes\n  // @todo This will cause a reflection of received navigation messages which could be problematic\n  useEffect(() => {\n    if (\n      previewRef.current &&\n      params.preview &&\n      previewRef.current !== params.preview\n    ) {\n      previewRef.current = params.preview\n      channel?.send('presentation/navigate', {\n        url: params.preview,\n        type: 'push',\n      })\n    }\n  }, [channel, params.preview])\n\n  const toggleOverlay = useCallback(\n    () => channel?.send('presentation/toggleOverlay', undefined),\n    [channel],\n  )\n\n  // The current document being edited, it's put on the fast track for super low latency updates\n  const [liveDocument, setLiveDocument] = useState<SanityDocument | null>(null)\n  const onDocumentChange = useCallback(\n    (document: SanityDocument | null) => setLiveDocument(document),\n    [],\n  )\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  return (\n    <>\n      <PresentationProvider\n        deskParams={deskParams}\n        devMode={devMode}\n        name={name}\n        params={params}\n        setParams={setParams}\n      >\n        {/* perf improvement: preload edit state */}\n        {preloadRefs.map((d) => (\n          <HoldEditState id={d._id} key={d._id} type={d._type} />\n        ))}\n\n        <PresentationNavigateProvider setParams={setParams}>\n          <PresentationParamsProvider params={params}>\n            <Container height=\"fill\">\n              <Panels>\n                {navigatorProvided && navigatorEnabled && (\n                  <Navigator {...unstable_navigator} />\n                )}\n                <Panel\n                  id=\"preview\"\n                  minWidth={325}\n                  defaultSize={navigatorEnabled ? 50 : 75}\n                  order={3}\n                >\n                  <Flex direction=\"column\" flex={1} height=\"fill\">\n                    <PreviewFrame\n                      initialUrl={initialPreviewUrl}\n                      navigatorEnabled={navigatorEnabled}\n                      onPathChange={handlePreviewPath}\n                      overlayEnabled={overlayEnabled}\n                      params={params}\n                      perspective={perspective}\n                      ref={iframeRef}\n                      setPerspective={setPerspective}\n                      targetOrigin={targetOrigin}\n                      toggleNavigator={toggleNavigator}\n                      toggleOverlay={toggleOverlay}\n                      loadersConnection={loadersConnection}\n                      overlaysConnection={overlaysConnection}\n                      previewKitConnection={previewKitConnection}\n                    />\n                  </Flex>\n                </Panel>\n                <PanelResizer order={4} />\n                <Panel id=\"content\" minWidth={325} order={5}>\n                  <ContentEditor\n                    refs={documentsOnPage}\n                    deskParams={deskParams}\n                    documentId={params.id}\n                    documentType={params.type}\n                    onDeskParams={handleDeskParams}\n                    onFocusPath={handleFocusPath}\n                    onDocumentChange={onDocumentChange}\n                    previewUrl={params.preview}\n                  />\n                </Panel>\n              </Panels>\n            </Container>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      {channel && (\n        <>\n          <LoaderQueries\n            key=\"published\"\n            activePerspective={perspective === 'published'}\n            channel={channel}\n            liveQueries={liveQueries}\n            perspective=\"published\"\n            // Only send the liveDocument if it's a published document\n            liveDocument={\n              liveDocument?._id?.startsWith('drafts.') ? null : liveDocument\n            }\n          />\n          <LoaderQueries\n            key=\"previewDrafts\"\n            activePerspective={perspective === 'previewDrafts'}\n            channel={channel}\n            liveQueries={liveQueries}\n            perspective=\"previewDrafts\"\n            liveDocument={liveDocument}\n          />\n        </>\n      )}\n    </>\n  )\n}\n","import { ClientPerspective } from '@sanity/client'\nimport { useCallback, useMemo, useState } from 'react'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n  _projectId?: string\n  dataset?: string\n}\n\nexport function useDocumentsOnPage(\n  perspective: ClientPerspective,\n): [\n  DocumentOnPage[],\n  (perspective: ClientPerspective, state: DocumentOnPage[]) => void,\n] {\n  const [state, setState] = useState<\n    Record<ClientPerspective, Map<string, DocumentOnPage>>\n  >(() => ({ published: new Map(), previewDrafts: new Map(), raw: new Map() }))\n\n  const setDocumentsOnPage = useCallback(\n    (perspective: ClientPerspective, documents: DocumentOnPage[]) => {\n      setState((state) => {\n        let changed = false\n        let map = state[perspective]\n        const getKey = (document: DocumentOnPage) => {\n          return `${document._projectId}-${document.dataset}-${document._type}-${document._id}`\n        }\n        const knownKeys = new Set<ReturnType<typeof getKey>>()\n        // Add anything new, and track all keys\n        for (const document of documents) {\n          const key = getKey(document)\n          knownKeys.add(key)\n          if (!map.has(key)) {\n            map.set(key, document)\n            changed = true\n          }\n        }\n        // Remove anything that is no longer on the page\n        for (const key of map.keys()) {\n          if (!knownKeys.has(key)) {\n            map.delete(key)\n            changed = true\n          }\n        }\n\n        if (changed) {\n          map = new Map(map)\n          return { ...state, [perspective]: new Map(map) }\n        }\n\n        return state\n      })\n    },\n    [],\n  )\n\n  const documentsOnPageMap = useMemo(() => {\n    return state[perspective]\n  }, [perspective, state])\n\n  const documentsOnPage = useMemo(() => {\n    return [...documentsOnPageMap.values()]\n  }, [documentsOnPageMap])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport function useLocalState<T>(\n  key: string,\n  defaultValue: T,\n): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n"],"names":["jsxRuntime","require","csm","ui","react","sanity","router","styled","index","desk","groqStore","mendoza","icons","withoutSecretSearchParams","framerMotion","isEqual","createSecret","definePreviewUrl","suspendReact","_interopDefaultCompat","e","default","styled__default","isEqual__default","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","native","randomUUID","v4","options","buf","offset","rnds","random","arr","unsafeStringify","RESPONSE_TIMEOUT","HEARTBEAT_INTERVAL","INTERNAL_MSG_TYPES","HANDSHAKE_MSG_TYPES","isObject","value","Boolean","Array","isArray","isInternalMessage","type","some","t","isHandshakeMessage","isHeartbeatMessage","createChannel","config","inFrame","window","self","top","connections","map","connection","buffer","heartbeat","id","status","stopHeartbeat","clearInterval","setConnectionStatus","newStatus","prevStatus","onStatusUpdate","toFlush","splice","length","forEach","data","post","flush","heartbeatInverval","setInterval","send","startHeartbeat","Promise","resolve","reject","msg","uuid","connectionId","from","to","isInternal","isHandshake","isHeartbeat","activeConnection","find","c","maxWait","setTimeout","reason","transact","eventData","responseTo","removeEventListener","clearTimeout","addEventListener","targetOrigin","target","postMessage","console","error","postMany","allSettled","handleEvents","source","origin","findConnection","handleHandshake","args","handler","async","connectionSubset","results","result","inactiveConnections","filter","includes","all","connect","disconnect","connectionsToDisconnect","n","r","o","u","s","split","exec","Number","_key","alt","ctrl","mod","test","navigator","platform","shift","every","key","toUpperCase","ErrorCard","props","children","message","onRetry","restProps","jsx","Card","height","Flex","align","justify","Container","padding","sizing","width","jsxs","Stack","space","Text","size","weight","muted","Box","Button","fontSize","mode","onClick","text","usePresentationTool","presentation","useContext","PresentationContext","resolveQueryStringFromParams","nextParams","allowed","params","parts","Object","entries","join","encodeQueryString","reduce","obj","BackLink","forwardRef","ref","deskParams","StateLink","state","_searchParams","preview","title","ReferenceChildLink","documentId","documentType","path","PresentationPaneRouterProvider","onDeskParams","previewUrl","refs","routerState","resolvePathFromState","useRouter","routerSearchParams","useUnique","fromEntries","createPathWithParams","useCallback","context","useMemo","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","childLinkProps","childId","getPublishedId","_id","_type","ParameterizedLink","Fragment","closeCurrentAndAfter","warn","handleEditReference","replaceCurrent","pane","closeCurrent","duplicateCurrent","setView","viewId","setParams","inspect","setPayload","navigateIntent","intentName","intentParams","PaneRouterContext","Provider","RootLayout","PaneLayout","Root","WrappedCode","Code","DocumentListPane","devMode","ids","schemaTypeName","errorParams","setErrorParams","useState","handleRetry","useEffect","flex","overflow","radius","tone","Label","ErrorBoundary","onCatch","DeskToolProvider","direction","DeskDocumentListPane","itemId","paneKey","DocumentListPanel","DocumentPane","onFocusPath","paneDocumentNode","setLayoutCollapsed","useDeskTool","handleRootCollapse","handleRootExpand","style","onExpand","onCollapse","DeskDocumentPane","DocumentPanel","onDocumentChange","editState","useEditState","documentValue","draft","published","handleFocusPath","ContentEditor","defineListenerContext","createContext","IsEnabledContext","warnedAboutCrossDatasetReference","turboChargeResultIfSourceMap","liveDocument","projectId","dataset","perspective","resultSourceMap","applySourceDocuments","sourceDocument","_projectId","unstable__getDocumentCacheKey","unstable__documentsCache","get","getQueryCacheKey","query","JSON","stringify","LiveStoreProvider","memo","client","refreshInterval","subscriptions","setSubscriptions","snapshots","Map","hooks","cache","subscribe","listener","has","set","listeners","Set","prevSubscriptions","hook","TypeError","add","delete","sub","useHooks","initialSnapshot","onStoreChange","unsubscribe","getSnapshot","turboIds","setTurboIds","turboIdsFromSourceMap","contentSourceMap","nextTurboIds","documents","prevTurboIds","mergedTurboIds","sort","Context","Turbo","QuerySubscription","displayName","LiveStoreProvider$1","setError","revalidate","startRefresh","shouldPause","online","setOnline","onLine","online2","offline","visibilityState","useSyncExternalStore","onVisibilityChange","document","useShouldPause","setState","timeout","onFocus","useRevalidate","shouldRefetch","fulfilled","controller","AbortController","onFinally","signal","fetch","tag","filterResponse","aborted","values","effect","catch","name","finally","abort","snapshot","nextTurboIdsSnapshot","batch","setBatch","batchSet","flat","nextBatch","turboId","nextBatchSlice","prevBatch","lastMutatedDocumentId","setLastMutatedDocumentId","subscription","listen","events","effectFormat","includePreviousRevision","includeResult","update","effects","apply","cachedDocument","peek","patchDoc","_rev","patchedDocument","applyPatch","updatedKeys","updatedKey","lastDraftDocumentRev","setLastDraftDocumentRev","GetDocuments","missingIds","getDocuments","then","doc","useLiveQuery","initialData","queryParams2","defineStore","queryParams","stringifiedParams","parse","useParams","store","serverSnapshot","getServerSnapshot","LoaderQueries","activePerspective","channel","liveQueries","studioClient","useClient","apiVersion","clientConfig","withConfig","PanelsContext","div","Panel","defaultSize","minWidth","maxWidth","order","getPanelStyle","registerElement","unregisterElement","useLayoutEffect","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","el","useRef","current","usePanelId","activeResizer","drag","startDragging","stopDragging","isDragging","onMouseDown","event","nativeEvent","onDrag","onDragStop","blur","debounce","fn","timer","itemKey","getStoredItem","localStorage","getItem","getKeyForPanels","panels","panel","usePanelsStorage","widths","setItem","setStoredItem","setDebounced","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getPanelWidth","findIndex","toPrecision","getOffset","handleElement","initialOffset","initialHandleElementRect","clientX","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","a","b","validateWidths","widthsToValidate","total","remainingWidth","toFixed","abs","PanelsWrapper","Panels","panelsEl","setElements","setWidths","setActiveResizer","panelsRef","flexGrow","pointerEvents","prev","next","dragRef","innerWidth","dragOffset","panelAfter","panelBefore","resizerIndex","resizerRect","startX","elementsArr","resizer","resizeElement","acc","pageX","preventDefault","stopPropagation","prevWidths","nextWidths","delta","panelsState","initialDragState","initialWidths","pivotPanel","deltaApplied","localeCompare","numeric","getNextWidths","widthsChanged","prevWidth","storage","storedWidths","validatedStoredWidths","defaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","getDefaultWidths","resizeObserver","ResizeObserver","observe","HoldEditState","PresentationNavigateProvider","navigate","PresentationNavigateContext","PresentationParamsProvider","PresentationParamsContext","PresentationProvider","IFrame","motion","iframe","PreviewLocationInput","onChange","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","currentTarget","handleKeyDown","absoluteValue","startsWith","nextValue","handleBlur","resetButton","icon","ResetIcon","TextInput","clearButton","onBlur","onClear","onKeyDownCapture","zIndex","suffix","lineHeight","as","href","LaunchIcon","rel","MotionFlex","StyledSwitch","Switch","PERSPECTIVE_TITLES","previewDrafts","raw","PERSPECTIVE_TONES","PERSPECTIVE_ICONS","EditIcon","PublishIcon","DatabaseIcon","PreviewFrame","initialUrl","navigatorEnabled","onPathChange","overlayEnabled","setPerspective","toggleNavigator","toggleOverlay","loadersConnection","overlaysConnection","previewKitConnection","setMode","prefersReducedMotion","usePrefersReducedMotion","setDesktopMode","setMobileMode","loading","setLoading","timedOut","setTimedOut","refreshing","setRefreshing","iframeIsBusy","somethingIsWrong","previewLocationOrigin","previewOrigin","URL","location","handleRefresh","src","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","M","previewLocationRoute","pathname","search","onIFrameLoad","MotionConfig","transition","duration","TooltipDelayGroupProvider","delay","shadow","position","gap","minHeight","Tooltip","content","fallbackPlacements","placement","portal","PanelLeftIcon","selected","whiteSpace","borderRadius","userSelect","margin","checked","RefreshIcon","MenuButton","button","iconRight","ChevronDownIcon","menu","Menu","MenuItem","pressed","createElement","opacity","CheckmarkIcon","popover","constrainSize","DesktopIcon","MobileDeviceIcon","cursor","AnimatePresence","initial","animate","exit","variants","spinnerVariants","inset","sizes","Spinner","errorVariants","background","borderTop","boxShadow","backdropFilter","iframeVariants","onLoad","desktop","mobile","scale","idle","reloading","active","parsePath","rawPath","segments","studioPath","urlStringToPath","pruneObject","initialPreviewUrl","routerNavigate","setParamsState","decodeURIComponent","rev","since","template","view","pathKey","instruction","comment","newParams","nextState","previewRef","previousPreview","pathToUrlString","fromString","searchParams","replace","usePreviewUrl","_previewUrl","toolName","_previewSearchParam","currentUser","useCurrentUser","resolvePreviewUrl","previewSearchParam","resolveUrlDeps","currentUserId","workspace","useActiveWorkspace","basePath","activeWorkspace","resolveUUID","usePreviewUrlSecretDependencies","resolvedUrl","suspend","secret","previewUrlSecret","createPreviewSecret","Symbol","Navigator","component","NavigatorComponent","navigatorDisabled","exports","components","tool","DEFAULT_TOOL_NAME","unstable_navigator","option","hostname","iframeRef","setChannel","setLiveQueries","documentsOnPage","setDocumentsOnPage","changed","getKey","knownKeys","keys","perspective2","documentsOnPageMap","useDocumentsOnPage","setOverlayEnabled","navigatorProvided","setNavigatorEnabled","defaultValue","setValue","useLocalState","useProjectId","useDataset","idRef","enabled","preloadRefs","setPreloadRefs","d","p","concat","setOverlaysConnection","setLoadersConnection","setPreviewKitConnection","contentWindow","nextChannel","url","isInitialNavigation","nextDocumentId","nextPath","handlePreviewPath","handleDeskParams","setLiveDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}